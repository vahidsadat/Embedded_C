
11_Systick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001280  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08001420  08001420  00011420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014d4  080014d4  000114d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014d8  080014d8  000114d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08001540  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08001540  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002a65  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000081e  00000000  00000000  00022af9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000180  00000000  00000000  00023318  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000128  00000000  00000000  00023498  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002028  00000000  00000000  000235c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001daf  00000000  00000000  000255e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000546e1  00000000  00000000  00027397  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0007ba78  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b78  00000000  00000000  0007baf4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001408 	.word	0x08001408

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001408 	.word	0x08001408

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#define GPIOAEN		(1U<<0)
#define PIN5		(1U<<5)
#define LED_PIN		(PIN5)

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0

	uart2_tx_init();
 8000284:	f000 f8f6 	bl	8000474 <uart2_tx_init>
	RCC->AHB1ENR	|=GPIOAEN;
 8000288:	4b0f      	ldr	r3, [pc, #60]	; (80002c8 <main+0x48>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028c:	4a0e      	ldr	r2, [pc, #56]	; (80002c8 <main+0x48>)
 800028e:	f043 0301 	orr.w	r3, r3, #1
 8000292:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOA->MODER |=(1U<<10);
 8000294:	4b0d      	ldr	r3, [pc, #52]	; (80002cc <main+0x4c>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	4a0c      	ldr	r2, [pc, #48]	; (80002cc <main+0x4c>)
 800029a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800029e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 80002a0:	4b0a      	ldr	r3, [pc, #40]	; (80002cc <main+0x4c>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	4a09      	ldr	r2, [pc, #36]	; (80002cc <main+0x4c>)
 80002a6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80002aa:	6013      	str	r3, [r2, #0]

	while(1)
	{


		printf("A second just passed !! \n\r");
 80002ac:	4808      	ldr	r0, [pc, #32]	; (80002d0 <main+0x50>)
 80002ae:	f000 f9c7 	bl	8000640 <iprintf>
		GPIOA->ODR ^=LED_PIN;
 80002b2:	4b06      	ldr	r3, [pc, #24]	; (80002cc <main+0x4c>)
 80002b4:	695b      	ldr	r3, [r3, #20]
 80002b6:	4a05      	ldr	r2, [pc, #20]	; (80002cc <main+0x4c>)
 80002b8:	f083 0320 	eor.w	r3, r3, #32
 80002bc:	6153      	str	r3, [r2, #20]
		systickDelayMs(1000);
 80002be:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002c2:	f000 f8a1 	bl	8000408 <systickDelayMs>
		printf("A second just passed !! \n\r");
 80002c6:	e7f1      	b.n	80002ac <main+0x2c>
 80002c8:	40023800 	.word	0x40023800
 80002cc:	40020000 	.word	0x40020000
 80002d0:	08001420 	.word	0x08001420

080002d4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e0:	2300      	movs	r3, #0
 80002e2:	617b      	str	r3, [r7, #20]
 80002e4:	e00a      	b.n	80002fc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002e6:	f3af 8000 	nop.w
 80002ea:	4601      	mov	r1, r0
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	b2ca      	uxtb	r2, r1
 80002f4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	3301      	adds	r3, #1
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	697a      	ldr	r2, [r7, #20]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	429a      	cmp	r2, r3
 8000302:	dbf0      	blt.n	80002e6 <_read+0x12>
	}

return len;
 8000304:	687b      	ldr	r3, [r7, #4]
}
 8000306:	4618      	mov	r0, r3
 8000308:	3718      	adds	r7, #24
 800030a:	46bd      	mov	sp, r7
 800030c:	bd80      	pop	{r7, pc}

0800030e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800030e:	b580      	push	{r7, lr}
 8000310:	b086      	sub	sp, #24
 8000312:	af00      	add	r7, sp, #0
 8000314:	60f8      	str	r0, [r7, #12]
 8000316:	60b9      	str	r1, [r7, #8]
 8000318:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	2300      	movs	r3, #0
 800031c:	617b      	str	r3, [r7, #20]
 800031e:	e009      	b.n	8000334 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	1c5a      	adds	r2, r3, #1
 8000324:	60ba      	str	r2, [r7, #8]
 8000326:	781b      	ldrb	r3, [r3, #0]
 8000328:	4618      	mov	r0, r3
 800032a:	f000 f897 	bl	800045c <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf1      	blt.n	8000320 <_write+0x12>
	}
	return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_close>:

int _close(int file)
{
 8000346:	b480      	push	{r7}
 8000348:	b083      	sub	sp, #12
 800034a:	af00      	add	r7, sp, #0
 800034c:	6078      	str	r0, [r7, #4]
	return -1;
 800034e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000352:	4618      	mov	r0, r3
 8000354:	370c      	adds	r7, #12
 8000356:	46bd      	mov	sp, r7
 8000358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035c:	4770      	bx	lr

0800035e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
 8000366:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000368:	683b      	ldr	r3, [r7, #0]
 800036a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800036e:	605a      	str	r2, [r3, #4]
	return 0;
 8000370:	2300      	movs	r3, #0
}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr

0800037e <_isatty>:

int _isatty(int file)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
	return 1;
 8000386:	2301      	movs	r3, #1
}
 8000388:	4618      	mov	r0, r3
 800038a:	370c      	adds	r7, #12
 800038c:	46bd      	mov	sp, r7
 800038e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000392:	4770      	bx	lr

08000394 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000394:	b480      	push	{r7}
 8000396:	b085      	sub	sp, #20
 8000398:	af00      	add	r7, sp, #0
 800039a:	60f8      	str	r0, [r7, #12]
 800039c:	60b9      	str	r1, [r7, #8]
 800039e:	607a      	str	r2, [r7, #4]
	return 0;
 80003a0:	2300      	movs	r3, #0
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	3714      	adds	r7, #20
 80003a6:	46bd      	mov	sp, r7
 80003a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ac:	4770      	bx	lr
	...

080003b0 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b084      	sub	sp, #16
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003b8:	4b11      	ldr	r3, [pc, #68]	; (8000400 <_sbrk+0x50>)
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	2b00      	cmp	r3, #0
 80003be:	d102      	bne.n	80003c6 <_sbrk+0x16>
		heap_end = &end;
 80003c0:	4b0f      	ldr	r3, [pc, #60]	; (8000400 <_sbrk+0x50>)
 80003c2:	4a10      	ldr	r2, [pc, #64]	; (8000404 <_sbrk+0x54>)
 80003c4:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003c6:	4b0e      	ldr	r3, [pc, #56]	; (8000400 <_sbrk+0x50>)
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003cc:	4b0c      	ldr	r3, [pc, #48]	; (8000400 <_sbrk+0x50>)
 80003ce:	681a      	ldr	r2, [r3, #0]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4413      	add	r3, r2
 80003d4:	466a      	mov	r2, sp
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d907      	bls.n	80003ea <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003da:	f000 f8ff 	bl	80005dc <__errno>
 80003de:	4602      	mov	r2, r0
 80003e0:	230c      	movs	r3, #12
 80003e2:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80003e4:	f04f 33ff 	mov.w	r3, #4294967295
 80003e8:	e006      	b.n	80003f8 <_sbrk+0x48>
	}

	heap_end += incr;
 80003ea:	4b05      	ldr	r3, [pc, #20]	; (8000400 <_sbrk+0x50>)
 80003ec:	681a      	ldr	r2, [r3, #0]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4413      	add	r3, r2
 80003f2:	4a03      	ldr	r2, [pc, #12]	; (8000400 <_sbrk+0x50>)
 80003f4:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80003f6:	68fb      	ldr	r3, [r7, #12]
}
 80003f8:	4618      	mov	r0, r3
 80003fa:	3710      	adds	r7, #16
 80003fc:	46bd      	mov	sp, r7
 80003fe:	bd80      	pop	{r7, pc}
 8000400:	20000080 	.word	0x20000080
 8000404:	20000090 	.word	0x20000090

08000408 <systickDelayMs>:
#define	CTRL_CLKSRC			(1U<<2)
#define CTRL_COUNTFLAG		(1U<<16)


void systickDelayMs(int delay)
{
 8000408:	b480      	push	{r7}
 800040a:	b085      	sub	sp, #20
 800040c:	af00      	add	r7, sp, #0
 800040e:	6078      	str	r0, [r7, #4]
	/*configure systick*/
	/*Reload with number of clocks per millisecond*/
	SysTick->LOAD = SYSTICK_LOAD_VAL;
 8000410:	4b11      	ldr	r3, [pc, #68]	; (8000458 <systickDelayMs+0x50>)
 8000412:	f44f 527a 	mov.w	r2, #16000	; 0x3e80
 8000416:	605a      	str	r2, [r3, #4]

	/*Clear syslick current value register*/
	SysTick->VAL =0;
 8000418:	4b0f      	ldr	r3, [pc, #60]	; (8000458 <systickDelayMs+0x50>)
 800041a:	2200      	movs	r2, #0
 800041c:	609a      	str	r2, [r3, #8]
	/*Enable syslick and select internal clk src*/
	SysTick->CTRL = CTRL_EN|CTRL_CLKSRC;
 800041e:	4b0e      	ldr	r3, [pc, #56]	; (8000458 <systickDelayMs+0x50>)
 8000420:	2205      	movs	r2, #5
 8000422:	601a      	str	r2, [r3, #0]

	for(int i=0;i<delay;i++){
 8000424:	2300      	movs	r3, #0
 8000426:	60fb      	str	r3, [r7, #12]
 8000428:	e009      	b.n	800043e <systickDelayMs+0x36>
		/*Wait until the COUNTFLAG is set*/

		while((SysTick->CTRL & CTRL_COUNTFLAG) == 0){}
 800042a:	bf00      	nop
 800042c:	4b0a      	ldr	r3, [pc, #40]	; (8000458 <systickDelayMs+0x50>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000434:	2b00      	cmp	r3, #0
 8000436:	d0f9      	beq.n	800042c <systickDelayMs+0x24>
	for(int i=0;i<delay;i++){
 8000438:	68fb      	ldr	r3, [r7, #12]
 800043a:	3301      	adds	r3, #1
 800043c:	60fb      	str	r3, [r7, #12]
 800043e:	68fa      	ldr	r2, [r7, #12]
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	429a      	cmp	r2, r3
 8000444:	dbf1      	blt.n	800042a <systickDelayMs+0x22>
	}
	SysTick->CTRL = 0;
 8000446:	4b04      	ldr	r3, [pc, #16]	; (8000458 <systickDelayMs+0x50>)
 8000448:	2200      	movs	r2, #0
 800044a:	601a      	str	r2, [r3, #0]
}
 800044c:	bf00      	nop
 800044e:	3714      	adds	r7, #20
 8000450:	46bd      	mov	sp, r7
 8000452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000456:	4770      	bx	lr
 8000458:	e000e010 	.word	0xe000e010

0800045c <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);
void uart2_write(int ch);


int __io_putchar(int ch)
{
 800045c:	b580      	push	{r7, lr}
 800045e:	b082      	sub	sp, #8
 8000460:	af00      	add	r7, sp, #0
 8000462:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000464:	6878      	ldr	r0, [r7, #4]
 8000466:	f000 f851 	bl	800050c <uart2_write>
	return ch;
 800046a:	687b      	ldr	r3, [r7, #4]
}
 800046c:	4618      	mov	r0, r3
 800046e:	3708      	adds	r7, #8
 8000470:	46bd      	mov	sp, r7
 8000472:	bd80      	pop	{r7, pc}

08000474 <uart2_tx_init>:




void uart2_tx_init(void)
{
 8000474:	b580      	push	{r7, lr}
 8000476:	af00      	add	r7, sp, #0
	/*******************Configure UART GPIO pin*************************/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |=GPIOAEN;
 8000478:	4b20      	ldr	r3, [pc, #128]	; (80004fc <uart2_tx_init+0x88>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047c:	4a1f      	ldr	r2, [pc, #124]	; (80004fc <uart2_tx_init+0x88>)
 800047e:	f043 0301 	orr.w	r3, r3, #1
 8000482:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);
 8000484:	4b1e      	ldr	r3, [pc, #120]	; (8000500 <uart2_tx_init+0x8c>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	4a1d      	ldr	r2, [pc, #116]	; (8000500 <uart2_tx_init+0x8c>)
 800048a:	f023 0310 	bic.w	r3, r3, #16
 800048e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<5);
 8000490:	4b1b      	ldr	r3, [pc, #108]	; (8000500 <uart2_tx_init+0x8c>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	4a1a      	ldr	r2, [pc, #104]	; (8000500 <uart2_tx_init+0x8c>)
 8000496:	f043 0320 	orr.w	r3, r3, #32
 800049a:	6013      	str	r3, [r2, #0]
	/*Set PA2 alternate function type to UART_TX (AF07) */
	GPIOA->AFR[0] |= (1U<<8);
 800049c:	4b18      	ldr	r3, [pc, #96]	; (8000500 <uart2_tx_init+0x8c>)
 800049e:	6a1b      	ldr	r3, [r3, #32]
 80004a0:	4a17      	ldr	r2, [pc, #92]	; (8000500 <uart2_tx_init+0x8c>)
 80004a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80004a6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 80004a8:	4b15      	ldr	r3, [pc, #84]	; (8000500 <uart2_tx_init+0x8c>)
 80004aa:	6a1b      	ldr	r3, [r3, #32]
 80004ac:	4a14      	ldr	r2, [pc, #80]	; (8000500 <uart2_tx_init+0x8c>)
 80004ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80004b2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 80004b4:	4b12      	ldr	r3, [pc, #72]	; (8000500 <uart2_tx_init+0x8c>)
 80004b6:	6a1b      	ldr	r3, [r3, #32]
 80004b8:	4a11      	ldr	r2, [pc, #68]	; (8000500 <uart2_tx_init+0x8c>)
 80004ba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80004be:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<11);
 80004c0:	4b0f      	ldr	r3, [pc, #60]	; (8000500 <uart2_tx_init+0x8c>)
 80004c2:	6a1b      	ldr	r3, [r3, #32]
 80004c4:	4a0e      	ldr	r2, [pc, #56]	; (8000500 <uart2_tx_init+0x8c>)
 80004c6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80004ca:	6213      	str	r3, [r2, #32]
	/*Set PA3 mode to alternate function mode*/
	/*Set PA3 alternate function type to UART_TX (AF07) */

	/****************************Configure UART module***********************************/
	/*Enable clock access to UART2*/
	RCC->APB1ENR |= UART2EN;
 80004cc:	4b0b      	ldr	r3, [pc, #44]	; (80004fc <uart2_tx_init+0x88>)
 80004ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80004d0:	4a0a      	ldr	r2, [pc, #40]	; (80004fc <uart2_tx_init+0x88>)
 80004d2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004d6:	6413      	str	r3, [r2, #64]	; 0x40
	/*Configure Baudrate*/
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 80004d8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80004dc:	4909      	ldr	r1, [pc, #36]	; (8000504 <uart2_tx_init+0x90>)
 80004de:	480a      	ldr	r0, [pc, #40]	; (8000508 <uart2_tx_init+0x94>)
 80004e0:	f000 f82c 	bl	800053c <uart_set_baudrate>
	/*Configure the transfer direction*/
	USART2->CR1 = CR1_TE;
 80004e4:	4b08      	ldr	r3, [pc, #32]	; (8000508 <uart2_tx_init+0x94>)
 80004e6:	2208      	movs	r2, #8
 80004e8:	60da      	str	r2, [r3, #12]

	/*Enable UART module*/
	USART2->CR1 |= CR1_UE;
 80004ea:	4b07      	ldr	r3, [pc, #28]	; (8000508 <uart2_tx_init+0x94>)
 80004ec:	68db      	ldr	r3, [r3, #12]
 80004ee:	4a06      	ldr	r2, [pc, #24]	; (8000508 <uart2_tx_init+0x94>)
 80004f0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80004f4:	60d3      	str	r3, [r2, #12]
}
 80004f6:	bf00      	nop
 80004f8:	bd80      	pop	{r7, pc}
 80004fa:	bf00      	nop
 80004fc:	40023800 	.word	0x40023800
 8000500:	40020000 	.word	0x40020000
 8000504:	00f42400 	.word	0x00f42400
 8000508:	40004400 	.word	0x40004400

0800050c <uart2_write>:

}


void uart2_write(int ch)
{
 800050c:	b480      	push	{r7}
 800050e:	b083      	sub	sp, #12
 8000510:	af00      	add	r7, sp, #0
 8000512:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 8000514:	bf00      	nop
 8000516:	4b08      	ldr	r3, [pc, #32]	; (8000538 <uart2_write+0x2c>)
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800051e:	2b00      	cmp	r3, #0
 8000520:	d0f9      	beq.n	8000516 <uart2_write+0xa>
	/*Write to transmit data register*/

	USART2->DR= (ch & 0xFF);
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4a04      	ldr	r2, [pc, #16]	; (8000538 <uart2_write+0x2c>)
 8000526:	b2db      	uxtb	r3, r3
 8000528:	6053      	str	r3, [r2, #4]
}
 800052a:	bf00      	nop
 800052c:	370c      	adds	r7, #12
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	40004400 	.word	0x40004400

0800053c <uart_set_baudrate>:
static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk,uint32_t BaudRate)
{
 800053c:	b580      	push	{r7, lr}
 800053e:	b084      	sub	sp, #16
 8000540:	af00      	add	r7, sp, #0
 8000542:	60f8      	str	r0, [r7, #12]
 8000544:	60b9      	str	r1, [r7, #8]
 8000546:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 8000548:	6879      	ldr	r1, [r7, #4]
 800054a:	68b8      	ldr	r0, [r7, #8]
 800054c:	f000 f808 	bl	8000560 <compute_uart_bd>
 8000550:	4603      	mov	r3, r0
 8000552:	461a      	mov	r2, r3
 8000554:	68fb      	ldr	r3, [r7, #12]
 8000556:	609a      	str	r2, [r3, #8]
}
 8000558:	bf00      	nop
 800055a:	3710      	adds	r7, #16
 800055c:	46bd      	mov	sp, r7
 800055e:	bd80      	pop	{r7, pc}

08000560 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000560:	b480      	push	{r7}
 8000562:	b083      	sub	sp, #12
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
 8000568:	6039      	str	r1, [r7, #0]
	return((PeriphClk + (BaudRate/2U))/BaudRate);
 800056a:	683b      	ldr	r3, [r7, #0]
 800056c:	085a      	lsrs	r2, r3, #1
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	441a      	add	r2, r3
 8000572:	683b      	ldr	r3, [r7, #0]
 8000574:	fbb2 f3f3 	udiv	r3, r2, r3
 8000578:	b29b      	uxth	r3, r3
}
 800057a:	4618      	mov	r0, r3
 800057c:	370c      	adds	r7, #12
 800057e:	46bd      	mov	sp, r7
 8000580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000584:	4770      	bx	lr
	...

08000588 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000588:	480d      	ldr	r0, [pc, #52]	; (80005c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800058a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800058c:	480d      	ldr	r0, [pc, #52]	; (80005c4 <LoopForever+0x6>)
  ldr r1, =_edata
 800058e:	490e      	ldr	r1, [pc, #56]	; (80005c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000590:	4a0e      	ldr	r2, [pc, #56]	; (80005cc <LoopForever+0xe>)
  movs r3, #0
 8000592:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000594:	e002      	b.n	800059c <LoopCopyDataInit>

08000596 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000596:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000598:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800059a:	3304      	adds	r3, #4

0800059c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800059c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800059e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005a0:	d3f9      	bcc.n	8000596 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005a2:	4a0b      	ldr	r2, [pc, #44]	; (80005d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005a4:	4c0b      	ldr	r4, [pc, #44]	; (80005d4 <LoopForever+0x16>)
  movs r3, #0
 80005a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005a8:	e001      	b.n	80005ae <LoopFillZerobss>

080005aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005ac:	3204      	adds	r2, #4

080005ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005b0:	d3fb      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005b2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80005b6:	f000 f817 	bl	80005e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ba:	f7ff fe61 	bl	8000280 <main>

080005be <LoopForever>:

LoopForever:
    b LoopForever
 80005be:	e7fe      	b.n	80005be <LoopForever>
  ldr   r0, =_estack
 80005c0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80005c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005c8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005cc:	080014dc 	.word	0x080014dc
  ldr r2, =_sbss
 80005d0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005d4:	20000090 	.word	0x20000090

080005d8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005d8:	e7fe      	b.n	80005d8 <ADC_IRQHandler>
	...

080005dc <__errno>:
 80005dc:	4b01      	ldr	r3, [pc, #4]	; (80005e4 <__errno+0x8>)
 80005de:	6818      	ldr	r0, [r3, #0]
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop
 80005e4:	20000000 	.word	0x20000000

080005e8 <__libc_init_array>:
 80005e8:	b570      	push	{r4, r5, r6, lr}
 80005ea:	4e0d      	ldr	r6, [pc, #52]	; (8000620 <__libc_init_array+0x38>)
 80005ec:	4c0d      	ldr	r4, [pc, #52]	; (8000624 <__libc_init_array+0x3c>)
 80005ee:	1ba4      	subs	r4, r4, r6
 80005f0:	10a4      	asrs	r4, r4, #2
 80005f2:	2500      	movs	r5, #0
 80005f4:	42a5      	cmp	r5, r4
 80005f6:	d109      	bne.n	800060c <__libc_init_array+0x24>
 80005f8:	4e0b      	ldr	r6, [pc, #44]	; (8000628 <__libc_init_array+0x40>)
 80005fa:	4c0c      	ldr	r4, [pc, #48]	; (800062c <__libc_init_array+0x44>)
 80005fc:	f000 ff04 	bl	8001408 <_init>
 8000600:	1ba4      	subs	r4, r4, r6
 8000602:	10a4      	asrs	r4, r4, #2
 8000604:	2500      	movs	r5, #0
 8000606:	42a5      	cmp	r5, r4
 8000608:	d105      	bne.n	8000616 <__libc_init_array+0x2e>
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000610:	4798      	blx	r3
 8000612:	3501      	adds	r5, #1
 8000614:	e7ee      	b.n	80005f4 <__libc_init_array+0xc>
 8000616:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800061a:	4798      	blx	r3
 800061c:	3501      	adds	r5, #1
 800061e:	e7f2      	b.n	8000606 <__libc_init_array+0x1e>
 8000620:	080014d4 	.word	0x080014d4
 8000624:	080014d4 	.word	0x080014d4
 8000628:	080014d4 	.word	0x080014d4
 800062c:	080014d8 	.word	0x080014d8

08000630 <memset>:
 8000630:	4402      	add	r2, r0
 8000632:	4603      	mov	r3, r0
 8000634:	4293      	cmp	r3, r2
 8000636:	d100      	bne.n	800063a <memset+0xa>
 8000638:	4770      	bx	lr
 800063a:	f803 1b01 	strb.w	r1, [r3], #1
 800063e:	e7f9      	b.n	8000634 <memset+0x4>

08000640 <iprintf>:
 8000640:	b40f      	push	{r0, r1, r2, r3}
 8000642:	4b0a      	ldr	r3, [pc, #40]	; (800066c <iprintf+0x2c>)
 8000644:	b513      	push	{r0, r1, r4, lr}
 8000646:	681c      	ldr	r4, [r3, #0]
 8000648:	b124      	cbz	r4, 8000654 <iprintf+0x14>
 800064a:	69a3      	ldr	r3, [r4, #24]
 800064c:	b913      	cbnz	r3, 8000654 <iprintf+0x14>
 800064e:	4620      	mov	r0, r4
 8000650:	f000 f84e 	bl	80006f0 <__sinit>
 8000654:	ab05      	add	r3, sp, #20
 8000656:	9a04      	ldr	r2, [sp, #16]
 8000658:	68a1      	ldr	r1, [r4, #8]
 800065a:	9301      	str	r3, [sp, #4]
 800065c:	4620      	mov	r0, r4
 800065e:	f000 f955 	bl	800090c <_vfiprintf_r>
 8000662:	b002      	add	sp, #8
 8000664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000668:	b004      	add	sp, #16
 800066a:	4770      	bx	lr
 800066c:	20000000 	.word	0x20000000

08000670 <std>:
 8000670:	2300      	movs	r3, #0
 8000672:	b510      	push	{r4, lr}
 8000674:	4604      	mov	r4, r0
 8000676:	e9c0 3300 	strd	r3, r3, [r0]
 800067a:	6083      	str	r3, [r0, #8]
 800067c:	8181      	strh	r1, [r0, #12]
 800067e:	6643      	str	r3, [r0, #100]	; 0x64
 8000680:	81c2      	strh	r2, [r0, #14]
 8000682:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000686:	6183      	str	r3, [r0, #24]
 8000688:	4619      	mov	r1, r3
 800068a:	2208      	movs	r2, #8
 800068c:	305c      	adds	r0, #92	; 0x5c
 800068e:	f7ff ffcf 	bl	8000630 <memset>
 8000692:	4b05      	ldr	r3, [pc, #20]	; (80006a8 <std+0x38>)
 8000694:	6263      	str	r3, [r4, #36]	; 0x24
 8000696:	4b05      	ldr	r3, [pc, #20]	; (80006ac <std+0x3c>)
 8000698:	62a3      	str	r3, [r4, #40]	; 0x28
 800069a:	4b05      	ldr	r3, [pc, #20]	; (80006b0 <std+0x40>)
 800069c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800069e:	4b05      	ldr	r3, [pc, #20]	; (80006b4 <std+0x44>)
 80006a0:	6224      	str	r4, [r4, #32]
 80006a2:	6323      	str	r3, [r4, #48]	; 0x30
 80006a4:	bd10      	pop	{r4, pc}
 80006a6:	bf00      	nop
 80006a8:	08000e69 	.word	0x08000e69
 80006ac:	08000e8b 	.word	0x08000e8b
 80006b0:	08000ec3 	.word	0x08000ec3
 80006b4:	08000ee7 	.word	0x08000ee7

080006b8 <_cleanup_r>:
 80006b8:	4901      	ldr	r1, [pc, #4]	; (80006c0 <_cleanup_r+0x8>)
 80006ba:	f000 b885 	b.w	80007c8 <_fwalk_reent>
 80006be:	bf00      	nop
 80006c0:	080011c1 	.word	0x080011c1

080006c4 <__sfmoreglue>:
 80006c4:	b570      	push	{r4, r5, r6, lr}
 80006c6:	1e4a      	subs	r2, r1, #1
 80006c8:	2568      	movs	r5, #104	; 0x68
 80006ca:	4355      	muls	r5, r2
 80006cc:	460e      	mov	r6, r1
 80006ce:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006d2:	f000 f897 	bl	8000804 <_malloc_r>
 80006d6:	4604      	mov	r4, r0
 80006d8:	b140      	cbz	r0, 80006ec <__sfmoreglue+0x28>
 80006da:	2100      	movs	r1, #0
 80006dc:	e9c0 1600 	strd	r1, r6, [r0]
 80006e0:	300c      	adds	r0, #12
 80006e2:	60a0      	str	r0, [r4, #8]
 80006e4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006e8:	f7ff ffa2 	bl	8000630 <memset>
 80006ec:	4620      	mov	r0, r4
 80006ee:	bd70      	pop	{r4, r5, r6, pc}

080006f0 <__sinit>:
 80006f0:	6983      	ldr	r3, [r0, #24]
 80006f2:	b510      	push	{r4, lr}
 80006f4:	4604      	mov	r4, r0
 80006f6:	bb33      	cbnz	r3, 8000746 <__sinit+0x56>
 80006f8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80006fc:	6503      	str	r3, [r0, #80]	; 0x50
 80006fe:	4b12      	ldr	r3, [pc, #72]	; (8000748 <__sinit+0x58>)
 8000700:	4a12      	ldr	r2, [pc, #72]	; (800074c <__sinit+0x5c>)
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	6282      	str	r2, [r0, #40]	; 0x28
 8000706:	4298      	cmp	r0, r3
 8000708:	bf04      	itt	eq
 800070a:	2301      	moveq	r3, #1
 800070c:	6183      	streq	r3, [r0, #24]
 800070e:	f000 f81f 	bl	8000750 <__sfp>
 8000712:	6060      	str	r0, [r4, #4]
 8000714:	4620      	mov	r0, r4
 8000716:	f000 f81b 	bl	8000750 <__sfp>
 800071a:	60a0      	str	r0, [r4, #8]
 800071c:	4620      	mov	r0, r4
 800071e:	f000 f817 	bl	8000750 <__sfp>
 8000722:	2200      	movs	r2, #0
 8000724:	60e0      	str	r0, [r4, #12]
 8000726:	2104      	movs	r1, #4
 8000728:	6860      	ldr	r0, [r4, #4]
 800072a:	f7ff ffa1 	bl	8000670 <std>
 800072e:	2201      	movs	r2, #1
 8000730:	2109      	movs	r1, #9
 8000732:	68a0      	ldr	r0, [r4, #8]
 8000734:	f7ff ff9c 	bl	8000670 <std>
 8000738:	2202      	movs	r2, #2
 800073a:	2112      	movs	r1, #18
 800073c:	68e0      	ldr	r0, [r4, #12]
 800073e:	f7ff ff97 	bl	8000670 <std>
 8000742:	2301      	movs	r3, #1
 8000744:	61a3      	str	r3, [r4, #24]
 8000746:	bd10      	pop	{r4, pc}
 8000748:	0800143c 	.word	0x0800143c
 800074c:	080006b9 	.word	0x080006b9

08000750 <__sfp>:
 8000750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000752:	4b1b      	ldr	r3, [pc, #108]	; (80007c0 <__sfp+0x70>)
 8000754:	681e      	ldr	r6, [r3, #0]
 8000756:	69b3      	ldr	r3, [r6, #24]
 8000758:	4607      	mov	r7, r0
 800075a:	b913      	cbnz	r3, 8000762 <__sfp+0x12>
 800075c:	4630      	mov	r0, r6
 800075e:	f7ff ffc7 	bl	80006f0 <__sinit>
 8000762:	3648      	adds	r6, #72	; 0x48
 8000764:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000768:	3b01      	subs	r3, #1
 800076a:	d503      	bpl.n	8000774 <__sfp+0x24>
 800076c:	6833      	ldr	r3, [r6, #0]
 800076e:	b133      	cbz	r3, 800077e <__sfp+0x2e>
 8000770:	6836      	ldr	r6, [r6, #0]
 8000772:	e7f7      	b.n	8000764 <__sfp+0x14>
 8000774:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000778:	b16d      	cbz	r5, 8000796 <__sfp+0x46>
 800077a:	3468      	adds	r4, #104	; 0x68
 800077c:	e7f4      	b.n	8000768 <__sfp+0x18>
 800077e:	2104      	movs	r1, #4
 8000780:	4638      	mov	r0, r7
 8000782:	f7ff ff9f 	bl	80006c4 <__sfmoreglue>
 8000786:	6030      	str	r0, [r6, #0]
 8000788:	2800      	cmp	r0, #0
 800078a:	d1f1      	bne.n	8000770 <__sfp+0x20>
 800078c:	230c      	movs	r3, #12
 800078e:	603b      	str	r3, [r7, #0]
 8000790:	4604      	mov	r4, r0
 8000792:	4620      	mov	r0, r4
 8000794:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000796:	4b0b      	ldr	r3, [pc, #44]	; (80007c4 <__sfp+0x74>)
 8000798:	6665      	str	r5, [r4, #100]	; 0x64
 800079a:	e9c4 5500 	strd	r5, r5, [r4]
 800079e:	60a5      	str	r5, [r4, #8]
 80007a0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80007a4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80007a8:	2208      	movs	r2, #8
 80007aa:	4629      	mov	r1, r5
 80007ac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007b0:	f7ff ff3e 	bl	8000630 <memset>
 80007b4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007b8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007bc:	e7e9      	b.n	8000792 <__sfp+0x42>
 80007be:	bf00      	nop
 80007c0:	0800143c 	.word	0x0800143c
 80007c4:	ffff0001 	.word	0xffff0001

080007c8 <_fwalk_reent>:
 80007c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007cc:	4680      	mov	r8, r0
 80007ce:	4689      	mov	r9, r1
 80007d0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007d4:	2600      	movs	r6, #0
 80007d6:	b914      	cbnz	r4, 80007de <_fwalk_reent+0x16>
 80007d8:	4630      	mov	r0, r6
 80007da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007de:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80007e2:	3f01      	subs	r7, #1
 80007e4:	d501      	bpl.n	80007ea <_fwalk_reent+0x22>
 80007e6:	6824      	ldr	r4, [r4, #0]
 80007e8:	e7f5      	b.n	80007d6 <_fwalk_reent+0xe>
 80007ea:	89ab      	ldrh	r3, [r5, #12]
 80007ec:	2b01      	cmp	r3, #1
 80007ee:	d907      	bls.n	8000800 <_fwalk_reent+0x38>
 80007f0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007f4:	3301      	adds	r3, #1
 80007f6:	d003      	beq.n	8000800 <_fwalk_reent+0x38>
 80007f8:	4629      	mov	r1, r5
 80007fa:	4640      	mov	r0, r8
 80007fc:	47c8      	blx	r9
 80007fe:	4306      	orrs	r6, r0
 8000800:	3568      	adds	r5, #104	; 0x68
 8000802:	e7ee      	b.n	80007e2 <_fwalk_reent+0x1a>

08000804 <_malloc_r>:
 8000804:	b570      	push	{r4, r5, r6, lr}
 8000806:	1ccd      	adds	r5, r1, #3
 8000808:	f025 0503 	bic.w	r5, r5, #3
 800080c:	3508      	adds	r5, #8
 800080e:	2d0c      	cmp	r5, #12
 8000810:	bf38      	it	cc
 8000812:	250c      	movcc	r5, #12
 8000814:	2d00      	cmp	r5, #0
 8000816:	4606      	mov	r6, r0
 8000818:	db01      	blt.n	800081e <_malloc_r+0x1a>
 800081a:	42a9      	cmp	r1, r5
 800081c:	d903      	bls.n	8000826 <_malloc_r+0x22>
 800081e:	230c      	movs	r3, #12
 8000820:	6033      	str	r3, [r6, #0]
 8000822:	2000      	movs	r0, #0
 8000824:	bd70      	pop	{r4, r5, r6, pc}
 8000826:	f000 fd6b 	bl	8001300 <__malloc_lock>
 800082a:	4a21      	ldr	r2, [pc, #132]	; (80008b0 <_malloc_r+0xac>)
 800082c:	6814      	ldr	r4, [r2, #0]
 800082e:	4621      	mov	r1, r4
 8000830:	b991      	cbnz	r1, 8000858 <_malloc_r+0x54>
 8000832:	4c20      	ldr	r4, [pc, #128]	; (80008b4 <_malloc_r+0xb0>)
 8000834:	6823      	ldr	r3, [r4, #0]
 8000836:	b91b      	cbnz	r3, 8000840 <_malloc_r+0x3c>
 8000838:	4630      	mov	r0, r6
 800083a:	f000 fb05 	bl	8000e48 <_sbrk_r>
 800083e:	6020      	str	r0, [r4, #0]
 8000840:	4629      	mov	r1, r5
 8000842:	4630      	mov	r0, r6
 8000844:	f000 fb00 	bl	8000e48 <_sbrk_r>
 8000848:	1c43      	adds	r3, r0, #1
 800084a:	d124      	bne.n	8000896 <_malloc_r+0x92>
 800084c:	230c      	movs	r3, #12
 800084e:	6033      	str	r3, [r6, #0]
 8000850:	4630      	mov	r0, r6
 8000852:	f000 fd56 	bl	8001302 <__malloc_unlock>
 8000856:	e7e4      	b.n	8000822 <_malloc_r+0x1e>
 8000858:	680b      	ldr	r3, [r1, #0]
 800085a:	1b5b      	subs	r3, r3, r5
 800085c:	d418      	bmi.n	8000890 <_malloc_r+0x8c>
 800085e:	2b0b      	cmp	r3, #11
 8000860:	d90f      	bls.n	8000882 <_malloc_r+0x7e>
 8000862:	600b      	str	r3, [r1, #0]
 8000864:	50cd      	str	r5, [r1, r3]
 8000866:	18cc      	adds	r4, r1, r3
 8000868:	4630      	mov	r0, r6
 800086a:	f000 fd4a 	bl	8001302 <__malloc_unlock>
 800086e:	f104 000b 	add.w	r0, r4, #11
 8000872:	1d23      	adds	r3, r4, #4
 8000874:	f020 0007 	bic.w	r0, r0, #7
 8000878:	1ac3      	subs	r3, r0, r3
 800087a:	d0d3      	beq.n	8000824 <_malloc_r+0x20>
 800087c:	425a      	negs	r2, r3
 800087e:	50e2      	str	r2, [r4, r3]
 8000880:	e7d0      	b.n	8000824 <_malloc_r+0x20>
 8000882:	428c      	cmp	r4, r1
 8000884:	684b      	ldr	r3, [r1, #4]
 8000886:	bf16      	itet	ne
 8000888:	6063      	strne	r3, [r4, #4]
 800088a:	6013      	streq	r3, [r2, #0]
 800088c:	460c      	movne	r4, r1
 800088e:	e7eb      	b.n	8000868 <_malloc_r+0x64>
 8000890:	460c      	mov	r4, r1
 8000892:	6849      	ldr	r1, [r1, #4]
 8000894:	e7cc      	b.n	8000830 <_malloc_r+0x2c>
 8000896:	1cc4      	adds	r4, r0, #3
 8000898:	f024 0403 	bic.w	r4, r4, #3
 800089c:	42a0      	cmp	r0, r4
 800089e:	d005      	beq.n	80008ac <_malloc_r+0xa8>
 80008a0:	1a21      	subs	r1, r4, r0
 80008a2:	4630      	mov	r0, r6
 80008a4:	f000 fad0 	bl	8000e48 <_sbrk_r>
 80008a8:	3001      	adds	r0, #1
 80008aa:	d0cf      	beq.n	800084c <_malloc_r+0x48>
 80008ac:	6025      	str	r5, [r4, #0]
 80008ae:	e7db      	b.n	8000868 <_malloc_r+0x64>
 80008b0:	20000084 	.word	0x20000084
 80008b4:	20000088 	.word	0x20000088

080008b8 <__sfputc_r>:
 80008b8:	6893      	ldr	r3, [r2, #8]
 80008ba:	3b01      	subs	r3, #1
 80008bc:	2b00      	cmp	r3, #0
 80008be:	b410      	push	{r4}
 80008c0:	6093      	str	r3, [r2, #8]
 80008c2:	da08      	bge.n	80008d6 <__sfputc_r+0x1e>
 80008c4:	6994      	ldr	r4, [r2, #24]
 80008c6:	42a3      	cmp	r3, r4
 80008c8:	db01      	blt.n	80008ce <__sfputc_r+0x16>
 80008ca:	290a      	cmp	r1, #10
 80008cc:	d103      	bne.n	80008d6 <__sfputc_r+0x1e>
 80008ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008d2:	f000 bb0d 	b.w	8000ef0 <__swbuf_r>
 80008d6:	6813      	ldr	r3, [r2, #0]
 80008d8:	1c58      	adds	r0, r3, #1
 80008da:	6010      	str	r0, [r2, #0]
 80008dc:	7019      	strb	r1, [r3, #0]
 80008de:	4608      	mov	r0, r1
 80008e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008e4:	4770      	bx	lr

080008e6 <__sfputs_r>:
 80008e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008e8:	4606      	mov	r6, r0
 80008ea:	460f      	mov	r7, r1
 80008ec:	4614      	mov	r4, r2
 80008ee:	18d5      	adds	r5, r2, r3
 80008f0:	42ac      	cmp	r4, r5
 80008f2:	d101      	bne.n	80008f8 <__sfputs_r+0x12>
 80008f4:	2000      	movs	r0, #0
 80008f6:	e007      	b.n	8000908 <__sfputs_r+0x22>
 80008f8:	463a      	mov	r2, r7
 80008fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008fe:	4630      	mov	r0, r6
 8000900:	f7ff ffda 	bl	80008b8 <__sfputc_r>
 8000904:	1c43      	adds	r3, r0, #1
 8000906:	d1f3      	bne.n	80008f0 <__sfputs_r+0xa>
 8000908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800090c <_vfiprintf_r>:
 800090c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000910:	460c      	mov	r4, r1
 8000912:	b09d      	sub	sp, #116	; 0x74
 8000914:	4617      	mov	r7, r2
 8000916:	461d      	mov	r5, r3
 8000918:	4606      	mov	r6, r0
 800091a:	b118      	cbz	r0, 8000924 <_vfiprintf_r+0x18>
 800091c:	6983      	ldr	r3, [r0, #24]
 800091e:	b90b      	cbnz	r3, 8000924 <_vfiprintf_r+0x18>
 8000920:	f7ff fee6 	bl	80006f0 <__sinit>
 8000924:	4b7c      	ldr	r3, [pc, #496]	; (8000b18 <_vfiprintf_r+0x20c>)
 8000926:	429c      	cmp	r4, r3
 8000928:	d158      	bne.n	80009dc <_vfiprintf_r+0xd0>
 800092a:	6874      	ldr	r4, [r6, #4]
 800092c:	89a3      	ldrh	r3, [r4, #12]
 800092e:	0718      	lsls	r0, r3, #28
 8000930:	d55e      	bpl.n	80009f0 <_vfiprintf_r+0xe4>
 8000932:	6923      	ldr	r3, [r4, #16]
 8000934:	2b00      	cmp	r3, #0
 8000936:	d05b      	beq.n	80009f0 <_vfiprintf_r+0xe4>
 8000938:	2300      	movs	r3, #0
 800093a:	9309      	str	r3, [sp, #36]	; 0x24
 800093c:	2320      	movs	r3, #32
 800093e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000942:	2330      	movs	r3, #48	; 0x30
 8000944:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000948:	9503      	str	r5, [sp, #12]
 800094a:	f04f 0b01 	mov.w	fp, #1
 800094e:	46b8      	mov	r8, r7
 8000950:	4645      	mov	r5, r8
 8000952:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000956:	b10b      	cbz	r3, 800095c <_vfiprintf_r+0x50>
 8000958:	2b25      	cmp	r3, #37	; 0x25
 800095a:	d154      	bne.n	8000a06 <_vfiprintf_r+0xfa>
 800095c:	ebb8 0a07 	subs.w	sl, r8, r7
 8000960:	d00b      	beq.n	800097a <_vfiprintf_r+0x6e>
 8000962:	4653      	mov	r3, sl
 8000964:	463a      	mov	r2, r7
 8000966:	4621      	mov	r1, r4
 8000968:	4630      	mov	r0, r6
 800096a:	f7ff ffbc 	bl	80008e6 <__sfputs_r>
 800096e:	3001      	adds	r0, #1
 8000970:	f000 80c2 	beq.w	8000af8 <_vfiprintf_r+0x1ec>
 8000974:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000976:	4453      	add	r3, sl
 8000978:	9309      	str	r3, [sp, #36]	; 0x24
 800097a:	f898 3000 	ldrb.w	r3, [r8]
 800097e:	2b00      	cmp	r3, #0
 8000980:	f000 80ba 	beq.w	8000af8 <_vfiprintf_r+0x1ec>
 8000984:	2300      	movs	r3, #0
 8000986:	f04f 32ff 	mov.w	r2, #4294967295
 800098a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800098e:	9304      	str	r3, [sp, #16]
 8000990:	9307      	str	r3, [sp, #28]
 8000992:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000996:	931a      	str	r3, [sp, #104]	; 0x68
 8000998:	46a8      	mov	r8, r5
 800099a:	2205      	movs	r2, #5
 800099c:	f818 1b01 	ldrb.w	r1, [r8], #1
 80009a0:	485e      	ldr	r0, [pc, #376]	; (8000b1c <_vfiprintf_r+0x210>)
 80009a2:	f7ff fc1d 	bl	80001e0 <memchr>
 80009a6:	9b04      	ldr	r3, [sp, #16]
 80009a8:	bb78      	cbnz	r0, 8000a0a <_vfiprintf_r+0xfe>
 80009aa:	06d9      	lsls	r1, r3, #27
 80009ac:	bf44      	itt	mi
 80009ae:	2220      	movmi	r2, #32
 80009b0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80009b4:	071a      	lsls	r2, r3, #28
 80009b6:	bf44      	itt	mi
 80009b8:	222b      	movmi	r2, #43	; 0x2b
 80009ba:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80009be:	782a      	ldrb	r2, [r5, #0]
 80009c0:	2a2a      	cmp	r2, #42	; 0x2a
 80009c2:	d02a      	beq.n	8000a1a <_vfiprintf_r+0x10e>
 80009c4:	9a07      	ldr	r2, [sp, #28]
 80009c6:	46a8      	mov	r8, r5
 80009c8:	2000      	movs	r0, #0
 80009ca:	250a      	movs	r5, #10
 80009cc:	4641      	mov	r1, r8
 80009ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009d2:	3b30      	subs	r3, #48	; 0x30
 80009d4:	2b09      	cmp	r3, #9
 80009d6:	d969      	bls.n	8000aac <_vfiprintf_r+0x1a0>
 80009d8:	b360      	cbz	r0, 8000a34 <_vfiprintf_r+0x128>
 80009da:	e024      	b.n	8000a26 <_vfiprintf_r+0x11a>
 80009dc:	4b50      	ldr	r3, [pc, #320]	; (8000b20 <_vfiprintf_r+0x214>)
 80009de:	429c      	cmp	r4, r3
 80009e0:	d101      	bne.n	80009e6 <_vfiprintf_r+0xda>
 80009e2:	68b4      	ldr	r4, [r6, #8]
 80009e4:	e7a2      	b.n	800092c <_vfiprintf_r+0x20>
 80009e6:	4b4f      	ldr	r3, [pc, #316]	; (8000b24 <_vfiprintf_r+0x218>)
 80009e8:	429c      	cmp	r4, r3
 80009ea:	bf08      	it	eq
 80009ec:	68f4      	ldreq	r4, [r6, #12]
 80009ee:	e79d      	b.n	800092c <_vfiprintf_r+0x20>
 80009f0:	4621      	mov	r1, r4
 80009f2:	4630      	mov	r0, r6
 80009f4:	f000 fae0 	bl	8000fb8 <__swsetup_r>
 80009f8:	2800      	cmp	r0, #0
 80009fa:	d09d      	beq.n	8000938 <_vfiprintf_r+0x2c>
 80009fc:	f04f 30ff 	mov.w	r0, #4294967295
 8000a00:	b01d      	add	sp, #116	; 0x74
 8000a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a06:	46a8      	mov	r8, r5
 8000a08:	e7a2      	b.n	8000950 <_vfiprintf_r+0x44>
 8000a0a:	4a44      	ldr	r2, [pc, #272]	; (8000b1c <_vfiprintf_r+0x210>)
 8000a0c:	1a80      	subs	r0, r0, r2
 8000a0e:	fa0b f000 	lsl.w	r0, fp, r0
 8000a12:	4318      	orrs	r0, r3
 8000a14:	9004      	str	r0, [sp, #16]
 8000a16:	4645      	mov	r5, r8
 8000a18:	e7be      	b.n	8000998 <_vfiprintf_r+0x8c>
 8000a1a:	9a03      	ldr	r2, [sp, #12]
 8000a1c:	1d11      	adds	r1, r2, #4
 8000a1e:	6812      	ldr	r2, [r2, #0]
 8000a20:	9103      	str	r1, [sp, #12]
 8000a22:	2a00      	cmp	r2, #0
 8000a24:	db01      	blt.n	8000a2a <_vfiprintf_r+0x11e>
 8000a26:	9207      	str	r2, [sp, #28]
 8000a28:	e004      	b.n	8000a34 <_vfiprintf_r+0x128>
 8000a2a:	4252      	negs	r2, r2
 8000a2c:	f043 0302 	orr.w	r3, r3, #2
 8000a30:	9207      	str	r2, [sp, #28]
 8000a32:	9304      	str	r3, [sp, #16]
 8000a34:	f898 3000 	ldrb.w	r3, [r8]
 8000a38:	2b2e      	cmp	r3, #46	; 0x2e
 8000a3a:	d10e      	bne.n	8000a5a <_vfiprintf_r+0x14e>
 8000a3c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000a40:	2b2a      	cmp	r3, #42	; 0x2a
 8000a42:	d138      	bne.n	8000ab6 <_vfiprintf_r+0x1aa>
 8000a44:	9b03      	ldr	r3, [sp, #12]
 8000a46:	1d1a      	adds	r2, r3, #4
 8000a48:	681b      	ldr	r3, [r3, #0]
 8000a4a:	9203      	str	r2, [sp, #12]
 8000a4c:	2b00      	cmp	r3, #0
 8000a4e:	bfb8      	it	lt
 8000a50:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a54:	f108 0802 	add.w	r8, r8, #2
 8000a58:	9305      	str	r3, [sp, #20]
 8000a5a:	4d33      	ldr	r5, [pc, #204]	; (8000b28 <_vfiprintf_r+0x21c>)
 8000a5c:	f898 1000 	ldrb.w	r1, [r8]
 8000a60:	2203      	movs	r2, #3
 8000a62:	4628      	mov	r0, r5
 8000a64:	f7ff fbbc 	bl	80001e0 <memchr>
 8000a68:	b140      	cbz	r0, 8000a7c <_vfiprintf_r+0x170>
 8000a6a:	2340      	movs	r3, #64	; 0x40
 8000a6c:	1b40      	subs	r0, r0, r5
 8000a6e:	fa03 f000 	lsl.w	r0, r3, r0
 8000a72:	9b04      	ldr	r3, [sp, #16]
 8000a74:	4303      	orrs	r3, r0
 8000a76:	f108 0801 	add.w	r8, r8, #1
 8000a7a:	9304      	str	r3, [sp, #16]
 8000a7c:	f898 1000 	ldrb.w	r1, [r8]
 8000a80:	482a      	ldr	r0, [pc, #168]	; (8000b2c <_vfiprintf_r+0x220>)
 8000a82:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a86:	2206      	movs	r2, #6
 8000a88:	f108 0701 	add.w	r7, r8, #1
 8000a8c:	f7ff fba8 	bl	80001e0 <memchr>
 8000a90:	2800      	cmp	r0, #0
 8000a92:	d037      	beq.n	8000b04 <_vfiprintf_r+0x1f8>
 8000a94:	4b26      	ldr	r3, [pc, #152]	; (8000b30 <_vfiprintf_r+0x224>)
 8000a96:	bb1b      	cbnz	r3, 8000ae0 <_vfiprintf_r+0x1d4>
 8000a98:	9b03      	ldr	r3, [sp, #12]
 8000a9a:	3307      	adds	r3, #7
 8000a9c:	f023 0307 	bic.w	r3, r3, #7
 8000aa0:	3308      	adds	r3, #8
 8000aa2:	9303      	str	r3, [sp, #12]
 8000aa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000aa6:	444b      	add	r3, r9
 8000aa8:	9309      	str	r3, [sp, #36]	; 0x24
 8000aaa:	e750      	b.n	800094e <_vfiprintf_r+0x42>
 8000aac:	fb05 3202 	mla	r2, r5, r2, r3
 8000ab0:	2001      	movs	r0, #1
 8000ab2:	4688      	mov	r8, r1
 8000ab4:	e78a      	b.n	80009cc <_vfiprintf_r+0xc0>
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	f108 0801 	add.w	r8, r8, #1
 8000abc:	9305      	str	r3, [sp, #20]
 8000abe:	4619      	mov	r1, r3
 8000ac0:	250a      	movs	r5, #10
 8000ac2:	4640      	mov	r0, r8
 8000ac4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ac8:	3a30      	subs	r2, #48	; 0x30
 8000aca:	2a09      	cmp	r2, #9
 8000acc:	d903      	bls.n	8000ad6 <_vfiprintf_r+0x1ca>
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	d0c3      	beq.n	8000a5a <_vfiprintf_r+0x14e>
 8000ad2:	9105      	str	r1, [sp, #20]
 8000ad4:	e7c1      	b.n	8000a5a <_vfiprintf_r+0x14e>
 8000ad6:	fb05 2101 	mla	r1, r5, r1, r2
 8000ada:	2301      	movs	r3, #1
 8000adc:	4680      	mov	r8, r0
 8000ade:	e7f0      	b.n	8000ac2 <_vfiprintf_r+0x1b6>
 8000ae0:	ab03      	add	r3, sp, #12
 8000ae2:	9300      	str	r3, [sp, #0]
 8000ae4:	4622      	mov	r2, r4
 8000ae6:	4b13      	ldr	r3, [pc, #76]	; (8000b34 <_vfiprintf_r+0x228>)
 8000ae8:	a904      	add	r1, sp, #16
 8000aea:	4630      	mov	r0, r6
 8000aec:	f3af 8000 	nop.w
 8000af0:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000af4:	4681      	mov	r9, r0
 8000af6:	d1d5      	bne.n	8000aa4 <_vfiprintf_r+0x198>
 8000af8:	89a3      	ldrh	r3, [r4, #12]
 8000afa:	065b      	lsls	r3, r3, #25
 8000afc:	f53f af7e 	bmi.w	80009fc <_vfiprintf_r+0xf0>
 8000b00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b02:	e77d      	b.n	8000a00 <_vfiprintf_r+0xf4>
 8000b04:	ab03      	add	r3, sp, #12
 8000b06:	9300      	str	r3, [sp, #0]
 8000b08:	4622      	mov	r2, r4
 8000b0a:	4b0a      	ldr	r3, [pc, #40]	; (8000b34 <_vfiprintf_r+0x228>)
 8000b0c:	a904      	add	r1, sp, #16
 8000b0e:	4630      	mov	r0, r6
 8000b10:	f000 f888 	bl	8000c24 <_printf_i>
 8000b14:	e7ec      	b.n	8000af0 <_vfiprintf_r+0x1e4>
 8000b16:	bf00      	nop
 8000b18:	08001460 	.word	0x08001460
 8000b1c:	080014a0 	.word	0x080014a0
 8000b20:	08001480 	.word	0x08001480
 8000b24:	08001440 	.word	0x08001440
 8000b28:	080014a6 	.word	0x080014a6
 8000b2c:	080014aa 	.word	0x080014aa
 8000b30:	00000000 	.word	0x00000000
 8000b34:	080008e7 	.word	0x080008e7

08000b38 <_printf_common>:
 8000b38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b3c:	4691      	mov	r9, r2
 8000b3e:	461f      	mov	r7, r3
 8000b40:	688a      	ldr	r2, [r1, #8]
 8000b42:	690b      	ldr	r3, [r1, #16]
 8000b44:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b48:	4293      	cmp	r3, r2
 8000b4a:	bfb8      	it	lt
 8000b4c:	4613      	movlt	r3, r2
 8000b4e:	f8c9 3000 	str.w	r3, [r9]
 8000b52:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b56:	4606      	mov	r6, r0
 8000b58:	460c      	mov	r4, r1
 8000b5a:	b112      	cbz	r2, 8000b62 <_printf_common+0x2a>
 8000b5c:	3301      	adds	r3, #1
 8000b5e:	f8c9 3000 	str.w	r3, [r9]
 8000b62:	6823      	ldr	r3, [r4, #0]
 8000b64:	0699      	lsls	r1, r3, #26
 8000b66:	bf42      	ittt	mi
 8000b68:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000b6c:	3302      	addmi	r3, #2
 8000b6e:	f8c9 3000 	strmi.w	r3, [r9]
 8000b72:	6825      	ldr	r5, [r4, #0]
 8000b74:	f015 0506 	ands.w	r5, r5, #6
 8000b78:	d107      	bne.n	8000b8a <_printf_common+0x52>
 8000b7a:	f104 0a19 	add.w	sl, r4, #25
 8000b7e:	68e3      	ldr	r3, [r4, #12]
 8000b80:	f8d9 2000 	ldr.w	r2, [r9]
 8000b84:	1a9b      	subs	r3, r3, r2
 8000b86:	42ab      	cmp	r3, r5
 8000b88:	dc28      	bgt.n	8000bdc <_printf_common+0xa4>
 8000b8a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000b8e:	6822      	ldr	r2, [r4, #0]
 8000b90:	3300      	adds	r3, #0
 8000b92:	bf18      	it	ne
 8000b94:	2301      	movne	r3, #1
 8000b96:	0692      	lsls	r2, r2, #26
 8000b98:	d42d      	bmi.n	8000bf6 <_printf_common+0xbe>
 8000b9a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b9e:	4639      	mov	r1, r7
 8000ba0:	4630      	mov	r0, r6
 8000ba2:	47c0      	blx	r8
 8000ba4:	3001      	adds	r0, #1
 8000ba6:	d020      	beq.n	8000bea <_printf_common+0xb2>
 8000ba8:	6823      	ldr	r3, [r4, #0]
 8000baa:	68e5      	ldr	r5, [r4, #12]
 8000bac:	f8d9 2000 	ldr.w	r2, [r9]
 8000bb0:	f003 0306 	and.w	r3, r3, #6
 8000bb4:	2b04      	cmp	r3, #4
 8000bb6:	bf08      	it	eq
 8000bb8:	1aad      	subeq	r5, r5, r2
 8000bba:	68a3      	ldr	r3, [r4, #8]
 8000bbc:	6922      	ldr	r2, [r4, #16]
 8000bbe:	bf0c      	ite	eq
 8000bc0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bc4:	2500      	movne	r5, #0
 8000bc6:	4293      	cmp	r3, r2
 8000bc8:	bfc4      	itt	gt
 8000bca:	1a9b      	subgt	r3, r3, r2
 8000bcc:	18ed      	addgt	r5, r5, r3
 8000bce:	f04f 0900 	mov.w	r9, #0
 8000bd2:	341a      	adds	r4, #26
 8000bd4:	454d      	cmp	r5, r9
 8000bd6:	d11a      	bne.n	8000c0e <_printf_common+0xd6>
 8000bd8:	2000      	movs	r0, #0
 8000bda:	e008      	b.n	8000bee <_printf_common+0xb6>
 8000bdc:	2301      	movs	r3, #1
 8000bde:	4652      	mov	r2, sl
 8000be0:	4639      	mov	r1, r7
 8000be2:	4630      	mov	r0, r6
 8000be4:	47c0      	blx	r8
 8000be6:	3001      	adds	r0, #1
 8000be8:	d103      	bne.n	8000bf2 <_printf_common+0xba>
 8000bea:	f04f 30ff 	mov.w	r0, #4294967295
 8000bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bf2:	3501      	adds	r5, #1
 8000bf4:	e7c3      	b.n	8000b7e <_printf_common+0x46>
 8000bf6:	18e1      	adds	r1, r4, r3
 8000bf8:	1c5a      	adds	r2, r3, #1
 8000bfa:	2030      	movs	r0, #48	; 0x30
 8000bfc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c00:	4422      	add	r2, r4
 8000c02:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c06:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c0a:	3302      	adds	r3, #2
 8000c0c:	e7c5      	b.n	8000b9a <_printf_common+0x62>
 8000c0e:	2301      	movs	r3, #1
 8000c10:	4622      	mov	r2, r4
 8000c12:	4639      	mov	r1, r7
 8000c14:	4630      	mov	r0, r6
 8000c16:	47c0      	blx	r8
 8000c18:	3001      	adds	r0, #1
 8000c1a:	d0e6      	beq.n	8000bea <_printf_common+0xb2>
 8000c1c:	f109 0901 	add.w	r9, r9, #1
 8000c20:	e7d8      	b.n	8000bd4 <_printf_common+0x9c>
	...

08000c24 <_printf_i>:
 8000c24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c28:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000c2c:	460c      	mov	r4, r1
 8000c2e:	7e09      	ldrb	r1, [r1, #24]
 8000c30:	b085      	sub	sp, #20
 8000c32:	296e      	cmp	r1, #110	; 0x6e
 8000c34:	4617      	mov	r7, r2
 8000c36:	4606      	mov	r6, r0
 8000c38:	4698      	mov	r8, r3
 8000c3a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000c3c:	f000 80b3 	beq.w	8000da6 <_printf_i+0x182>
 8000c40:	d822      	bhi.n	8000c88 <_printf_i+0x64>
 8000c42:	2963      	cmp	r1, #99	; 0x63
 8000c44:	d036      	beq.n	8000cb4 <_printf_i+0x90>
 8000c46:	d80a      	bhi.n	8000c5e <_printf_i+0x3a>
 8000c48:	2900      	cmp	r1, #0
 8000c4a:	f000 80b9 	beq.w	8000dc0 <_printf_i+0x19c>
 8000c4e:	2958      	cmp	r1, #88	; 0x58
 8000c50:	f000 8083 	beq.w	8000d5a <_printf_i+0x136>
 8000c54:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c58:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000c5c:	e032      	b.n	8000cc4 <_printf_i+0xa0>
 8000c5e:	2964      	cmp	r1, #100	; 0x64
 8000c60:	d001      	beq.n	8000c66 <_printf_i+0x42>
 8000c62:	2969      	cmp	r1, #105	; 0x69
 8000c64:	d1f6      	bne.n	8000c54 <_printf_i+0x30>
 8000c66:	6820      	ldr	r0, [r4, #0]
 8000c68:	6813      	ldr	r3, [r2, #0]
 8000c6a:	0605      	lsls	r5, r0, #24
 8000c6c:	f103 0104 	add.w	r1, r3, #4
 8000c70:	d52a      	bpl.n	8000cc8 <_printf_i+0xa4>
 8000c72:	681b      	ldr	r3, [r3, #0]
 8000c74:	6011      	str	r1, [r2, #0]
 8000c76:	2b00      	cmp	r3, #0
 8000c78:	da03      	bge.n	8000c82 <_printf_i+0x5e>
 8000c7a:	222d      	movs	r2, #45	; 0x2d
 8000c7c:	425b      	negs	r3, r3
 8000c7e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000c82:	486f      	ldr	r0, [pc, #444]	; (8000e40 <_printf_i+0x21c>)
 8000c84:	220a      	movs	r2, #10
 8000c86:	e039      	b.n	8000cfc <_printf_i+0xd8>
 8000c88:	2973      	cmp	r1, #115	; 0x73
 8000c8a:	f000 809d 	beq.w	8000dc8 <_printf_i+0x1a4>
 8000c8e:	d808      	bhi.n	8000ca2 <_printf_i+0x7e>
 8000c90:	296f      	cmp	r1, #111	; 0x6f
 8000c92:	d020      	beq.n	8000cd6 <_printf_i+0xb2>
 8000c94:	2970      	cmp	r1, #112	; 0x70
 8000c96:	d1dd      	bne.n	8000c54 <_printf_i+0x30>
 8000c98:	6823      	ldr	r3, [r4, #0]
 8000c9a:	f043 0320 	orr.w	r3, r3, #32
 8000c9e:	6023      	str	r3, [r4, #0]
 8000ca0:	e003      	b.n	8000caa <_printf_i+0x86>
 8000ca2:	2975      	cmp	r1, #117	; 0x75
 8000ca4:	d017      	beq.n	8000cd6 <_printf_i+0xb2>
 8000ca6:	2978      	cmp	r1, #120	; 0x78
 8000ca8:	d1d4      	bne.n	8000c54 <_printf_i+0x30>
 8000caa:	2378      	movs	r3, #120	; 0x78
 8000cac:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000cb0:	4864      	ldr	r0, [pc, #400]	; (8000e44 <_printf_i+0x220>)
 8000cb2:	e055      	b.n	8000d60 <_printf_i+0x13c>
 8000cb4:	6813      	ldr	r3, [r2, #0]
 8000cb6:	1d19      	adds	r1, r3, #4
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	6011      	str	r1, [r2, #0]
 8000cbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000cc4:	2301      	movs	r3, #1
 8000cc6:	e08c      	b.n	8000de2 <_printf_i+0x1be>
 8000cc8:	681b      	ldr	r3, [r3, #0]
 8000cca:	6011      	str	r1, [r2, #0]
 8000ccc:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000cd0:	bf18      	it	ne
 8000cd2:	b21b      	sxthne	r3, r3
 8000cd4:	e7cf      	b.n	8000c76 <_printf_i+0x52>
 8000cd6:	6813      	ldr	r3, [r2, #0]
 8000cd8:	6825      	ldr	r5, [r4, #0]
 8000cda:	1d18      	adds	r0, r3, #4
 8000cdc:	6010      	str	r0, [r2, #0]
 8000cde:	0628      	lsls	r0, r5, #24
 8000ce0:	d501      	bpl.n	8000ce6 <_printf_i+0xc2>
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	e002      	b.n	8000cec <_printf_i+0xc8>
 8000ce6:	0668      	lsls	r0, r5, #25
 8000ce8:	d5fb      	bpl.n	8000ce2 <_printf_i+0xbe>
 8000cea:	881b      	ldrh	r3, [r3, #0]
 8000cec:	4854      	ldr	r0, [pc, #336]	; (8000e40 <_printf_i+0x21c>)
 8000cee:	296f      	cmp	r1, #111	; 0x6f
 8000cf0:	bf14      	ite	ne
 8000cf2:	220a      	movne	r2, #10
 8000cf4:	2208      	moveq	r2, #8
 8000cf6:	2100      	movs	r1, #0
 8000cf8:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000cfc:	6865      	ldr	r5, [r4, #4]
 8000cfe:	60a5      	str	r5, [r4, #8]
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	f2c0 8095 	blt.w	8000e30 <_printf_i+0x20c>
 8000d06:	6821      	ldr	r1, [r4, #0]
 8000d08:	f021 0104 	bic.w	r1, r1, #4
 8000d0c:	6021      	str	r1, [r4, #0]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d13d      	bne.n	8000d8e <_printf_i+0x16a>
 8000d12:	2d00      	cmp	r5, #0
 8000d14:	f040 808e 	bne.w	8000e34 <_printf_i+0x210>
 8000d18:	4665      	mov	r5, ip
 8000d1a:	2a08      	cmp	r2, #8
 8000d1c:	d10b      	bne.n	8000d36 <_printf_i+0x112>
 8000d1e:	6823      	ldr	r3, [r4, #0]
 8000d20:	07db      	lsls	r3, r3, #31
 8000d22:	d508      	bpl.n	8000d36 <_printf_i+0x112>
 8000d24:	6923      	ldr	r3, [r4, #16]
 8000d26:	6862      	ldr	r2, [r4, #4]
 8000d28:	429a      	cmp	r2, r3
 8000d2a:	bfde      	ittt	le
 8000d2c:	2330      	movle	r3, #48	; 0x30
 8000d2e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d32:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d36:	ebac 0305 	sub.w	r3, ip, r5
 8000d3a:	6123      	str	r3, [r4, #16]
 8000d3c:	f8cd 8000 	str.w	r8, [sp]
 8000d40:	463b      	mov	r3, r7
 8000d42:	aa03      	add	r2, sp, #12
 8000d44:	4621      	mov	r1, r4
 8000d46:	4630      	mov	r0, r6
 8000d48:	f7ff fef6 	bl	8000b38 <_printf_common>
 8000d4c:	3001      	adds	r0, #1
 8000d4e:	d14d      	bne.n	8000dec <_printf_i+0x1c8>
 8000d50:	f04f 30ff 	mov.w	r0, #4294967295
 8000d54:	b005      	add	sp, #20
 8000d56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d5a:	4839      	ldr	r0, [pc, #228]	; (8000e40 <_printf_i+0x21c>)
 8000d5c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000d60:	6813      	ldr	r3, [r2, #0]
 8000d62:	6821      	ldr	r1, [r4, #0]
 8000d64:	1d1d      	adds	r5, r3, #4
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	6015      	str	r5, [r2, #0]
 8000d6a:	060a      	lsls	r2, r1, #24
 8000d6c:	d50b      	bpl.n	8000d86 <_printf_i+0x162>
 8000d6e:	07ca      	lsls	r2, r1, #31
 8000d70:	bf44      	itt	mi
 8000d72:	f041 0120 	orrmi.w	r1, r1, #32
 8000d76:	6021      	strmi	r1, [r4, #0]
 8000d78:	b91b      	cbnz	r3, 8000d82 <_printf_i+0x15e>
 8000d7a:	6822      	ldr	r2, [r4, #0]
 8000d7c:	f022 0220 	bic.w	r2, r2, #32
 8000d80:	6022      	str	r2, [r4, #0]
 8000d82:	2210      	movs	r2, #16
 8000d84:	e7b7      	b.n	8000cf6 <_printf_i+0xd2>
 8000d86:	064d      	lsls	r5, r1, #25
 8000d88:	bf48      	it	mi
 8000d8a:	b29b      	uxthmi	r3, r3
 8000d8c:	e7ef      	b.n	8000d6e <_printf_i+0x14a>
 8000d8e:	4665      	mov	r5, ip
 8000d90:	fbb3 f1f2 	udiv	r1, r3, r2
 8000d94:	fb02 3311 	mls	r3, r2, r1, r3
 8000d98:	5cc3      	ldrb	r3, [r0, r3]
 8000d9a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000d9e:	460b      	mov	r3, r1
 8000da0:	2900      	cmp	r1, #0
 8000da2:	d1f5      	bne.n	8000d90 <_printf_i+0x16c>
 8000da4:	e7b9      	b.n	8000d1a <_printf_i+0xf6>
 8000da6:	6813      	ldr	r3, [r2, #0]
 8000da8:	6825      	ldr	r5, [r4, #0]
 8000daa:	6961      	ldr	r1, [r4, #20]
 8000dac:	1d18      	adds	r0, r3, #4
 8000dae:	6010      	str	r0, [r2, #0]
 8000db0:	0628      	lsls	r0, r5, #24
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	d501      	bpl.n	8000dba <_printf_i+0x196>
 8000db6:	6019      	str	r1, [r3, #0]
 8000db8:	e002      	b.n	8000dc0 <_printf_i+0x19c>
 8000dba:	066a      	lsls	r2, r5, #25
 8000dbc:	d5fb      	bpl.n	8000db6 <_printf_i+0x192>
 8000dbe:	8019      	strh	r1, [r3, #0]
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	6123      	str	r3, [r4, #16]
 8000dc4:	4665      	mov	r5, ip
 8000dc6:	e7b9      	b.n	8000d3c <_printf_i+0x118>
 8000dc8:	6813      	ldr	r3, [r2, #0]
 8000dca:	1d19      	adds	r1, r3, #4
 8000dcc:	6011      	str	r1, [r2, #0]
 8000dce:	681d      	ldr	r5, [r3, #0]
 8000dd0:	6862      	ldr	r2, [r4, #4]
 8000dd2:	2100      	movs	r1, #0
 8000dd4:	4628      	mov	r0, r5
 8000dd6:	f7ff fa03 	bl	80001e0 <memchr>
 8000dda:	b108      	cbz	r0, 8000de0 <_printf_i+0x1bc>
 8000ddc:	1b40      	subs	r0, r0, r5
 8000dde:	6060      	str	r0, [r4, #4]
 8000de0:	6863      	ldr	r3, [r4, #4]
 8000de2:	6123      	str	r3, [r4, #16]
 8000de4:	2300      	movs	r3, #0
 8000de6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dea:	e7a7      	b.n	8000d3c <_printf_i+0x118>
 8000dec:	6923      	ldr	r3, [r4, #16]
 8000dee:	462a      	mov	r2, r5
 8000df0:	4639      	mov	r1, r7
 8000df2:	4630      	mov	r0, r6
 8000df4:	47c0      	blx	r8
 8000df6:	3001      	adds	r0, #1
 8000df8:	d0aa      	beq.n	8000d50 <_printf_i+0x12c>
 8000dfa:	6823      	ldr	r3, [r4, #0]
 8000dfc:	079b      	lsls	r3, r3, #30
 8000dfe:	d413      	bmi.n	8000e28 <_printf_i+0x204>
 8000e00:	68e0      	ldr	r0, [r4, #12]
 8000e02:	9b03      	ldr	r3, [sp, #12]
 8000e04:	4298      	cmp	r0, r3
 8000e06:	bfb8      	it	lt
 8000e08:	4618      	movlt	r0, r3
 8000e0a:	e7a3      	b.n	8000d54 <_printf_i+0x130>
 8000e0c:	2301      	movs	r3, #1
 8000e0e:	464a      	mov	r2, r9
 8000e10:	4639      	mov	r1, r7
 8000e12:	4630      	mov	r0, r6
 8000e14:	47c0      	blx	r8
 8000e16:	3001      	adds	r0, #1
 8000e18:	d09a      	beq.n	8000d50 <_printf_i+0x12c>
 8000e1a:	3501      	adds	r5, #1
 8000e1c:	68e3      	ldr	r3, [r4, #12]
 8000e1e:	9a03      	ldr	r2, [sp, #12]
 8000e20:	1a9b      	subs	r3, r3, r2
 8000e22:	42ab      	cmp	r3, r5
 8000e24:	dcf2      	bgt.n	8000e0c <_printf_i+0x1e8>
 8000e26:	e7eb      	b.n	8000e00 <_printf_i+0x1dc>
 8000e28:	2500      	movs	r5, #0
 8000e2a:	f104 0919 	add.w	r9, r4, #25
 8000e2e:	e7f5      	b.n	8000e1c <_printf_i+0x1f8>
 8000e30:	2b00      	cmp	r3, #0
 8000e32:	d1ac      	bne.n	8000d8e <_printf_i+0x16a>
 8000e34:	7803      	ldrb	r3, [r0, #0]
 8000e36:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e3a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e3e:	e76c      	b.n	8000d1a <_printf_i+0xf6>
 8000e40:	080014b1 	.word	0x080014b1
 8000e44:	080014c2 	.word	0x080014c2

08000e48 <_sbrk_r>:
 8000e48:	b538      	push	{r3, r4, r5, lr}
 8000e4a:	4c06      	ldr	r4, [pc, #24]	; (8000e64 <_sbrk_r+0x1c>)
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	4605      	mov	r5, r0
 8000e50:	4608      	mov	r0, r1
 8000e52:	6023      	str	r3, [r4, #0]
 8000e54:	f7ff faac 	bl	80003b0 <_sbrk>
 8000e58:	1c43      	adds	r3, r0, #1
 8000e5a:	d102      	bne.n	8000e62 <_sbrk_r+0x1a>
 8000e5c:	6823      	ldr	r3, [r4, #0]
 8000e5e:	b103      	cbz	r3, 8000e62 <_sbrk_r+0x1a>
 8000e60:	602b      	str	r3, [r5, #0]
 8000e62:	bd38      	pop	{r3, r4, r5, pc}
 8000e64:	2000008c 	.word	0x2000008c

08000e68 <__sread>:
 8000e68:	b510      	push	{r4, lr}
 8000e6a:	460c      	mov	r4, r1
 8000e6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e70:	f000 fa96 	bl	80013a0 <_read_r>
 8000e74:	2800      	cmp	r0, #0
 8000e76:	bfab      	itete	ge
 8000e78:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e7a:	89a3      	ldrhlt	r3, [r4, #12]
 8000e7c:	181b      	addge	r3, r3, r0
 8000e7e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e82:	bfac      	ite	ge
 8000e84:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e86:	81a3      	strhlt	r3, [r4, #12]
 8000e88:	bd10      	pop	{r4, pc}

08000e8a <__swrite>:
 8000e8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e8e:	461f      	mov	r7, r3
 8000e90:	898b      	ldrh	r3, [r1, #12]
 8000e92:	05db      	lsls	r3, r3, #23
 8000e94:	4605      	mov	r5, r0
 8000e96:	460c      	mov	r4, r1
 8000e98:	4616      	mov	r6, r2
 8000e9a:	d505      	bpl.n	8000ea8 <__swrite+0x1e>
 8000e9c:	2302      	movs	r3, #2
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ea4:	f000 f9b6 	bl	8001214 <_lseek_r>
 8000ea8:	89a3      	ldrh	r3, [r4, #12]
 8000eaa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000eae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000eb2:	81a3      	strh	r3, [r4, #12]
 8000eb4:	4632      	mov	r2, r6
 8000eb6:	463b      	mov	r3, r7
 8000eb8:	4628      	mov	r0, r5
 8000eba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ebe:	f000 b869 	b.w	8000f94 <_write_r>

08000ec2 <__sseek>:
 8000ec2:	b510      	push	{r4, lr}
 8000ec4:	460c      	mov	r4, r1
 8000ec6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eca:	f000 f9a3 	bl	8001214 <_lseek_r>
 8000ece:	1c43      	adds	r3, r0, #1
 8000ed0:	89a3      	ldrh	r3, [r4, #12]
 8000ed2:	bf15      	itete	ne
 8000ed4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ed6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000eda:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000ede:	81a3      	strheq	r3, [r4, #12]
 8000ee0:	bf18      	it	ne
 8000ee2:	81a3      	strhne	r3, [r4, #12]
 8000ee4:	bd10      	pop	{r4, pc}

08000ee6 <__sclose>:
 8000ee6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eea:	f000 b8d3 	b.w	8001094 <_close_r>
	...

08000ef0 <__swbuf_r>:
 8000ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ef2:	460e      	mov	r6, r1
 8000ef4:	4614      	mov	r4, r2
 8000ef6:	4605      	mov	r5, r0
 8000ef8:	b118      	cbz	r0, 8000f02 <__swbuf_r+0x12>
 8000efa:	6983      	ldr	r3, [r0, #24]
 8000efc:	b90b      	cbnz	r3, 8000f02 <__swbuf_r+0x12>
 8000efe:	f7ff fbf7 	bl	80006f0 <__sinit>
 8000f02:	4b21      	ldr	r3, [pc, #132]	; (8000f88 <__swbuf_r+0x98>)
 8000f04:	429c      	cmp	r4, r3
 8000f06:	d12a      	bne.n	8000f5e <__swbuf_r+0x6e>
 8000f08:	686c      	ldr	r4, [r5, #4]
 8000f0a:	69a3      	ldr	r3, [r4, #24]
 8000f0c:	60a3      	str	r3, [r4, #8]
 8000f0e:	89a3      	ldrh	r3, [r4, #12]
 8000f10:	071a      	lsls	r2, r3, #28
 8000f12:	d52e      	bpl.n	8000f72 <__swbuf_r+0x82>
 8000f14:	6923      	ldr	r3, [r4, #16]
 8000f16:	b363      	cbz	r3, 8000f72 <__swbuf_r+0x82>
 8000f18:	6923      	ldr	r3, [r4, #16]
 8000f1a:	6820      	ldr	r0, [r4, #0]
 8000f1c:	1ac0      	subs	r0, r0, r3
 8000f1e:	6963      	ldr	r3, [r4, #20]
 8000f20:	b2f6      	uxtb	r6, r6
 8000f22:	4283      	cmp	r3, r0
 8000f24:	4637      	mov	r7, r6
 8000f26:	dc04      	bgt.n	8000f32 <__swbuf_r+0x42>
 8000f28:	4621      	mov	r1, r4
 8000f2a:	4628      	mov	r0, r5
 8000f2c:	f000 f948 	bl	80011c0 <_fflush_r>
 8000f30:	bb28      	cbnz	r0, 8000f7e <__swbuf_r+0x8e>
 8000f32:	68a3      	ldr	r3, [r4, #8]
 8000f34:	3b01      	subs	r3, #1
 8000f36:	60a3      	str	r3, [r4, #8]
 8000f38:	6823      	ldr	r3, [r4, #0]
 8000f3a:	1c5a      	adds	r2, r3, #1
 8000f3c:	6022      	str	r2, [r4, #0]
 8000f3e:	701e      	strb	r6, [r3, #0]
 8000f40:	6963      	ldr	r3, [r4, #20]
 8000f42:	3001      	adds	r0, #1
 8000f44:	4283      	cmp	r3, r0
 8000f46:	d004      	beq.n	8000f52 <__swbuf_r+0x62>
 8000f48:	89a3      	ldrh	r3, [r4, #12]
 8000f4a:	07db      	lsls	r3, r3, #31
 8000f4c:	d519      	bpl.n	8000f82 <__swbuf_r+0x92>
 8000f4e:	2e0a      	cmp	r6, #10
 8000f50:	d117      	bne.n	8000f82 <__swbuf_r+0x92>
 8000f52:	4621      	mov	r1, r4
 8000f54:	4628      	mov	r0, r5
 8000f56:	f000 f933 	bl	80011c0 <_fflush_r>
 8000f5a:	b190      	cbz	r0, 8000f82 <__swbuf_r+0x92>
 8000f5c:	e00f      	b.n	8000f7e <__swbuf_r+0x8e>
 8000f5e:	4b0b      	ldr	r3, [pc, #44]	; (8000f8c <__swbuf_r+0x9c>)
 8000f60:	429c      	cmp	r4, r3
 8000f62:	d101      	bne.n	8000f68 <__swbuf_r+0x78>
 8000f64:	68ac      	ldr	r4, [r5, #8]
 8000f66:	e7d0      	b.n	8000f0a <__swbuf_r+0x1a>
 8000f68:	4b09      	ldr	r3, [pc, #36]	; (8000f90 <__swbuf_r+0xa0>)
 8000f6a:	429c      	cmp	r4, r3
 8000f6c:	bf08      	it	eq
 8000f6e:	68ec      	ldreq	r4, [r5, #12]
 8000f70:	e7cb      	b.n	8000f0a <__swbuf_r+0x1a>
 8000f72:	4621      	mov	r1, r4
 8000f74:	4628      	mov	r0, r5
 8000f76:	f000 f81f 	bl	8000fb8 <__swsetup_r>
 8000f7a:	2800      	cmp	r0, #0
 8000f7c:	d0cc      	beq.n	8000f18 <__swbuf_r+0x28>
 8000f7e:	f04f 37ff 	mov.w	r7, #4294967295
 8000f82:	4638      	mov	r0, r7
 8000f84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f86:	bf00      	nop
 8000f88:	08001460 	.word	0x08001460
 8000f8c:	08001480 	.word	0x08001480
 8000f90:	08001440 	.word	0x08001440

08000f94 <_write_r>:
 8000f94:	b538      	push	{r3, r4, r5, lr}
 8000f96:	4c07      	ldr	r4, [pc, #28]	; (8000fb4 <_write_r+0x20>)
 8000f98:	4605      	mov	r5, r0
 8000f9a:	4608      	mov	r0, r1
 8000f9c:	4611      	mov	r1, r2
 8000f9e:	2200      	movs	r2, #0
 8000fa0:	6022      	str	r2, [r4, #0]
 8000fa2:	461a      	mov	r2, r3
 8000fa4:	f7ff f9b3 	bl	800030e <_write>
 8000fa8:	1c43      	adds	r3, r0, #1
 8000faa:	d102      	bne.n	8000fb2 <_write_r+0x1e>
 8000fac:	6823      	ldr	r3, [r4, #0]
 8000fae:	b103      	cbz	r3, 8000fb2 <_write_r+0x1e>
 8000fb0:	602b      	str	r3, [r5, #0]
 8000fb2:	bd38      	pop	{r3, r4, r5, pc}
 8000fb4:	2000008c 	.word	0x2000008c

08000fb8 <__swsetup_r>:
 8000fb8:	4b32      	ldr	r3, [pc, #200]	; (8001084 <__swsetup_r+0xcc>)
 8000fba:	b570      	push	{r4, r5, r6, lr}
 8000fbc:	681d      	ldr	r5, [r3, #0]
 8000fbe:	4606      	mov	r6, r0
 8000fc0:	460c      	mov	r4, r1
 8000fc2:	b125      	cbz	r5, 8000fce <__swsetup_r+0x16>
 8000fc4:	69ab      	ldr	r3, [r5, #24]
 8000fc6:	b913      	cbnz	r3, 8000fce <__swsetup_r+0x16>
 8000fc8:	4628      	mov	r0, r5
 8000fca:	f7ff fb91 	bl	80006f0 <__sinit>
 8000fce:	4b2e      	ldr	r3, [pc, #184]	; (8001088 <__swsetup_r+0xd0>)
 8000fd0:	429c      	cmp	r4, r3
 8000fd2:	d10f      	bne.n	8000ff4 <__swsetup_r+0x3c>
 8000fd4:	686c      	ldr	r4, [r5, #4]
 8000fd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fda:	b29a      	uxth	r2, r3
 8000fdc:	0715      	lsls	r5, r2, #28
 8000fde:	d42c      	bmi.n	800103a <__swsetup_r+0x82>
 8000fe0:	06d0      	lsls	r0, r2, #27
 8000fe2:	d411      	bmi.n	8001008 <__swsetup_r+0x50>
 8000fe4:	2209      	movs	r2, #9
 8000fe6:	6032      	str	r2, [r6, #0]
 8000fe8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fec:	81a3      	strh	r3, [r4, #12]
 8000fee:	f04f 30ff 	mov.w	r0, #4294967295
 8000ff2:	e03e      	b.n	8001072 <__swsetup_r+0xba>
 8000ff4:	4b25      	ldr	r3, [pc, #148]	; (800108c <__swsetup_r+0xd4>)
 8000ff6:	429c      	cmp	r4, r3
 8000ff8:	d101      	bne.n	8000ffe <__swsetup_r+0x46>
 8000ffa:	68ac      	ldr	r4, [r5, #8]
 8000ffc:	e7eb      	b.n	8000fd6 <__swsetup_r+0x1e>
 8000ffe:	4b24      	ldr	r3, [pc, #144]	; (8001090 <__swsetup_r+0xd8>)
 8001000:	429c      	cmp	r4, r3
 8001002:	bf08      	it	eq
 8001004:	68ec      	ldreq	r4, [r5, #12]
 8001006:	e7e6      	b.n	8000fd6 <__swsetup_r+0x1e>
 8001008:	0751      	lsls	r1, r2, #29
 800100a:	d512      	bpl.n	8001032 <__swsetup_r+0x7a>
 800100c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800100e:	b141      	cbz	r1, 8001022 <__swsetup_r+0x6a>
 8001010:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001014:	4299      	cmp	r1, r3
 8001016:	d002      	beq.n	800101e <__swsetup_r+0x66>
 8001018:	4630      	mov	r0, r6
 800101a:	f000 f973 	bl	8001304 <_free_r>
 800101e:	2300      	movs	r3, #0
 8001020:	6363      	str	r3, [r4, #52]	; 0x34
 8001022:	89a3      	ldrh	r3, [r4, #12]
 8001024:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001028:	81a3      	strh	r3, [r4, #12]
 800102a:	2300      	movs	r3, #0
 800102c:	6063      	str	r3, [r4, #4]
 800102e:	6923      	ldr	r3, [r4, #16]
 8001030:	6023      	str	r3, [r4, #0]
 8001032:	89a3      	ldrh	r3, [r4, #12]
 8001034:	f043 0308 	orr.w	r3, r3, #8
 8001038:	81a3      	strh	r3, [r4, #12]
 800103a:	6923      	ldr	r3, [r4, #16]
 800103c:	b94b      	cbnz	r3, 8001052 <__swsetup_r+0x9a>
 800103e:	89a3      	ldrh	r3, [r4, #12]
 8001040:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001044:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001048:	d003      	beq.n	8001052 <__swsetup_r+0x9a>
 800104a:	4621      	mov	r1, r4
 800104c:	4630      	mov	r0, r6
 800104e:	f000 f917 	bl	8001280 <__smakebuf_r>
 8001052:	89a2      	ldrh	r2, [r4, #12]
 8001054:	f012 0301 	ands.w	r3, r2, #1
 8001058:	d00c      	beq.n	8001074 <__swsetup_r+0xbc>
 800105a:	2300      	movs	r3, #0
 800105c:	60a3      	str	r3, [r4, #8]
 800105e:	6963      	ldr	r3, [r4, #20]
 8001060:	425b      	negs	r3, r3
 8001062:	61a3      	str	r3, [r4, #24]
 8001064:	6923      	ldr	r3, [r4, #16]
 8001066:	b953      	cbnz	r3, 800107e <__swsetup_r+0xc6>
 8001068:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800106c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8001070:	d1ba      	bne.n	8000fe8 <__swsetup_r+0x30>
 8001072:	bd70      	pop	{r4, r5, r6, pc}
 8001074:	0792      	lsls	r2, r2, #30
 8001076:	bf58      	it	pl
 8001078:	6963      	ldrpl	r3, [r4, #20]
 800107a:	60a3      	str	r3, [r4, #8]
 800107c:	e7f2      	b.n	8001064 <__swsetup_r+0xac>
 800107e:	2000      	movs	r0, #0
 8001080:	e7f7      	b.n	8001072 <__swsetup_r+0xba>
 8001082:	bf00      	nop
 8001084:	20000000 	.word	0x20000000
 8001088:	08001460 	.word	0x08001460
 800108c:	08001480 	.word	0x08001480
 8001090:	08001440 	.word	0x08001440

08001094 <_close_r>:
 8001094:	b538      	push	{r3, r4, r5, lr}
 8001096:	4c06      	ldr	r4, [pc, #24]	; (80010b0 <_close_r+0x1c>)
 8001098:	2300      	movs	r3, #0
 800109a:	4605      	mov	r5, r0
 800109c:	4608      	mov	r0, r1
 800109e:	6023      	str	r3, [r4, #0]
 80010a0:	f7ff f951 	bl	8000346 <_close>
 80010a4:	1c43      	adds	r3, r0, #1
 80010a6:	d102      	bne.n	80010ae <_close_r+0x1a>
 80010a8:	6823      	ldr	r3, [r4, #0]
 80010aa:	b103      	cbz	r3, 80010ae <_close_r+0x1a>
 80010ac:	602b      	str	r3, [r5, #0]
 80010ae:	bd38      	pop	{r3, r4, r5, pc}
 80010b0:	2000008c 	.word	0x2000008c

080010b4 <__sflush_r>:
 80010b4:	898a      	ldrh	r2, [r1, #12]
 80010b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010ba:	4605      	mov	r5, r0
 80010bc:	0710      	lsls	r0, r2, #28
 80010be:	460c      	mov	r4, r1
 80010c0:	d458      	bmi.n	8001174 <__sflush_r+0xc0>
 80010c2:	684b      	ldr	r3, [r1, #4]
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	dc05      	bgt.n	80010d4 <__sflush_r+0x20>
 80010c8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	dc02      	bgt.n	80010d4 <__sflush_r+0x20>
 80010ce:	2000      	movs	r0, #0
 80010d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010d6:	2e00      	cmp	r6, #0
 80010d8:	d0f9      	beq.n	80010ce <__sflush_r+0x1a>
 80010da:	2300      	movs	r3, #0
 80010dc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010e0:	682f      	ldr	r7, [r5, #0]
 80010e2:	6a21      	ldr	r1, [r4, #32]
 80010e4:	602b      	str	r3, [r5, #0]
 80010e6:	d032      	beq.n	800114e <__sflush_r+0x9a>
 80010e8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010ea:	89a3      	ldrh	r3, [r4, #12]
 80010ec:	075a      	lsls	r2, r3, #29
 80010ee:	d505      	bpl.n	80010fc <__sflush_r+0x48>
 80010f0:	6863      	ldr	r3, [r4, #4]
 80010f2:	1ac0      	subs	r0, r0, r3
 80010f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010f6:	b10b      	cbz	r3, 80010fc <__sflush_r+0x48>
 80010f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010fa:	1ac0      	subs	r0, r0, r3
 80010fc:	2300      	movs	r3, #0
 80010fe:	4602      	mov	r2, r0
 8001100:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001102:	6a21      	ldr	r1, [r4, #32]
 8001104:	4628      	mov	r0, r5
 8001106:	47b0      	blx	r6
 8001108:	1c43      	adds	r3, r0, #1
 800110a:	89a3      	ldrh	r3, [r4, #12]
 800110c:	d106      	bne.n	800111c <__sflush_r+0x68>
 800110e:	6829      	ldr	r1, [r5, #0]
 8001110:	291d      	cmp	r1, #29
 8001112:	d848      	bhi.n	80011a6 <__sflush_r+0xf2>
 8001114:	4a29      	ldr	r2, [pc, #164]	; (80011bc <__sflush_r+0x108>)
 8001116:	40ca      	lsrs	r2, r1
 8001118:	07d6      	lsls	r6, r2, #31
 800111a:	d544      	bpl.n	80011a6 <__sflush_r+0xf2>
 800111c:	2200      	movs	r2, #0
 800111e:	6062      	str	r2, [r4, #4]
 8001120:	04d9      	lsls	r1, r3, #19
 8001122:	6922      	ldr	r2, [r4, #16]
 8001124:	6022      	str	r2, [r4, #0]
 8001126:	d504      	bpl.n	8001132 <__sflush_r+0x7e>
 8001128:	1c42      	adds	r2, r0, #1
 800112a:	d101      	bne.n	8001130 <__sflush_r+0x7c>
 800112c:	682b      	ldr	r3, [r5, #0]
 800112e:	b903      	cbnz	r3, 8001132 <__sflush_r+0x7e>
 8001130:	6560      	str	r0, [r4, #84]	; 0x54
 8001132:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001134:	602f      	str	r7, [r5, #0]
 8001136:	2900      	cmp	r1, #0
 8001138:	d0c9      	beq.n	80010ce <__sflush_r+0x1a>
 800113a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800113e:	4299      	cmp	r1, r3
 8001140:	d002      	beq.n	8001148 <__sflush_r+0x94>
 8001142:	4628      	mov	r0, r5
 8001144:	f000 f8de 	bl	8001304 <_free_r>
 8001148:	2000      	movs	r0, #0
 800114a:	6360      	str	r0, [r4, #52]	; 0x34
 800114c:	e7c0      	b.n	80010d0 <__sflush_r+0x1c>
 800114e:	2301      	movs	r3, #1
 8001150:	4628      	mov	r0, r5
 8001152:	47b0      	blx	r6
 8001154:	1c41      	adds	r1, r0, #1
 8001156:	d1c8      	bne.n	80010ea <__sflush_r+0x36>
 8001158:	682b      	ldr	r3, [r5, #0]
 800115a:	2b00      	cmp	r3, #0
 800115c:	d0c5      	beq.n	80010ea <__sflush_r+0x36>
 800115e:	2b1d      	cmp	r3, #29
 8001160:	d001      	beq.n	8001166 <__sflush_r+0xb2>
 8001162:	2b16      	cmp	r3, #22
 8001164:	d101      	bne.n	800116a <__sflush_r+0xb6>
 8001166:	602f      	str	r7, [r5, #0]
 8001168:	e7b1      	b.n	80010ce <__sflush_r+0x1a>
 800116a:	89a3      	ldrh	r3, [r4, #12]
 800116c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001170:	81a3      	strh	r3, [r4, #12]
 8001172:	e7ad      	b.n	80010d0 <__sflush_r+0x1c>
 8001174:	690f      	ldr	r7, [r1, #16]
 8001176:	2f00      	cmp	r7, #0
 8001178:	d0a9      	beq.n	80010ce <__sflush_r+0x1a>
 800117a:	0793      	lsls	r3, r2, #30
 800117c:	680e      	ldr	r6, [r1, #0]
 800117e:	bf08      	it	eq
 8001180:	694b      	ldreq	r3, [r1, #20]
 8001182:	600f      	str	r7, [r1, #0]
 8001184:	bf18      	it	ne
 8001186:	2300      	movne	r3, #0
 8001188:	eba6 0807 	sub.w	r8, r6, r7
 800118c:	608b      	str	r3, [r1, #8]
 800118e:	f1b8 0f00 	cmp.w	r8, #0
 8001192:	dd9c      	ble.n	80010ce <__sflush_r+0x1a>
 8001194:	4643      	mov	r3, r8
 8001196:	463a      	mov	r2, r7
 8001198:	6a21      	ldr	r1, [r4, #32]
 800119a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800119c:	4628      	mov	r0, r5
 800119e:	47b0      	blx	r6
 80011a0:	2800      	cmp	r0, #0
 80011a2:	dc06      	bgt.n	80011b2 <__sflush_r+0xfe>
 80011a4:	89a3      	ldrh	r3, [r4, #12]
 80011a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011aa:	81a3      	strh	r3, [r4, #12]
 80011ac:	f04f 30ff 	mov.w	r0, #4294967295
 80011b0:	e78e      	b.n	80010d0 <__sflush_r+0x1c>
 80011b2:	4407      	add	r7, r0
 80011b4:	eba8 0800 	sub.w	r8, r8, r0
 80011b8:	e7e9      	b.n	800118e <__sflush_r+0xda>
 80011ba:	bf00      	nop
 80011bc:	20400001 	.word	0x20400001

080011c0 <_fflush_r>:
 80011c0:	b538      	push	{r3, r4, r5, lr}
 80011c2:	690b      	ldr	r3, [r1, #16]
 80011c4:	4605      	mov	r5, r0
 80011c6:	460c      	mov	r4, r1
 80011c8:	b1db      	cbz	r3, 8001202 <_fflush_r+0x42>
 80011ca:	b118      	cbz	r0, 80011d4 <_fflush_r+0x14>
 80011cc:	6983      	ldr	r3, [r0, #24]
 80011ce:	b90b      	cbnz	r3, 80011d4 <_fflush_r+0x14>
 80011d0:	f7ff fa8e 	bl	80006f0 <__sinit>
 80011d4:	4b0c      	ldr	r3, [pc, #48]	; (8001208 <_fflush_r+0x48>)
 80011d6:	429c      	cmp	r4, r3
 80011d8:	d109      	bne.n	80011ee <_fflush_r+0x2e>
 80011da:	686c      	ldr	r4, [r5, #4]
 80011dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011e0:	b17b      	cbz	r3, 8001202 <_fflush_r+0x42>
 80011e2:	4621      	mov	r1, r4
 80011e4:	4628      	mov	r0, r5
 80011e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011ea:	f7ff bf63 	b.w	80010b4 <__sflush_r>
 80011ee:	4b07      	ldr	r3, [pc, #28]	; (800120c <_fflush_r+0x4c>)
 80011f0:	429c      	cmp	r4, r3
 80011f2:	d101      	bne.n	80011f8 <_fflush_r+0x38>
 80011f4:	68ac      	ldr	r4, [r5, #8]
 80011f6:	e7f1      	b.n	80011dc <_fflush_r+0x1c>
 80011f8:	4b05      	ldr	r3, [pc, #20]	; (8001210 <_fflush_r+0x50>)
 80011fa:	429c      	cmp	r4, r3
 80011fc:	bf08      	it	eq
 80011fe:	68ec      	ldreq	r4, [r5, #12]
 8001200:	e7ec      	b.n	80011dc <_fflush_r+0x1c>
 8001202:	2000      	movs	r0, #0
 8001204:	bd38      	pop	{r3, r4, r5, pc}
 8001206:	bf00      	nop
 8001208:	08001460 	.word	0x08001460
 800120c:	08001480 	.word	0x08001480
 8001210:	08001440 	.word	0x08001440

08001214 <_lseek_r>:
 8001214:	b538      	push	{r3, r4, r5, lr}
 8001216:	4c07      	ldr	r4, [pc, #28]	; (8001234 <_lseek_r+0x20>)
 8001218:	4605      	mov	r5, r0
 800121a:	4608      	mov	r0, r1
 800121c:	4611      	mov	r1, r2
 800121e:	2200      	movs	r2, #0
 8001220:	6022      	str	r2, [r4, #0]
 8001222:	461a      	mov	r2, r3
 8001224:	f7ff f8b6 	bl	8000394 <_lseek>
 8001228:	1c43      	adds	r3, r0, #1
 800122a:	d102      	bne.n	8001232 <_lseek_r+0x1e>
 800122c:	6823      	ldr	r3, [r4, #0]
 800122e:	b103      	cbz	r3, 8001232 <_lseek_r+0x1e>
 8001230:	602b      	str	r3, [r5, #0]
 8001232:	bd38      	pop	{r3, r4, r5, pc}
 8001234:	2000008c 	.word	0x2000008c

08001238 <__swhatbuf_r>:
 8001238:	b570      	push	{r4, r5, r6, lr}
 800123a:	460e      	mov	r6, r1
 800123c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001240:	2900      	cmp	r1, #0
 8001242:	b096      	sub	sp, #88	; 0x58
 8001244:	4614      	mov	r4, r2
 8001246:	461d      	mov	r5, r3
 8001248:	da07      	bge.n	800125a <__swhatbuf_r+0x22>
 800124a:	2300      	movs	r3, #0
 800124c:	602b      	str	r3, [r5, #0]
 800124e:	89b3      	ldrh	r3, [r6, #12]
 8001250:	061a      	lsls	r2, r3, #24
 8001252:	d410      	bmi.n	8001276 <__swhatbuf_r+0x3e>
 8001254:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001258:	e00e      	b.n	8001278 <__swhatbuf_r+0x40>
 800125a:	466a      	mov	r2, sp
 800125c:	f000 f8b2 	bl	80013c4 <_fstat_r>
 8001260:	2800      	cmp	r0, #0
 8001262:	dbf2      	blt.n	800124a <__swhatbuf_r+0x12>
 8001264:	9a01      	ldr	r2, [sp, #4]
 8001266:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800126a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800126e:	425a      	negs	r2, r3
 8001270:	415a      	adcs	r2, r3
 8001272:	602a      	str	r2, [r5, #0]
 8001274:	e7ee      	b.n	8001254 <__swhatbuf_r+0x1c>
 8001276:	2340      	movs	r3, #64	; 0x40
 8001278:	2000      	movs	r0, #0
 800127a:	6023      	str	r3, [r4, #0]
 800127c:	b016      	add	sp, #88	; 0x58
 800127e:	bd70      	pop	{r4, r5, r6, pc}

08001280 <__smakebuf_r>:
 8001280:	898b      	ldrh	r3, [r1, #12]
 8001282:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001284:	079d      	lsls	r5, r3, #30
 8001286:	4606      	mov	r6, r0
 8001288:	460c      	mov	r4, r1
 800128a:	d507      	bpl.n	800129c <__smakebuf_r+0x1c>
 800128c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	6123      	str	r3, [r4, #16]
 8001294:	2301      	movs	r3, #1
 8001296:	6163      	str	r3, [r4, #20]
 8001298:	b002      	add	sp, #8
 800129a:	bd70      	pop	{r4, r5, r6, pc}
 800129c:	ab01      	add	r3, sp, #4
 800129e:	466a      	mov	r2, sp
 80012a0:	f7ff ffca 	bl	8001238 <__swhatbuf_r>
 80012a4:	9900      	ldr	r1, [sp, #0]
 80012a6:	4605      	mov	r5, r0
 80012a8:	4630      	mov	r0, r6
 80012aa:	f7ff faab 	bl	8000804 <_malloc_r>
 80012ae:	b948      	cbnz	r0, 80012c4 <__smakebuf_r+0x44>
 80012b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012b4:	059a      	lsls	r2, r3, #22
 80012b6:	d4ef      	bmi.n	8001298 <__smakebuf_r+0x18>
 80012b8:	f023 0303 	bic.w	r3, r3, #3
 80012bc:	f043 0302 	orr.w	r3, r3, #2
 80012c0:	81a3      	strh	r3, [r4, #12]
 80012c2:	e7e3      	b.n	800128c <__smakebuf_r+0xc>
 80012c4:	4b0d      	ldr	r3, [pc, #52]	; (80012fc <__smakebuf_r+0x7c>)
 80012c6:	62b3      	str	r3, [r6, #40]	; 0x28
 80012c8:	89a3      	ldrh	r3, [r4, #12]
 80012ca:	6020      	str	r0, [r4, #0]
 80012cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012d0:	81a3      	strh	r3, [r4, #12]
 80012d2:	9b00      	ldr	r3, [sp, #0]
 80012d4:	6163      	str	r3, [r4, #20]
 80012d6:	9b01      	ldr	r3, [sp, #4]
 80012d8:	6120      	str	r0, [r4, #16]
 80012da:	b15b      	cbz	r3, 80012f4 <__smakebuf_r+0x74>
 80012dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012e0:	4630      	mov	r0, r6
 80012e2:	f000 f881 	bl	80013e8 <_isatty_r>
 80012e6:	b128      	cbz	r0, 80012f4 <__smakebuf_r+0x74>
 80012e8:	89a3      	ldrh	r3, [r4, #12]
 80012ea:	f023 0303 	bic.w	r3, r3, #3
 80012ee:	f043 0301 	orr.w	r3, r3, #1
 80012f2:	81a3      	strh	r3, [r4, #12]
 80012f4:	89a3      	ldrh	r3, [r4, #12]
 80012f6:	431d      	orrs	r5, r3
 80012f8:	81a5      	strh	r5, [r4, #12]
 80012fa:	e7cd      	b.n	8001298 <__smakebuf_r+0x18>
 80012fc:	080006b9 	.word	0x080006b9

08001300 <__malloc_lock>:
 8001300:	4770      	bx	lr

08001302 <__malloc_unlock>:
 8001302:	4770      	bx	lr

08001304 <_free_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	4605      	mov	r5, r0
 8001308:	2900      	cmp	r1, #0
 800130a:	d045      	beq.n	8001398 <_free_r+0x94>
 800130c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001310:	1f0c      	subs	r4, r1, #4
 8001312:	2b00      	cmp	r3, #0
 8001314:	bfb8      	it	lt
 8001316:	18e4      	addlt	r4, r4, r3
 8001318:	f7ff fff2 	bl	8001300 <__malloc_lock>
 800131c:	4a1f      	ldr	r2, [pc, #124]	; (800139c <_free_r+0x98>)
 800131e:	6813      	ldr	r3, [r2, #0]
 8001320:	4610      	mov	r0, r2
 8001322:	b933      	cbnz	r3, 8001332 <_free_r+0x2e>
 8001324:	6063      	str	r3, [r4, #4]
 8001326:	6014      	str	r4, [r2, #0]
 8001328:	4628      	mov	r0, r5
 800132a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800132e:	f7ff bfe8 	b.w	8001302 <__malloc_unlock>
 8001332:	42a3      	cmp	r3, r4
 8001334:	d90c      	bls.n	8001350 <_free_r+0x4c>
 8001336:	6821      	ldr	r1, [r4, #0]
 8001338:	1862      	adds	r2, r4, r1
 800133a:	4293      	cmp	r3, r2
 800133c:	bf04      	itt	eq
 800133e:	681a      	ldreq	r2, [r3, #0]
 8001340:	685b      	ldreq	r3, [r3, #4]
 8001342:	6063      	str	r3, [r4, #4]
 8001344:	bf04      	itt	eq
 8001346:	1852      	addeq	r2, r2, r1
 8001348:	6022      	streq	r2, [r4, #0]
 800134a:	6004      	str	r4, [r0, #0]
 800134c:	e7ec      	b.n	8001328 <_free_r+0x24>
 800134e:	4613      	mov	r3, r2
 8001350:	685a      	ldr	r2, [r3, #4]
 8001352:	b10a      	cbz	r2, 8001358 <_free_r+0x54>
 8001354:	42a2      	cmp	r2, r4
 8001356:	d9fa      	bls.n	800134e <_free_r+0x4a>
 8001358:	6819      	ldr	r1, [r3, #0]
 800135a:	1858      	adds	r0, r3, r1
 800135c:	42a0      	cmp	r0, r4
 800135e:	d10b      	bne.n	8001378 <_free_r+0x74>
 8001360:	6820      	ldr	r0, [r4, #0]
 8001362:	4401      	add	r1, r0
 8001364:	1858      	adds	r0, r3, r1
 8001366:	4282      	cmp	r2, r0
 8001368:	6019      	str	r1, [r3, #0]
 800136a:	d1dd      	bne.n	8001328 <_free_r+0x24>
 800136c:	6810      	ldr	r0, [r2, #0]
 800136e:	6852      	ldr	r2, [r2, #4]
 8001370:	605a      	str	r2, [r3, #4]
 8001372:	4401      	add	r1, r0
 8001374:	6019      	str	r1, [r3, #0]
 8001376:	e7d7      	b.n	8001328 <_free_r+0x24>
 8001378:	d902      	bls.n	8001380 <_free_r+0x7c>
 800137a:	230c      	movs	r3, #12
 800137c:	602b      	str	r3, [r5, #0]
 800137e:	e7d3      	b.n	8001328 <_free_r+0x24>
 8001380:	6820      	ldr	r0, [r4, #0]
 8001382:	1821      	adds	r1, r4, r0
 8001384:	428a      	cmp	r2, r1
 8001386:	bf04      	itt	eq
 8001388:	6811      	ldreq	r1, [r2, #0]
 800138a:	6852      	ldreq	r2, [r2, #4]
 800138c:	6062      	str	r2, [r4, #4]
 800138e:	bf04      	itt	eq
 8001390:	1809      	addeq	r1, r1, r0
 8001392:	6021      	streq	r1, [r4, #0]
 8001394:	605c      	str	r4, [r3, #4]
 8001396:	e7c7      	b.n	8001328 <_free_r+0x24>
 8001398:	bd38      	pop	{r3, r4, r5, pc}
 800139a:	bf00      	nop
 800139c:	20000084 	.word	0x20000084

080013a0 <_read_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4c07      	ldr	r4, [pc, #28]	; (80013c0 <_read_r+0x20>)
 80013a4:	4605      	mov	r5, r0
 80013a6:	4608      	mov	r0, r1
 80013a8:	4611      	mov	r1, r2
 80013aa:	2200      	movs	r2, #0
 80013ac:	6022      	str	r2, [r4, #0]
 80013ae:	461a      	mov	r2, r3
 80013b0:	f7fe ff90 	bl	80002d4 <_read>
 80013b4:	1c43      	adds	r3, r0, #1
 80013b6:	d102      	bne.n	80013be <_read_r+0x1e>
 80013b8:	6823      	ldr	r3, [r4, #0]
 80013ba:	b103      	cbz	r3, 80013be <_read_r+0x1e>
 80013bc:	602b      	str	r3, [r5, #0]
 80013be:	bd38      	pop	{r3, r4, r5, pc}
 80013c0:	2000008c 	.word	0x2000008c

080013c4 <_fstat_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4c07      	ldr	r4, [pc, #28]	; (80013e4 <_fstat_r+0x20>)
 80013c8:	2300      	movs	r3, #0
 80013ca:	4605      	mov	r5, r0
 80013cc:	4608      	mov	r0, r1
 80013ce:	4611      	mov	r1, r2
 80013d0:	6023      	str	r3, [r4, #0]
 80013d2:	f7fe ffc4 	bl	800035e <_fstat>
 80013d6:	1c43      	adds	r3, r0, #1
 80013d8:	d102      	bne.n	80013e0 <_fstat_r+0x1c>
 80013da:	6823      	ldr	r3, [r4, #0]
 80013dc:	b103      	cbz	r3, 80013e0 <_fstat_r+0x1c>
 80013de:	602b      	str	r3, [r5, #0]
 80013e0:	bd38      	pop	{r3, r4, r5, pc}
 80013e2:	bf00      	nop
 80013e4:	2000008c 	.word	0x2000008c

080013e8 <_isatty_r>:
 80013e8:	b538      	push	{r3, r4, r5, lr}
 80013ea:	4c06      	ldr	r4, [pc, #24]	; (8001404 <_isatty_r+0x1c>)
 80013ec:	2300      	movs	r3, #0
 80013ee:	4605      	mov	r5, r0
 80013f0:	4608      	mov	r0, r1
 80013f2:	6023      	str	r3, [r4, #0]
 80013f4:	f7fe ffc3 	bl	800037e <_isatty>
 80013f8:	1c43      	adds	r3, r0, #1
 80013fa:	d102      	bne.n	8001402 <_isatty_r+0x1a>
 80013fc:	6823      	ldr	r3, [r4, #0]
 80013fe:	b103      	cbz	r3, 8001402 <_isatty_r+0x1a>
 8001400:	602b      	str	r3, [r5, #0]
 8001402:	bd38      	pop	{r3, r4, r5, pc}
 8001404:	2000008c 	.word	0x2000008c

08001408 <_init>:
 8001408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800140a:	bf00      	nop
 800140c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800140e:	bc08      	pop	{r3}
 8001410:	469e      	mov	lr, r3
 8001412:	4770      	bx	lr

08001414 <_fini>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	bf00      	nop
 8001418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800141a:	bc08      	pop	{r3}
 800141c:	469e      	mov	lr, r3
 800141e:	4770      	bx	lr
