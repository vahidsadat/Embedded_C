
19_Timers_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012e4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08001484  08001484  00011484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001538  08001538  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001538  08001538  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001538  08001538  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001538  08001538  00011538  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800153c  0800153c  0001153c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001540  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  080015a4  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  080015a4  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003126  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000008b9  00000000  00000000  000231ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001a0  00000000  00000000  00023a78  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000148  00000000  00000000  00023c18  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000203b  00000000  00000000  00023d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001de2  00000000  00000000  00025d9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00054af2  00000000  00000000  00027b7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0007c66f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bec  00000000  00000000  0007c6ec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800146c 	.word	0x0800146c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	0800146c 	.word	0x0800146c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#define PIN5		(1U<<5)
#define LED_PIN		(PIN5)
static void tim2_callback(void);

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	tim2_1hz_interrupt_init();
 8000284:	f000 f8f2 	bl	800046c <tim2_1hz_interrupt_init>
	uart2_tx_init();
 8000288:	f000 f926 	bl	80004d8 <uart2_tx_init>
	RCC->AHB1ENR	|=GPIOAEN;
 800028c:	4b09      	ldr	r3, [pc, #36]	; (80002b4 <main+0x34>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a08      	ldr	r2, [pc, #32]	; (80002b4 <main+0x34>)
 8000292:	f043 0301 	orr.w	r3, r3, #1
 8000296:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOA->MODER |=(1U<<10);
 8000298:	4b07      	ldr	r3, [pc, #28]	; (80002b8 <main+0x38>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4a06      	ldr	r2, [pc, #24]	; (80002b8 <main+0x38>)
 800029e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002a2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 80002a4:	4b04      	ldr	r3, [pc, #16]	; (80002b8 <main+0x38>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	4a03      	ldr	r2, [pc, #12]	; (80002b8 <main+0x38>)
 80002aa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80002ae:	6013      	str	r3, [r2, #0]



	while(1)
 80002b0:	e7fe      	b.n	80002b0 <main+0x30>
 80002b2:	bf00      	nop
 80002b4:	40023800 	.word	0x40023800
 80002b8:	40020000 	.word	0x40020000

080002bc <tim2_callback>:

	}
}

static void tim2_callback(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
	printf("A second just passed !! \n\r");
 80002c0:	4805      	ldr	r0, [pc, #20]	; (80002d8 <tim2_callback+0x1c>)
 80002c2:	f000 f9ef 	bl	80006a4 <iprintf>
	GPIOA->ODR ^=LED_PIN;
 80002c6:	4b05      	ldr	r3, [pc, #20]	; (80002dc <tim2_callback+0x20>)
 80002c8:	695b      	ldr	r3, [r3, #20]
 80002ca:	4a04      	ldr	r2, [pc, #16]	; (80002dc <tim2_callback+0x20>)
 80002cc:	f083 0320 	eor.w	r3, r3, #32
 80002d0:	6153      	str	r3, [r2, #20]
}
 80002d2:	bf00      	nop
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	bf00      	nop
 80002d8:	08001484 	.word	0x08001484
 80002dc:	40020000 	.word	0x40020000

080002e0 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	/*Clear update interrupt flag*/
	TIM2->SR &=~SR_UIF;
 80002e4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002e8:	691b      	ldr	r3, [r3, #16]
 80002ea:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80002ee:	f023 0301 	bic.w	r3, r3, #1
 80002f2:	6113      	str	r3, [r2, #16]
	//DO sth...
	tim2_callback();
 80002f4:	f7ff ffe2 	bl	80002bc <tim2_callback>
}
 80002f8:	bf00      	nop
 80002fa:	bd80      	pop	{r7, pc}

080002fc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b086      	sub	sp, #24
 8000300:	af00      	add	r7, sp, #0
 8000302:	60f8      	str	r0, [r7, #12]
 8000304:	60b9      	str	r1, [r7, #8]
 8000306:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000308:	2300      	movs	r3, #0
 800030a:	617b      	str	r3, [r7, #20]
 800030c:	e00a      	b.n	8000324 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800030e:	f3af 8000 	nop.w
 8000312:	4601      	mov	r1, r0
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	1c5a      	adds	r2, r3, #1
 8000318:	60ba      	str	r2, [r7, #8]
 800031a:	b2ca      	uxtb	r2, r1
 800031c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	3301      	adds	r3, #1
 8000322:	617b      	str	r3, [r7, #20]
 8000324:	697a      	ldr	r2, [r7, #20]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	429a      	cmp	r2, r3
 800032a:	dbf0      	blt.n	800030e <_read+0x12>
	}

return len;
 800032c:	687b      	ldr	r3, [r7, #4]
}
 800032e:	4618      	mov	r0, r3
 8000330:	3718      	adds	r7, #24
 8000332:	46bd      	mov	sp, r7
 8000334:	bd80      	pop	{r7, pc}

08000336 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000336:	b580      	push	{r7, lr}
 8000338:	b086      	sub	sp, #24
 800033a:	af00      	add	r7, sp, #0
 800033c:	60f8      	str	r0, [r7, #12]
 800033e:	60b9      	str	r1, [r7, #8]
 8000340:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000342:	2300      	movs	r3, #0
 8000344:	617b      	str	r3, [r7, #20]
 8000346:	e009      	b.n	800035c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000348:	68bb      	ldr	r3, [r7, #8]
 800034a:	1c5a      	adds	r2, r3, #1
 800034c:	60ba      	str	r2, [r7, #8]
 800034e:	781b      	ldrb	r3, [r3, #0]
 8000350:	4618      	mov	r0, r3
 8000352:	f000 f8b5 	bl	80004c0 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000356:	697b      	ldr	r3, [r7, #20]
 8000358:	3301      	adds	r3, #1
 800035a:	617b      	str	r3, [r7, #20]
 800035c:	697a      	ldr	r2, [r7, #20]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	429a      	cmp	r2, r3
 8000362:	dbf1      	blt.n	8000348 <_write+0x12>
	}
	return len;
 8000364:	687b      	ldr	r3, [r7, #4]
}
 8000366:	4618      	mov	r0, r3
 8000368:	3718      	adds	r7, #24
 800036a:	46bd      	mov	sp, r7
 800036c:	bd80      	pop	{r7, pc}

0800036e <_close>:

int _close(int file)
{
 800036e:	b480      	push	{r7}
 8000370:	b083      	sub	sp, #12
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
	return -1;
 8000376:	f04f 33ff 	mov.w	r3, #4294967295
}
 800037a:	4618      	mov	r0, r3
 800037c:	370c      	adds	r7, #12
 800037e:	46bd      	mov	sp, r7
 8000380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000384:	4770      	bx	lr

08000386 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000386:	b480      	push	{r7}
 8000388:	b083      	sub	sp, #12
 800038a:	af00      	add	r7, sp, #0
 800038c:	6078      	str	r0, [r7, #4]
 800038e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000390:	683b      	ldr	r3, [r7, #0]
 8000392:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000396:	605a      	str	r2, [r3, #4]
	return 0;
 8000398:	2300      	movs	r3, #0
}
 800039a:	4618      	mov	r0, r3
 800039c:	370c      	adds	r7, #12
 800039e:	46bd      	mov	sp, r7
 80003a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a4:	4770      	bx	lr

080003a6 <_isatty>:

int _isatty(int file)
{
 80003a6:	b480      	push	{r7}
 80003a8:	b083      	sub	sp, #12
 80003aa:	af00      	add	r7, sp, #0
 80003ac:	6078      	str	r0, [r7, #4]
	return 1;
 80003ae:	2301      	movs	r3, #1
}
 80003b0:	4618      	mov	r0, r3
 80003b2:	370c      	adds	r7, #12
 80003b4:	46bd      	mov	sp, r7
 80003b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ba:	4770      	bx	lr

080003bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003bc:	b480      	push	{r7}
 80003be:	b085      	sub	sp, #20
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	60f8      	str	r0, [r7, #12]
 80003c4:	60b9      	str	r1, [r7, #8]
 80003c6:	607a      	str	r2, [r7, #4]
	return 0;
 80003c8:	2300      	movs	r3, #0
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3714      	adds	r7, #20
 80003ce:	46bd      	mov	sp, r7
 80003d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d4:	4770      	bx	lr
	...

080003d8 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b084      	sub	sp, #16
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003e0:	4b11      	ldr	r3, [pc, #68]	; (8000428 <_sbrk+0x50>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	2b00      	cmp	r3, #0
 80003e6:	d102      	bne.n	80003ee <_sbrk+0x16>
		heap_end = &end;
 80003e8:	4b0f      	ldr	r3, [pc, #60]	; (8000428 <_sbrk+0x50>)
 80003ea:	4a10      	ldr	r2, [pc, #64]	; (800042c <_sbrk+0x54>)
 80003ec:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003ee:	4b0e      	ldr	r3, [pc, #56]	; (8000428 <_sbrk+0x50>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003f4:	4b0c      	ldr	r3, [pc, #48]	; (8000428 <_sbrk+0x50>)
 80003f6:	681a      	ldr	r2, [r3, #0]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4413      	add	r3, r2
 80003fc:	466a      	mov	r2, sp
 80003fe:	4293      	cmp	r3, r2
 8000400:	d907      	bls.n	8000412 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8000402:	f000 f91d 	bl	8000640 <__errno>
 8000406:	4602      	mov	r2, r0
 8000408:	230c      	movs	r3, #12
 800040a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800040c:	f04f 33ff 	mov.w	r3, #4294967295
 8000410:	e006      	b.n	8000420 <_sbrk+0x48>
	}

	heap_end += incr;
 8000412:	4b05      	ldr	r3, [pc, #20]	; (8000428 <_sbrk+0x50>)
 8000414:	681a      	ldr	r2, [r3, #0]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4413      	add	r3, r2
 800041a:	4a03      	ldr	r2, [pc, #12]	; (8000428 <_sbrk+0x50>)
 800041c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800041e:	68fb      	ldr	r3, [r7, #12]
}
 8000420:	4618      	mov	r0, r3
 8000422:	3710      	adds	r7, #16
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	20000080 	.word	0x20000080
 800042c:	20000090 	.word	0x20000090

08000430 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
 8000436:	4603      	mov	r3, r0
 8000438:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800043a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800043e:	2b00      	cmp	r3, #0
 8000440:	db0b      	blt.n	800045a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000442:	79fb      	ldrb	r3, [r7, #7]
 8000444:	f003 021f 	and.w	r2, r3, #31
 8000448:	4907      	ldr	r1, [pc, #28]	; (8000468 <__NVIC_EnableIRQ+0x38>)
 800044a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800044e:	095b      	lsrs	r3, r3, #5
 8000450:	2001      	movs	r0, #1
 8000452:	fa00 f202 	lsl.w	r2, r0, r2
 8000456:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800045a:	bf00      	nop
 800045c:	370c      	adds	r7, #12
 800045e:	46bd      	mov	sp, r7
 8000460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000464:	4770      	bx	lr
 8000466:	bf00      	nop
 8000468:	e000e100 	.word	0xe000e100

0800046c <tim2_1hz_interrupt_init>:

}


void tim2_1hz_interrupt_init(void)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	af00      	add	r7, sp, #0
	/*Enable clock access to Timer 2*/
	RCC->APB1ENR |= TIM2EN;
 8000470:	4b12      	ldr	r3, [pc, #72]	; (80004bc <tim2_1hz_interrupt_init+0x50>)
 8000472:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000474:	4a11      	ldr	r2, [pc, #68]	; (80004bc <tim2_1hz_interrupt_init+0x50>)
 8000476:	f043 0301 	orr.w	r3, r3, #1
 800047a:	6413      	str	r3, [r2, #64]	; 0x40
	/*Set prescaler value*/
	TIM2->PSC = 1600 - 1; // 16 000 000 / 1 600 = 10 000
 800047c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000480:	f240 623f 	movw	r2, #1599	; 0x63f
 8000484:	629a      	str	r2, [r3, #40]	; 0x28
	/*Set auto-reload register*/
	TIM2->ARR = 10000-1; // 10 000 / 10 000 = 1
 8000486:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800048a:	f242 720f 	movw	r2, #9999	; 0x270f
 800048e:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Clear counter*/
	TIM2->CNT = 0;
 8000490:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000494:	2200      	movs	r2, #0
 8000496:	625a      	str	r2, [r3, #36]	; 0x24
	/*Enable Timer*/
	TIM2->CR1 =  CR1_CEN;
 8000498:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800049c:	2201      	movs	r2, #1
 800049e:	601a      	str	r2, [r3, #0]

	/*Enable TIM interrupt*/
	TIM2->DIER |= DIER_UIE;
 80004a0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80004a4:	68db      	ldr	r3, [r3, #12]
 80004a6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80004aa:	f043 0301 	orr.w	r3, r3, #1
 80004ae:	60d3      	str	r3, [r2, #12]
	/*Enable TIM interrupt in NVIC*/
	NVIC_EnableIRQ(TIM2_IRQn);
 80004b0:	201c      	movs	r0, #28
 80004b2:	f7ff ffbd 	bl	8000430 <__NVIC_EnableIRQ>

}
 80004b6:	bf00      	nop
 80004b8:	bd80      	pop	{r7, pc}
 80004ba:	bf00      	nop
 80004bc:	40023800 	.word	0x40023800

080004c0 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);
void uart2_write(int ch);


int __io_putchar(int ch)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b082      	sub	sp, #8
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 80004c8:	6878      	ldr	r0, [r7, #4]
 80004ca:	f000 f851 	bl	8000570 <uart2_write>
	return ch;
 80004ce:	687b      	ldr	r3, [r7, #4]
}
 80004d0:	4618      	mov	r0, r3
 80004d2:	3708      	adds	r7, #8
 80004d4:	46bd      	mov	sp, r7
 80004d6:	bd80      	pop	{r7, pc}

080004d8 <uart2_tx_init>:




void uart2_tx_init(void)
{
 80004d8:	b580      	push	{r7, lr}
 80004da:	af00      	add	r7, sp, #0
	/*******************Configure UART GPIO pin*************************/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |=GPIOAEN;
 80004dc:	4b20      	ldr	r3, [pc, #128]	; (8000560 <uart2_tx_init+0x88>)
 80004de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e0:	4a1f      	ldr	r2, [pc, #124]	; (8000560 <uart2_tx_init+0x88>)
 80004e2:	f043 0301 	orr.w	r3, r3, #1
 80004e6:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);
 80004e8:	4b1e      	ldr	r3, [pc, #120]	; (8000564 <uart2_tx_init+0x8c>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	4a1d      	ldr	r2, [pc, #116]	; (8000564 <uart2_tx_init+0x8c>)
 80004ee:	f023 0310 	bic.w	r3, r3, #16
 80004f2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<5);
 80004f4:	4b1b      	ldr	r3, [pc, #108]	; (8000564 <uart2_tx_init+0x8c>)
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	4a1a      	ldr	r2, [pc, #104]	; (8000564 <uart2_tx_init+0x8c>)
 80004fa:	f043 0320 	orr.w	r3, r3, #32
 80004fe:	6013      	str	r3, [r2, #0]
	/*Set PA2 alternate function type to UART_TX (AF07) */
	GPIOA->AFR[0] |= (1U<<8);
 8000500:	4b18      	ldr	r3, [pc, #96]	; (8000564 <uart2_tx_init+0x8c>)
 8000502:	6a1b      	ldr	r3, [r3, #32]
 8000504:	4a17      	ldr	r2, [pc, #92]	; (8000564 <uart2_tx_init+0x8c>)
 8000506:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800050a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 800050c:	4b15      	ldr	r3, [pc, #84]	; (8000564 <uart2_tx_init+0x8c>)
 800050e:	6a1b      	ldr	r3, [r3, #32]
 8000510:	4a14      	ldr	r2, [pc, #80]	; (8000564 <uart2_tx_init+0x8c>)
 8000512:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000516:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 8000518:	4b12      	ldr	r3, [pc, #72]	; (8000564 <uart2_tx_init+0x8c>)
 800051a:	6a1b      	ldr	r3, [r3, #32]
 800051c:	4a11      	ldr	r2, [pc, #68]	; (8000564 <uart2_tx_init+0x8c>)
 800051e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000522:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<11);
 8000524:	4b0f      	ldr	r3, [pc, #60]	; (8000564 <uart2_tx_init+0x8c>)
 8000526:	6a1b      	ldr	r3, [r3, #32]
 8000528:	4a0e      	ldr	r2, [pc, #56]	; (8000564 <uart2_tx_init+0x8c>)
 800052a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800052e:	6213      	str	r3, [r2, #32]
	/*Set PA3 mode to alternate function mode*/
	/*Set PA3 alternate function type to UART_TX (AF07) */

	/****************************Configure UART module***********************************/
	/*Enable clock access to UART2*/
	RCC->APB1ENR |= UART2EN;
 8000530:	4b0b      	ldr	r3, [pc, #44]	; (8000560 <uart2_tx_init+0x88>)
 8000532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000534:	4a0a      	ldr	r2, [pc, #40]	; (8000560 <uart2_tx_init+0x88>)
 8000536:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800053a:	6413      	str	r3, [r2, #64]	; 0x40
	/*Configure Baudrate*/
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 800053c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000540:	4909      	ldr	r1, [pc, #36]	; (8000568 <uart2_tx_init+0x90>)
 8000542:	480a      	ldr	r0, [pc, #40]	; (800056c <uart2_tx_init+0x94>)
 8000544:	f000 f82c 	bl	80005a0 <uart_set_baudrate>
	/*Configure the transfer direction*/
	USART2->CR1 = CR1_TE;
 8000548:	4b08      	ldr	r3, [pc, #32]	; (800056c <uart2_tx_init+0x94>)
 800054a:	2208      	movs	r2, #8
 800054c:	60da      	str	r2, [r3, #12]

	/*Enable UART module*/
	USART2->CR1 |= CR1_UE;
 800054e:	4b07      	ldr	r3, [pc, #28]	; (800056c <uart2_tx_init+0x94>)
 8000550:	68db      	ldr	r3, [r3, #12]
 8000552:	4a06      	ldr	r2, [pc, #24]	; (800056c <uart2_tx_init+0x94>)
 8000554:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000558:	60d3      	str	r3, [r2, #12]
}
 800055a:	bf00      	nop
 800055c:	bd80      	pop	{r7, pc}
 800055e:	bf00      	nop
 8000560:	40023800 	.word	0x40023800
 8000564:	40020000 	.word	0x40020000
 8000568:	00f42400 	.word	0x00f42400
 800056c:	40004400 	.word	0x40004400

08000570 <uart2_write>:

}


void uart2_write(int ch)
{
 8000570:	b480      	push	{r7}
 8000572:	b083      	sub	sp, #12
 8000574:	af00      	add	r7, sp, #0
 8000576:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 8000578:	bf00      	nop
 800057a:	4b08      	ldr	r3, [pc, #32]	; (800059c <uart2_write+0x2c>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000582:	2b00      	cmp	r3, #0
 8000584:	d0f9      	beq.n	800057a <uart2_write+0xa>
	/*Write to transmit data register*/

	USART2->DR= (ch & 0xFF);
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	4a04      	ldr	r2, [pc, #16]	; (800059c <uart2_write+0x2c>)
 800058a:	b2db      	uxtb	r3, r3
 800058c:	6053      	str	r3, [r2, #4]
}
 800058e:	bf00      	nop
 8000590:	370c      	adds	r7, #12
 8000592:	46bd      	mov	sp, r7
 8000594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000598:	4770      	bx	lr
 800059a:	bf00      	nop
 800059c:	40004400 	.word	0x40004400

080005a0 <uart_set_baudrate>:
static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk,uint32_t BaudRate)
{
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b084      	sub	sp, #16
 80005a4:	af00      	add	r7, sp, #0
 80005a6:	60f8      	str	r0, [r7, #12]
 80005a8:	60b9      	str	r1, [r7, #8]
 80005aa:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 80005ac:	6879      	ldr	r1, [r7, #4]
 80005ae:	68b8      	ldr	r0, [r7, #8]
 80005b0:	f000 f808 	bl	80005c4 <compute_uart_bd>
 80005b4:	4603      	mov	r3, r0
 80005b6:	461a      	mov	r2, r3
 80005b8:	68fb      	ldr	r3, [r7, #12]
 80005ba:	609a      	str	r2, [r3, #8]
}
 80005bc:	bf00      	nop
 80005be:	3710      	adds	r7, #16
 80005c0:	46bd      	mov	sp, r7
 80005c2:	bd80      	pop	{r7, pc}

080005c4 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 80005c4:	b480      	push	{r7}
 80005c6:	b083      	sub	sp, #12
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
 80005cc:	6039      	str	r1, [r7, #0]
	return((PeriphClk + (BaudRate/2U))/BaudRate);
 80005ce:	683b      	ldr	r3, [r7, #0]
 80005d0:	085a      	lsrs	r2, r3, #1
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	441a      	add	r2, r3
 80005d6:	683b      	ldr	r3, [r7, #0]
 80005d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80005dc:	b29b      	uxth	r3, r3
}
 80005de:	4618      	mov	r0, r3
 80005e0:	370c      	adds	r7, #12
 80005e2:	46bd      	mov	sp, r7
 80005e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e8:	4770      	bx	lr
	...

080005ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005ec:	480d      	ldr	r0, [pc, #52]	; (8000624 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ee:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005f0:	480d      	ldr	r0, [pc, #52]	; (8000628 <LoopForever+0x6>)
  ldr r1, =_edata
 80005f2:	490e      	ldr	r1, [pc, #56]	; (800062c <LoopForever+0xa>)
  ldr r2, =_sidata
 80005f4:	4a0e      	ldr	r2, [pc, #56]	; (8000630 <LoopForever+0xe>)
  movs r3, #0
 80005f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005f8:	e002      	b.n	8000600 <LoopCopyDataInit>

080005fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005fe:	3304      	adds	r3, #4

08000600 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000600:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000602:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000604:	d3f9      	bcc.n	80005fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000606:	4a0b      	ldr	r2, [pc, #44]	; (8000634 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000608:	4c0b      	ldr	r4, [pc, #44]	; (8000638 <LoopForever+0x16>)
  movs r3, #0
 800060a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800060c:	e001      	b.n	8000612 <LoopFillZerobss>

0800060e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800060e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000610:	3204      	adds	r2, #4

08000612 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000612:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000614:	d3fb      	bcc.n	800060e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000616:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800061a:	f000 f817 	bl	800064c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800061e:	f7ff fe2f 	bl	8000280 <main>

08000622 <LoopForever>:

LoopForever:
    b LoopForever
 8000622:	e7fe      	b.n	8000622 <LoopForever>
  ldr   r0, =_estack
 8000624:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000628:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800062c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000630:	08001540 	.word	0x08001540
  ldr r2, =_sbss
 8000634:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000638:	20000090 	.word	0x20000090

0800063c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800063c:	e7fe      	b.n	800063c <ADC_IRQHandler>
	...

08000640 <__errno>:
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <__errno+0x8>)
 8000642:	6818      	ldr	r0, [r3, #0]
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	20000000 	.word	0x20000000

0800064c <__libc_init_array>:
 800064c:	b570      	push	{r4, r5, r6, lr}
 800064e:	4e0d      	ldr	r6, [pc, #52]	; (8000684 <__libc_init_array+0x38>)
 8000650:	4c0d      	ldr	r4, [pc, #52]	; (8000688 <__libc_init_array+0x3c>)
 8000652:	1ba4      	subs	r4, r4, r6
 8000654:	10a4      	asrs	r4, r4, #2
 8000656:	2500      	movs	r5, #0
 8000658:	42a5      	cmp	r5, r4
 800065a:	d109      	bne.n	8000670 <__libc_init_array+0x24>
 800065c:	4e0b      	ldr	r6, [pc, #44]	; (800068c <__libc_init_array+0x40>)
 800065e:	4c0c      	ldr	r4, [pc, #48]	; (8000690 <__libc_init_array+0x44>)
 8000660:	f000 ff04 	bl	800146c <_init>
 8000664:	1ba4      	subs	r4, r4, r6
 8000666:	10a4      	asrs	r4, r4, #2
 8000668:	2500      	movs	r5, #0
 800066a:	42a5      	cmp	r5, r4
 800066c:	d105      	bne.n	800067a <__libc_init_array+0x2e>
 800066e:	bd70      	pop	{r4, r5, r6, pc}
 8000670:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000674:	4798      	blx	r3
 8000676:	3501      	adds	r5, #1
 8000678:	e7ee      	b.n	8000658 <__libc_init_array+0xc>
 800067a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800067e:	4798      	blx	r3
 8000680:	3501      	adds	r5, #1
 8000682:	e7f2      	b.n	800066a <__libc_init_array+0x1e>
 8000684:	08001538 	.word	0x08001538
 8000688:	08001538 	.word	0x08001538
 800068c:	08001538 	.word	0x08001538
 8000690:	0800153c 	.word	0x0800153c

08000694 <memset>:
 8000694:	4402      	add	r2, r0
 8000696:	4603      	mov	r3, r0
 8000698:	4293      	cmp	r3, r2
 800069a:	d100      	bne.n	800069e <memset+0xa>
 800069c:	4770      	bx	lr
 800069e:	f803 1b01 	strb.w	r1, [r3], #1
 80006a2:	e7f9      	b.n	8000698 <memset+0x4>

080006a4 <iprintf>:
 80006a4:	b40f      	push	{r0, r1, r2, r3}
 80006a6:	4b0a      	ldr	r3, [pc, #40]	; (80006d0 <iprintf+0x2c>)
 80006a8:	b513      	push	{r0, r1, r4, lr}
 80006aa:	681c      	ldr	r4, [r3, #0]
 80006ac:	b124      	cbz	r4, 80006b8 <iprintf+0x14>
 80006ae:	69a3      	ldr	r3, [r4, #24]
 80006b0:	b913      	cbnz	r3, 80006b8 <iprintf+0x14>
 80006b2:	4620      	mov	r0, r4
 80006b4:	f000 f84e 	bl	8000754 <__sinit>
 80006b8:	ab05      	add	r3, sp, #20
 80006ba:	9a04      	ldr	r2, [sp, #16]
 80006bc:	68a1      	ldr	r1, [r4, #8]
 80006be:	9301      	str	r3, [sp, #4]
 80006c0:	4620      	mov	r0, r4
 80006c2:	f000 f955 	bl	8000970 <_vfiprintf_r>
 80006c6:	b002      	add	sp, #8
 80006c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006cc:	b004      	add	sp, #16
 80006ce:	4770      	bx	lr
 80006d0:	20000000 	.word	0x20000000

080006d4 <std>:
 80006d4:	2300      	movs	r3, #0
 80006d6:	b510      	push	{r4, lr}
 80006d8:	4604      	mov	r4, r0
 80006da:	e9c0 3300 	strd	r3, r3, [r0]
 80006de:	6083      	str	r3, [r0, #8]
 80006e0:	8181      	strh	r1, [r0, #12]
 80006e2:	6643      	str	r3, [r0, #100]	; 0x64
 80006e4:	81c2      	strh	r2, [r0, #14]
 80006e6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006ea:	6183      	str	r3, [r0, #24]
 80006ec:	4619      	mov	r1, r3
 80006ee:	2208      	movs	r2, #8
 80006f0:	305c      	adds	r0, #92	; 0x5c
 80006f2:	f7ff ffcf 	bl	8000694 <memset>
 80006f6:	4b05      	ldr	r3, [pc, #20]	; (800070c <std+0x38>)
 80006f8:	6263      	str	r3, [r4, #36]	; 0x24
 80006fa:	4b05      	ldr	r3, [pc, #20]	; (8000710 <std+0x3c>)
 80006fc:	62a3      	str	r3, [r4, #40]	; 0x28
 80006fe:	4b05      	ldr	r3, [pc, #20]	; (8000714 <std+0x40>)
 8000700:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000702:	4b05      	ldr	r3, [pc, #20]	; (8000718 <std+0x44>)
 8000704:	6224      	str	r4, [r4, #32]
 8000706:	6323      	str	r3, [r4, #48]	; 0x30
 8000708:	bd10      	pop	{r4, pc}
 800070a:	bf00      	nop
 800070c:	08000ecd 	.word	0x08000ecd
 8000710:	08000eef 	.word	0x08000eef
 8000714:	08000f27 	.word	0x08000f27
 8000718:	08000f4b 	.word	0x08000f4b

0800071c <_cleanup_r>:
 800071c:	4901      	ldr	r1, [pc, #4]	; (8000724 <_cleanup_r+0x8>)
 800071e:	f000 b885 	b.w	800082c <_fwalk_reent>
 8000722:	bf00      	nop
 8000724:	08001225 	.word	0x08001225

08000728 <__sfmoreglue>:
 8000728:	b570      	push	{r4, r5, r6, lr}
 800072a:	1e4a      	subs	r2, r1, #1
 800072c:	2568      	movs	r5, #104	; 0x68
 800072e:	4355      	muls	r5, r2
 8000730:	460e      	mov	r6, r1
 8000732:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000736:	f000 f897 	bl	8000868 <_malloc_r>
 800073a:	4604      	mov	r4, r0
 800073c:	b140      	cbz	r0, 8000750 <__sfmoreglue+0x28>
 800073e:	2100      	movs	r1, #0
 8000740:	e9c0 1600 	strd	r1, r6, [r0]
 8000744:	300c      	adds	r0, #12
 8000746:	60a0      	str	r0, [r4, #8]
 8000748:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800074c:	f7ff ffa2 	bl	8000694 <memset>
 8000750:	4620      	mov	r0, r4
 8000752:	bd70      	pop	{r4, r5, r6, pc}

08000754 <__sinit>:
 8000754:	6983      	ldr	r3, [r0, #24]
 8000756:	b510      	push	{r4, lr}
 8000758:	4604      	mov	r4, r0
 800075a:	bb33      	cbnz	r3, 80007aa <__sinit+0x56>
 800075c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000760:	6503      	str	r3, [r0, #80]	; 0x50
 8000762:	4b12      	ldr	r3, [pc, #72]	; (80007ac <__sinit+0x58>)
 8000764:	4a12      	ldr	r2, [pc, #72]	; (80007b0 <__sinit+0x5c>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	6282      	str	r2, [r0, #40]	; 0x28
 800076a:	4298      	cmp	r0, r3
 800076c:	bf04      	itt	eq
 800076e:	2301      	moveq	r3, #1
 8000770:	6183      	streq	r3, [r0, #24]
 8000772:	f000 f81f 	bl	80007b4 <__sfp>
 8000776:	6060      	str	r0, [r4, #4]
 8000778:	4620      	mov	r0, r4
 800077a:	f000 f81b 	bl	80007b4 <__sfp>
 800077e:	60a0      	str	r0, [r4, #8]
 8000780:	4620      	mov	r0, r4
 8000782:	f000 f817 	bl	80007b4 <__sfp>
 8000786:	2200      	movs	r2, #0
 8000788:	60e0      	str	r0, [r4, #12]
 800078a:	2104      	movs	r1, #4
 800078c:	6860      	ldr	r0, [r4, #4]
 800078e:	f7ff ffa1 	bl	80006d4 <std>
 8000792:	2201      	movs	r2, #1
 8000794:	2109      	movs	r1, #9
 8000796:	68a0      	ldr	r0, [r4, #8]
 8000798:	f7ff ff9c 	bl	80006d4 <std>
 800079c:	2202      	movs	r2, #2
 800079e:	2112      	movs	r1, #18
 80007a0:	68e0      	ldr	r0, [r4, #12]
 80007a2:	f7ff ff97 	bl	80006d4 <std>
 80007a6:	2301      	movs	r3, #1
 80007a8:	61a3      	str	r3, [r4, #24]
 80007aa:	bd10      	pop	{r4, pc}
 80007ac:	080014a0 	.word	0x080014a0
 80007b0:	0800071d 	.word	0x0800071d

080007b4 <__sfp>:
 80007b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007b6:	4b1b      	ldr	r3, [pc, #108]	; (8000824 <__sfp+0x70>)
 80007b8:	681e      	ldr	r6, [r3, #0]
 80007ba:	69b3      	ldr	r3, [r6, #24]
 80007bc:	4607      	mov	r7, r0
 80007be:	b913      	cbnz	r3, 80007c6 <__sfp+0x12>
 80007c0:	4630      	mov	r0, r6
 80007c2:	f7ff ffc7 	bl	8000754 <__sinit>
 80007c6:	3648      	adds	r6, #72	; 0x48
 80007c8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80007cc:	3b01      	subs	r3, #1
 80007ce:	d503      	bpl.n	80007d8 <__sfp+0x24>
 80007d0:	6833      	ldr	r3, [r6, #0]
 80007d2:	b133      	cbz	r3, 80007e2 <__sfp+0x2e>
 80007d4:	6836      	ldr	r6, [r6, #0]
 80007d6:	e7f7      	b.n	80007c8 <__sfp+0x14>
 80007d8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80007dc:	b16d      	cbz	r5, 80007fa <__sfp+0x46>
 80007de:	3468      	adds	r4, #104	; 0x68
 80007e0:	e7f4      	b.n	80007cc <__sfp+0x18>
 80007e2:	2104      	movs	r1, #4
 80007e4:	4638      	mov	r0, r7
 80007e6:	f7ff ff9f 	bl	8000728 <__sfmoreglue>
 80007ea:	6030      	str	r0, [r6, #0]
 80007ec:	2800      	cmp	r0, #0
 80007ee:	d1f1      	bne.n	80007d4 <__sfp+0x20>
 80007f0:	230c      	movs	r3, #12
 80007f2:	603b      	str	r3, [r7, #0]
 80007f4:	4604      	mov	r4, r0
 80007f6:	4620      	mov	r0, r4
 80007f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007fa:	4b0b      	ldr	r3, [pc, #44]	; (8000828 <__sfp+0x74>)
 80007fc:	6665      	str	r5, [r4, #100]	; 0x64
 80007fe:	e9c4 5500 	strd	r5, r5, [r4]
 8000802:	60a5      	str	r5, [r4, #8]
 8000804:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000808:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800080c:	2208      	movs	r2, #8
 800080e:	4629      	mov	r1, r5
 8000810:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000814:	f7ff ff3e 	bl	8000694 <memset>
 8000818:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800081c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000820:	e7e9      	b.n	80007f6 <__sfp+0x42>
 8000822:	bf00      	nop
 8000824:	080014a0 	.word	0x080014a0
 8000828:	ffff0001 	.word	0xffff0001

0800082c <_fwalk_reent>:
 800082c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000830:	4680      	mov	r8, r0
 8000832:	4689      	mov	r9, r1
 8000834:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000838:	2600      	movs	r6, #0
 800083a:	b914      	cbnz	r4, 8000842 <_fwalk_reent+0x16>
 800083c:	4630      	mov	r0, r6
 800083e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000842:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000846:	3f01      	subs	r7, #1
 8000848:	d501      	bpl.n	800084e <_fwalk_reent+0x22>
 800084a:	6824      	ldr	r4, [r4, #0]
 800084c:	e7f5      	b.n	800083a <_fwalk_reent+0xe>
 800084e:	89ab      	ldrh	r3, [r5, #12]
 8000850:	2b01      	cmp	r3, #1
 8000852:	d907      	bls.n	8000864 <_fwalk_reent+0x38>
 8000854:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000858:	3301      	adds	r3, #1
 800085a:	d003      	beq.n	8000864 <_fwalk_reent+0x38>
 800085c:	4629      	mov	r1, r5
 800085e:	4640      	mov	r0, r8
 8000860:	47c8      	blx	r9
 8000862:	4306      	orrs	r6, r0
 8000864:	3568      	adds	r5, #104	; 0x68
 8000866:	e7ee      	b.n	8000846 <_fwalk_reent+0x1a>

08000868 <_malloc_r>:
 8000868:	b570      	push	{r4, r5, r6, lr}
 800086a:	1ccd      	adds	r5, r1, #3
 800086c:	f025 0503 	bic.w	r5, r5, #3
 8000870:	3508      	adds	r5, #8
 8000872:	2d0c      	cmp	r5, #12
 8000874:	bf38      	it	cc
 8000876:	250c      	movcc	r5, #12
 8000878:	2d00      	cmp	r5, #0
 800087a:	4606      	mov	r6, r0
 800087c:	db01      	blt.n	8000882 <_malloc_r+0x1a>
 800087e:	42a9      	cmp	r1, r5
 8000880:	d903      	bls.n	800088a <_malloc_r+0x22>
 8000882:	230c      	movs	r3, #12
 8000884:	6033      	str	r3, [r6, #0]
 8000886:	2000      	movs	r0, #0
 8000888:	bd70      	pop	{r4, r5, r6, pc}
 800088a:	f000 fd6b 	bl	8001364 <__malloc_lock>
 800088e:	4a21      	ldr	r2, [pc, #132]	; (8000914 <_malloc_r+0xac>)
 8000890:	6814      	ldr	r4, [r2, #0]
 8000892:	4621      	mov	r1, r4
 8000894:	b991      	cbnz	r1, 80008bc <_malloc_r+0x54>
 8000896:	4c20      	ldr	r4, [pc, #128]	; (8000918 <_malloc_r+0xb0>)
 8000898:	6823      	ldr	r3, [r4, #0]
 800089a:	b91b      	cbnz	r3, 80008a4 <_malloc_r+0x3c>
 800089c:	4630      	mov	r0, r6
 800089e:	f000 fb05 	bl	8000eac <_sbrk_r>
 80008a2:	6020      	str	r0, [r4, #0]
 80008a4:	4629      	mov	r1, r5
 80008a6:	4630      	mov	r0, r6
 80008a8:	f000 fb00 	bl	8000eac <_sbrk_r>
 80008ac:	1c43      	adds	r3, r0, #1
 80008ae:	d124      	bne.n	80008fa <_malloc_r+0x92>
 80008b0:	230c      	movs	r3, #12
 80008b2:	6033      	str	r3, [r6, #0]
 80008b4:	4630      	mov	r0, r6
 80008b6:	f000 fd56 	bl	8001366 <__malloc_unlock>
 80008ba:	e7e4      	b.n	8000886 <_malloc_r+0x1e>
 80008bc:	680b      	ldr	r3, [r1, #0]
 80008be:	1b5b      	subs	r3, r3, r5
 80008c0:	d418      	bmi.n	80008f4 <_malloc_r+0x8c>
 80008c2:	2b0b      	cmp	r3, #11
 80008c4:	d90f      	bls.n	80008e6 <_malloc_r+0x7e>
 80008c6:	600b      	str	r3, [r1, #0]
 80008c8:	50cd      	str	r5, [r1, r3]
 80008ca:	18cc      	adds	r4, r1, r3
 80008cc:	4630      	mov	r0, r6
 80008ce:	f000 fd4a 	bl	8001366 <__malloc_unlock>
 80008d2:	f104 000b 	add.w	r0, r4, #11
 80008d6:	1d23      	adds	r3, r4, #4
 80008d8:	f020 0007 	bic.w	r0, r0, #7
 80008dc:	1ac3      	subs	r3, r0, r3
 80008de:	d0d3      	beq.n	8000888 <_malloc_r+0x20>
 80008e0:	425a      	negs	r2, r3
 80008e2:	50e2      	str	r2, [r4, r3]
 80008e4:	e7d0      	b.n	8000888 <_malloc_r+0x20>
 80008e6:	428c      	cmp	r4, r1
 80008e8:	684b      	ldr	r3, [r1, #4]
 80008ea:	bf16      	itet	ne
 80008ec:	6063      	strne	r3, [r4, #4]
 80008ee:	6013      	streq	r3, [r2, #0]
 80008f0:	460c      	movne	r4, r1
 80008f2:	e7eb      	b.n	80008cc <_malloc_r+0x64>
 80008f4:	460c      	mov	r4, r1
 80008f6:	6849      	ldr	r1, [r1, #4]
 80008f8:	e7cc      	b.n	8000894 <_malloc_r+0x2c>
 80008fa:	1cc4      	adds	r4, r0, #3
 80008fc:	f024 0403 	bic.w	r4, r4, #3
 8000900:	42a0      	cmp	r0, r4
 8000902:	d005      	beq.n	8000910 <_malloc_r+0xa8>
 8000904:	1a21      	subs	r1, r4, r0
 8000906:	4630      	mov	r0, r6
 8000908:	f000 fad0 	bl	8000eac <_sbrk_r>
 800090c:	3001      	adds	r0, #1
 800090e:	d0cf      	beq.n	80008b0 <_malloc_r+0x48>
 8000910:	6025      	str	r5, [r4, #0]
 8000912:	e7db      	b.n	80008cc <_malloc_r+0x64>
 8000914:	20000084 	.word	0x20000084
 8000918:	20000088 	.word	0x20000088

0800091c <__sfputc_r>:
 800091c:	6893      	ldr	r3, [r2, #8]
 800091e:	3b01      	subs	r3, #1
 8000920:	2b00      	cmp	r3, #0
 8000922:	b410      	push	{r4}
 8000924:	6093      	str	r3, [r2, #8]
 8000926:	da08      	bge.n	800093a <__sfputc_r+0x1e>
 8000928:	6994      	ldr	r4, [r2, #24]
 800092a:	42a3      	cmp	r3, r4
 800092c:	db01      	blt.n	8000932 <__sfputc_r+0x16>
 800092e:	290a      	cmp	r1, #10
 8000930:	d103      	bne.n	800093a <__sfputc_r+0x1e>
 8000932:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000936:	f000 bb0d 	b.w	8000f54 <__swbuf_r>
 800093a:	6813      	ldr	r3, [r2, #0]
 800093c:	1c58      	adds	r0, r3, #1
 800093e:	6010      	str	r0, [r2, #0]
 8000940:	7019      	strb	r1, [r3, #0]
 8000942:	4608      	mov	r0, r1
 8000944:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000948:	4770      	bx	lr

0800094a <__sfputs_r>:
 800094a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800094c:	4606      	mov	r6, r0
 800094e:	460f      	mov	r7, r1
 8000950:	4614      	mov	r4, r2
 8000952:	18d5      	adds	r5, r2, r3
 8000954:	42ac      	cmp	r4, r5
 8000956:	d101      	bne.n	800095c <__sfputs_r+0x12>
 8000958:	2000      	movs	r0, #0
 800095a:	e007      	b.n	800096c <__sfputs_r+0x22>
 800095c:	463a      	mov	r2, r7
 800095e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000962:	4630      	mov	r0, r6
 8000964:	f7ff ffda 	bl	800091c <__sfputc_r>
 8000968:	1c43      	adds	r3, r0, #1
 800096a:	d1f3      	bne.n	8000954 <__sfputs_r+0xa>
 800096c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000970 <_vfiprintf_r>:
 8000970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000974:	460c      	mov	r4, r1
 8000976:	b09d      	sub	sp, #116	; 0x74
 8000978:	4617      	mov	r7, r2
 800097a:	461d      	mov	r5, r3
 800097c:	4606      	mov	r6, r0
 800097e:	b118      	cbz	r0, 8000988 <_vfiprintf_r+0x18>
 8000980:	6983      	ldr	r3, [r0, #24]
 8000982:	b90b      	cbnz	r3, 8000988 <_vfiprintf_r+0x18>
 8000984:	f7ff fee6 	bl	8000754 <__sinit>
 8000988:	4b7c      	ldr	r3, [pc, #496]	; (8000b7c <_vfiprintf_r+0x20c>)
 800098a:	429c      	cmp	r4, r3
 800098c:	d158      	bne.n	8000a40 <_vfiprintf_r+0xd0>
 800098e:	6874      	ldr	r4, [r6, #4]
 8000990:	89a3      	ldrh	r3, [r4, #12]
 8000992:	0718      	lsls	r0, r3, #28
 8000994:	d55e      	bpl.n	8000a54 <_vfiprintf_r+0xe4>
 8000996:	6923      	ldr	r3, [r4, #16]
 8000998:	2b00      	cmp	r3, #0
 800099a:	d05b      	beq.n	8000a54 <_vfiprintf_r+0xe4>
 800099c:	2300      	movs	r3, #0
 800099e:	9309      	str	r3, [sp, #36]	; 0x24
 80009a0:	2320      	movs	r3, #32
 80009a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009a6:	2330      	movs	r3, #48	; 0x30
 80009a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009ac:	9503      	str	r5, [sp, #12]
 80009ae:	f04f 0b01 	mov.w	fp, #1
 80009b2:	46b8      	mov	r8, r7
 80009b4:	4645      	mov	r5, r8
 80009b6:	f815 3b01 	ldrb.w	r3, [r5], #1
 80009ba:	b10b      	cbz	r3, 80009c0 <_vfiprintf_r+0x50>
 80009bc:	2b25      	cmp	r3, #37	; 0x25
 80009be:	d154      	bne.n	8000a6a <_vfiprintf_r+0xfa>
 80009c0:	ebb8 0a07 	subs.w	sl, r8, r7
 80009c4:	d00b      	beq.n	80009de <_vfiprintf_r+0x6e>
 80009c6:	4653      	mov	r3, sl
 80009c8:	463a      	mov	r2, r7
 80009ca:	4621      	mov	r1, r4
 80009cc:	4630      	mov	r0, r6
 80009ce:	f7ff ffbc 	bl	800094a <__sfputs_r>
 80009d2:	3001      	adds	r0, #1
 80009d4:	f000 80c2 	beq.w	8000b5c <_vfiprintf_r+0x1ec>
 80009d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80009da:	4453      	add	r3, sl
 80009dc:	9309      	str	r3, [sp, #36]	; 0x24
 80009de:	f898 3000 	ldrb.w	r3, [r8]
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	f000 80ba 	beq.w	8000b5c <_vfiprintf_r+0x1ec>
 80009e8:	2300      	movs	r3, #0
 80009ea:	f04f 32ff 	mov.w	r2, #4294967295
 80009ee:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009f2:	9304      	str	r3, [sp, #16]
 80009f4:	9307      	str	r3, [sp, #28]
 80009f6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80009fa:	931a      	str	r3, [sp, #104]	; 0x68
 80009fc:	46a8      	mov	r8, r5
 80009fe:	2205      	movs	r2, #5
 8000a00:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000a04:	485e      	ldr	r0, [pc, #376]	; (8000b80 <_vfiprintf_r+0x210>)
 8000a06:	f7ff fbeb 	bl	80001e0 <memchr>
 8000a0a:	9b04      	ldr	r3, [sp, #16]
 8000a0c:	bb78      	cbnz	r0, 8000a6e <_vfiprintf_r+0xfe>
 8000a0e:	06d9      	lsls	r1, r3, #27
 8000a10:	bf44      	itt	mi
 8000a12:	2220      	movmi	r2, #32
 8000a14:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000a18:	071a      	lsls	r2, r3, #28
 8000a1a:	bf44      	itt	mi
 8000a1c:	222b      	movmi	r2, #43	; 0x2b
 8000a1e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000a22:	782a      	ldrb	r2, [r5, #0]
 8000a24:	2a2a      	cmp	r2, #42	; 0x2a
 8000a26:	d02a      	beq.n	8000a7e <_vfiprintf_r+0x10e>
 8000a28:	9a07      	ldr	r2, [sp, #28]
 8000a2a:	46a8      	mov	r8, r5
 8000a2c:	2000      	movs	r0, #0
 8000a2e:	250a      	movs	r5, #10
 8000a30:	4641      	mov	r1, r8
 8000a32:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a36:	3b30      	subs	r3, #48	; 0x30
 8000a38:	2b09      	cmp	r3, #9
 8000a3a:	d969      	bls.n	8000b10 <_vfiprintf_r+0x1a0>
 8000a3c:	b360      	cbz	r0, 8000a98 <_vfiprintf_r+0x128>
 8000a3e:	e024      	b.n	8000a8a <_vfiprintf_r+0x11a>
 8000a40:	4b50      	ldr	r3, [pc, #320]	; (8000b84 <_vfiprintf_r+0x214>)
 8000a42:	429c      	cmp	r4, r3
 8000a44:	d101      	bne.n	8000a4a <_vfiprintf_r+0xda>
 8000a46:	68b4      	ldr	r4, [r6, #8]
 8000a48:	e7a2      	b.n	8000990 <_vfiprintf_r+0x20>
 8000a4a:	4b4f      	ldr	r3, [pc, #316]	; (8000b88 <_vfiprintf_r+0x218>)
 8000a4c:	429c      	cmp	r4, r3
 8000a4e:	bf08      	it	eq
 8000a50:	68f4      	ldreq	r4, [r6, #12]
 8000a52:	e79d      	b.n	8000990 <_vfiprintf_r+0x20>
 8000a54:	4621      	mov	r1, r4
 8000a56:	4630      	mov	r0, r6
 8000a58:	f000 fae0 	bl	800101c <__swsetup_r>
 8000a5c:	2800      	cmp	r0, #0
 8000a5e:	d09d      	beq.n	800099c <_vfiprintf_r+0x2c>
 8000a60:	f04f 30ff 	mov.w	r0, #4294967295
 8000a64:	b01d      	add	sp, #116	; 0x74
 8000a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a6a:	46a8      	mov	r8, r5
 8000a6c:	e7a2      	b.n	80009b4 <_vfiprintf_r+0x44>
 8000a6e:	4a44      	ldr	r2, [pc, #272]	; (8000b80 <_vfiprintf_r+0x210>)
 8000a70:	1a80      	subs	r0, r0, r2
 8000a72:	fa0b f000 	lsl.w	r0, fp, r0
 8000a76:	4318      	orrs	r0, r3
 8000a78:	9004      	str	r0, [sp, #16]
 8000a7a:	4645      	mov	r5, r8
 8000a7c:	e7be      	b.n	80009fc <_vfiprintf_r+0x8c>
 8000a7e:	9a03      	ldr	r2, [sp, #12]
 8000a80:	1d11      	adds	r1, r2, #4
 8000a82:	6812      	ldr	r2, [r2, #0]
 8000a84:	9103      	str	r1, [sp, #12]
 8000a86:	2a00      	cmp	r2, #0
 8000a88:	db01      	blt.n	8000a8e <_vfiprintf_r+0x11e>
 8000a8a:	9207      	str	r2, [sp, #28]
 8000a8c:	e004      	b.n	8000a98 <_vfiprintf_r+0x128>
 8000a8e:	4252      	negs	r2, r2
 8000a90:	f043 0302 	orr.w	r3, r3, #2
 8000a94:	9207      	str	r2, [sp, #28]
 8000a96:	9304      	str	r3, [sp, #16]
 8000a98:	f898 3000 	ldrb.w	r3, [r8]
 8000a9c:	2b2e      	cmp	r3, #46	; 0x2e
 8000a9e:	d10e      	bne.n	8000abe <_vfiprintf_r+0x14e>
 8000aa0:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000aa4:	2b2a      	cmp	r3, #42	; 0x2a
 8000aa6:	d138      	bne.n	8000b1a <_vfiprintf_r+0x1aa>
 8000aa8:	9b03      	ldr	r3, [sp, #12]
 8000aaa:	1d1a      	adds	r2, r3, #4
 8000aac:	681b      	ldr	r3, [r3, #0]
 8000aae:	9203      	str	r2, [sp, #12]
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	bfb8      	it	lt
 8000ab4:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ab8:	f108 0802 	add.w	r8, r8, #2
 8000abc:	9305      	str	r3, [sp, #20]
 8000abe:	4d33      	ldr	r5, [pc, #204]	; (8000b8c <_vfiprintf_r+0x21c>)
 8000ac0:	f898 1000 	ldrb.w	r1, [r8]
 8000ac4:	2203      	movs	r2, #3
 8000ac6:	4628      	mov	r0, r5
 8000ac8:	f7ff fb8a 	bl	80001e0 <memchr>
 8000acc:	b140      	cbz	r0, 8000ae0 <_vfiprintf_r+0x170>
 8000ace:	2340      	movs	r3, #64	; 0x40
 8000ad0:	1b40      	subs	r0, r0, r5
 8000ad2:	fa03 f000 	lsl.w	r0, r3, r0
 8000ad6:	9b04      	ldr	r3, [sp, #16]
 8000ad8:	4303      	orrs	r3, r0
 8000ada:	f108 0801 	add.w	r8, r8, #1
 8000ade:	9304      	str	r3, [sp, #16]
 8000ae0:	f898 1000 	ldrb.w	r1, [r8]
 8000ae4:	482a      	ldr	r0, [pc, #168]	; (8000b90 <_vfiprintf_r+0x220>)
 8000ae6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000aea:	2206      	movs	r2, #6
 8000aec:	f108 0701 	add.w	r7, r8, #1
 8000af0:	f7ff fb76 	bl	80001e0 <memchr>
 8000af4:	2800      	cmp	r0, #0
 8000af6:	d037      	beq.n	8000b68 <_vfiprintf_r+0x1f8>
 8000af8:	4b26      	ldr	r3, [pc, #152]	; (8000b94 <_vfiprintf_r+0x224>)
 8000afa:	bb1b      	cbnz	r3, 8000b44 <_vfiprintf_r+0x1d4>
 8000afc:	9b03      	ldr	r3, [sp, #12]
 8000afe:	3307      	adds	r3, #7
 8000b00:	f023 0307 	bic.w	r3, r3, #7
 8000b04:	3308      	adds	r3, #8
 8000b06:	9303      	str	r3, [sp, #12]
 8000b08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b0a:	444b      	add	r3, r9
 8000b0c:	9309      	str	r3, [sp, #36]	; 0x24
 8000b0e:	e750      	b.n	80009b2 <_vfiprintf_r+0x42>
 8000b10:	fb05 3202 	mla	r2, r5, r2, r3
 8000b14:	2001      	movs	r0, #1
 8000b16:	4688      	mov	r8, r1
 8000b18:	e78a      	b.n	8000a30 <_vfiprintf_r+0xc0>
 8000b1a:	2300      	movs	r3, #0
 8000b1c:	f108 0801 	add.w	r8, r8, #1
 8000b20:	9305      	str	r3, [sp, #20]
 8000b22:	4619      	mov	r1, r3
 8000b24:	250a      	movs	r5, #10
 8000b26:	4640      	mov	r0, r8
 8000b28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b2c:	3a30      	subs	r2, #48	; 0x30
 8000b2e:	2a09      	cmp	r2, #9
 8000b30:	d903      	bls.n	8000b3a <_vfiprintf_r+0x1ca>
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d0c3      	beq.n	8000abe <_vfiprintf_r+0x14e>
 8000b36:	9105      	str	r1, [sp, #20]
 8000b38:	e7c1      	b.n	8000abe <_vfiprintf_r+0x14e>
 8000b3a:	fb05 2101 	mla	r1, r5, r1, r2
 8000b3e:	2301      	movs	r3, #1
 8000b40:	4680      	mov	r8, r0
 8000b42:	e7f0      	b.n	8000b26 <_vfiprintf_r+0x1b6>
 8000b44:	ab03      	add	r3, sp, #12
 8000b46:	9300      	str	r3, [sp, #0]
 8000b48:	4622      	mov	r2, r4
 8000b4a:	4b13      	ldr	r3, [pc, #76]	; (8000b98 <_vfiprintf_r+0x228>)
 8000b4c:	a904      	add	r1, sp, #16
 8000b4e:	4630      	mov	r0, r6
 8000b50:	f3af 8000 	nop.w
 8000b54:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000b58:	4681      	mov	r9, r0
 8000b5a:	d1d5      	bne.n	8000b08 <_vfiprintf_r+0x198>
 8000b5c:	89a3      	ldrh	r3, [r4, #12]
 8000b5e:	065b      	lsls	r3, r3, #25
 8000b60:	f53f af7e 	bmi.w	8000a60 <_vfiprintf_r+0xf0>
 8000b64:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b66:	e77d      	b.n	8000a64 <_vfiprintf_r+0xf4>
 8000b68:	ab03      	add	r3, sp, #12
 8000b6a:	9300      	str	r3, [sp, #0]
 8000b6c:	4622      	mov	r2, r4
 8000b6e:	4b0a      	ldr	r3, [pc, #40]	; (8000b98 <_vfiprintf_r+0x228>)
 8000b70:	a904      	add	r1, sp, #16
 8000b72:	4630      	mov	r0, r6
 8000b74:	f000 f888 	bl	8000c88 <_printf_i>
 8000b78:	e7ec      	b.n	8000b54 <_vfiprintf_r+0x1e4>
 8000b7a:	bf00      	nop
 8000b7c:	080014c4 	.word	0x080014c4
 8000b80:	08001504 	.word	0x08001504
 8000b84:	080014e4 	.word	0x080014e4
 8000b88:	080014a4 	.word	0x080014a4
 8000b8c:	0800150a 	.word	0x0800150a
 8000b90:	0800150e 	.word	0x0800150e
 8000b94:	00000000 	.word	0x00000000
 8000b98:	0800094b 	.word	0x0800094b

08000b9c <_printf_common>:
 8000b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ba0:	4691      	mov	r9, r2
 8000ba2:	461f      	mov	r7, r3
 8000ba4:	688a      	ldr	r2, [r1, #8]
 8000ba6:	690b      	ldr	r3, [r1, #16]
 8000ba8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000bac:	4293      	cmp	r3, r2
 8000bae:	bfb8      	it	lt
 8000bb0:	4613      	movlt	r3, r2
 8000bb2:	f8c9 3000 	str.w	r3, [r9]
 8000bb6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bba:	4606      	mov	r6, r0
 8000bbc:	460c      	mov	r4, r1
 8000bbe:	b112      	cbz	r2, 8000bc6 <_printf_common+0x2a>
 8000bc0:	3301      	adds	r3, #1
 8000bc2:	f8c9 3000 	str.w	r3, [r9]
 8000bc6:	6823      	ldr	r3, [r4, #0]
 8000bc8:	0699      	lsls	r1, r3, #26
 8000bca:	bf42      	ittt	mi
 8000bcc:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000bd0:	3302      	addmi	r3, #2
 8000bd2:	f8c9 3000 	strmi.w	r3, [r9]
 8000bd6:	6825      	ldr	r5, [r4, #0]
 8000bd8:	f015 0506 	ands.w	r5, r5, #6
 8000bdc:	d107      	bne.n	8000bee <_printf_common+0x52>
 8000bde:	f104 0a19 	add.w	sl, r4, #25
 8000be2:	68e3      	ldr	r3, [r4, #12]
 8000be4:	f8d9 2000 	ldr.w	r2, [r9]
 8000be8:	1a9b      	subs	r3, r3, r2
 8000bea:	42ab      	cmp	r3, r5
 8000bec:	dc28      	bgt.n	8000c40 <_printf_common+0xa4>
 8000bee:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000bf2:	6822      	ldr	r2, [r4, #0]
 8000bf4:	3300      	adds	r3, #0
 8000bf6:	bf18      	it	ne
 8000bf8:	2301      	movne	r3, #1
 8000bfa:	0692      	lsls	r2, r2, #26
 8000bfc:	d42d      	bmi.n	8000c5a <_printf_common+0xbe>
 8000bfe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c02:	4639      	mov	r1, r7
 8000c04:	4630      	mov	r0, r6
 8000c06:	47c0      	blx	r8
 8000c08:	3001      	adds	r0, #1
 8000c0a:	d020      	beq.n	8000c4e <_printf_common+0xb2>
 8000c0c:	6823      	ldr	r3, [r4, #0]
 8000c0e:	68e5      	ldr	r5, [r4, #12]
 8000c10:	f8d9 2000 	ldr.w	r2, [r9]
 8000c14:	f003 0306 	and.w	r3, r3, #6
 8000c18:	2b04      	cmp	r3, #4
 8000c1a:	bf08      	it	eq
 8000c1c:	1aad      	subeq	r5, r5, r2
 8000c1e:	68a3      	ldr	r3, [r4, #8]
 8000c20:	6922      	ldr	r2, [r4, #16]
 8000c22:	bf0c      	ite	eq
 8000c24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c28:	2500      	movne	r5, #0
 8000c2a:	4293      	cmp	r3, r2
 8000c2c:	bfc4      	itt	gt
 8000c2e:	1a9b      	subgt	r3, r3, r2
 8000c30:	18ed      	addgt	r5, r5, r3
 8000c32:	f04f 0900 	mov.w	r9, #0
 8000c36:	341a      	adds	r4, #26
 8000c38:	454d      	cmp	r5, r9
 8000c3a:	d11a      	bne.n	8000c72 <_printf_common+0xd6>
 8000c3c:	2000      	movs	r0, #0
 8000c3e:	e008      	b.n	8000c52 <_printf_common+0xb6>
 8000c40:	2301      	movs	r3, #1
 8000c42:	4652      	mov	r2, sl
 8000c44:	4639      	mov	r1, r7
 8000c46:	4630      	mov	r0, r6
 8000c48:	47c0      	blx	r8
 8000c4a:	3001      	adds	r0, #1
 8000c4c:	d103      	bne.n	8000c56 <_printf_common+0xba>
 8000c4e:	f04f 30ff 	mov.w	r0, #4294967295
 8000c52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c56:	3501      	adds	r5, #1
 8000c58:	e7c3      	b.n	8000be2 <_printf_common+0x46>
 8000c5a:	18e1      	adds	r1, r4, r3
 8000c5c:	1c5a      	adds	r2, r3, #1
 8000c5e:	2030      	movs	r0, #48	; 0x30
 8000c60:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c64:	4422      	add	r2, r4
 8000c66:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c6a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c6e:	3302      	adds	r3, #2
 8000c70:	e7c5      	b.n	8000bfe <_printf_common+0x62>
 8000c72:	2301      	movs	r3, #1
 8000c74:	4622      	mov	r2, r4
 8000c76:	4639      	mov	r1, r7
 8000c78:	4630      	mov	r0, r6
 8000c7a:	47c0      	blx	r8
 8000c7c:	3001      	adds	r0, #1
 8000c7e:	d0e6      	beq.n	8000c4e <_printf_common+0xb2>
 8000c80:	f109 0901 	add.w	r9, r9, #1
 8000c84:	e7d8      	b.n	8000c38 <_printf_common+0x9c>
	...

08000c88 <_printf_i>:
 8000c88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c8c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000c90:	460c      	mov	r4, r1
 8000c92:	7e09      	ldrb	r1, [r1, #24]
 8000c94:	b085      	sub	sp, #20
 8000c96:	296e      	cmp	r1, #110	; 0x6e
 8000c98:	4617      	mov	r7, r2
 8000c9a:	4606      	mov	r6, r0
 8000c9c:	4698      	mov	r8, r3
 8000c9e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000ca0:	f000 80b3 	beq.w	8000e0a <_printf_i+0x182>
 8000ca4:	d822      	bhi.n	8000cec <_printf_i+0x64>
 8000ca6:	2963      	cmp	r1, #99	; 0x63
 8000ca8:	d036      	beq.n	8000d18 <_printf_i+0x90>
 8000caa:	d80a      	bhi.n	8000cc2 <_printf_i+0x3a>
 8000cac:	2900      	cmp	r1, #0
 8000cae:	f000 80b9 	beq.w	8000e24 <_printf_i+0x19c>
 8000cb2:	2958      	cmp	r1, #88	; 0x58
 8000cb4:	f000 8083 	beq.w	8000dbe <_printf_i+0x136>
 8000cb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cbc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000cc0:	e032      	b.n	8000d28 <_printf_i+0xa0>
 8000cc2:	2964      	cmp	r1, #100	; 0x64
 8000cc4:	d001      	beq.n	8000cca <_printf_i+0x42>
 8000cc6:	2969      	cmp	r1, #105	; 0x69
 8000cc8:	d1f6      	bne.n	8000cb8 <_printf_i+0x30>
 8000cca:	6820      	ldr	r0, [r4, #0]
 8000ccc:	6813      	ldr	r3, [r2, #0]
 8000cce:	0605      	lsls	r5, r0, #24
 8000cd0:	f103 0104 	add.w	r1, r3, #4
 8000cd4:	d52a      	bpl.n	8000d2c <_printf_i+0xa4>
 8000cd6:	681b      	ldr	r3, [r3, #0]
 8000cd8:	6011      	str	r1, [r2, #0]
 8000cda:	2b00      	cmp	r3, #0
 8000cdc:	da03      	bge.n	8000ce6 <_printf_i+0x5e>
 8000cde:	222d      	movs	r2, #45	; 0x2d
 8000ce0:	425b      	negs	r3, r3
 8000ce2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000ce6:	486f      	ldr	r0, [pc, #444]	; (8000ea4 <_printf_i+0x21c>)
 8000ce8:	220a      	movs	r2, #10
 8000cea:	e039      	b.n	8000d60 <_printf_i+0xd8>
 8000cec:	2973      	cmp	r1, #115	; 0x73
 8000cee:	f000 809d 	beq.w	8000e2c <_printf_i+0x1a4>
 8000cf2:	d808      	bhi.n	8000d06 <_printf_i+0x7e>
 8000cf4:	296f      	cmp	r1, #111	; 0x6f
 8000cf6:	d020      	beq.n	8000d3a <_printf_i+0xb2>
 8000cf8:	2970      	cmp	r1, #112	; 0x70
 8000cfa:	d1dd      	bne.n	8000cb8 <_printf_i+0x30>
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	f043 0320 	orr.w	r3, r3, #32
 8000d02:	6023      	str	r3, [r4, #0]
 8000d04:	e003      	b.n	8000d0e <_printf_i+0x86>
 8000d06:	2975      	cmp	r1, #117	; 0x75
 8000d08:	d017      	beq.n	8000d3a <_printf_i+0xb2>
 8000d0a:	2978      	cmp	r1, #120	; 0x78
 8000d0c:	d1d4      	bne.n	8000cb8 <_printf_i+0x30>
 8000d0e:	2378      	movs	r3, #120	; 0x78
 8000d10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d14:	4864      	ldr	r0, [pc, #400]	; (8000ea8 <_printf_i+0x220>)
 8000d16:	e055      	b.n	8000dc4 <_printf_i+0x13c>
 8000d18:	6813      	ldr	r3, [r2, #0]
 8000d1a:	1d19      	adds	r1, r3, #4
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	6011      	str	r1, [r2, #0]
 8000d20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d24:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d28:	2301      	movs	r3, #1
 8000d2a:	e08c      	b.n	8000e46 <_printf_i+0x1be>
 8000d2c:	681b      	ldr	r3, [r3, #0]
 8000d2e:	6011      	str	r1, [r2, #0]
 8000d30:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d34:	bf18      	it	ne
 8000d36:	b21b      	sxthne	r3, r3
 8000d38:	e7cf      	b.n	8000cda <_printf_i+0x52>
 8000d3a:	6813      	ldr	r3, [r2, #0]
 8000d3c:	6825      	ldr	r5, [r4, #0]
 8000d3e:	1d18      	adds	r0, r3, #4
 8000d40:	6010      	str	r0, [r2, #0]
 8000d42:	0628      	lsls	r0, r5, #24
 8000d44:	d501      	bpl.n	8000d4a <_printf_i+0xc2>
 8000d46:	681b      	ldr	r3, [r3, #0]
 8000d48:	e002      	b.n	8000d50 <_printf_i+0xc8>
 8000d4a:	0668      	lsls	r0, r5, #25
 8000d4c:	d5fb      	bpl.n	8000d46 <_printf_i+0xbe>
 8000d4e:	881b      	ldrh	r3, [r3, #0]
 8000d50:	4854      	ldr	r0, [pc, #336]	; (8000ea4 <_printf_i+0x21c>)
 8000d52:	296f      	cmp	r1, #111	; 0x6f
 8000d54:	bf14      	ite	ne
 8000d56:	220a      	movne	r2, #10
 8000d58:	2208      	moveq	r2, #8
 8000d5a:	2100      	movs	r1, #0
 8000d5c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d60:	6865      	ldr	r5, [r4, #4]
 8000d62:	60a5      	str	r5, [r4, #8]
 8000d64:	2d00      	cmp	r5, #0
 8000d66:	f2c0 8095 	blt.w	8000e94 <_printf_i+0x20c>
 8000d6a:	6821      	ldr	r1, [r4, #0]
 8000d6c:	f021 0104 	bic.w	r1, r1, #4
 8000d70:	6021      	str	r1, [r4, #0]
 8000d72:	2b00      	cmp	r3, #0
 8000d74:	d13d      	bne.n	8000df2 <_printf_i+0x16a>
 8000d76:	2d00      	cmp	r5, #0
 8000d78:	f040 808e 	bne.w	8000e98 <_printf_i+0x210>
 8000d7c:	4665      	mov	r5, ip
 8000d7e:	2a08      	cmp	r2, #8
 8000d80:	d10b      	bne.n	8000d9a <_printf_i+0x112>
 8000d82:	6823      	ldr	r3, [r4, #0]
 8000d84:	07db      	lsls	r3, r3, #31
 8000d86:	d508      	bpl.n	8000d9a <_printf_i+0x112>
 8000d88:	6923      	ldr	r3, [r4, #16]
 8000d8a:	6862      	ldr	r2, [r4, #4]
 8000d8c:	429a      	cmp	r2, r3
 8000d8e:	bfde      	ittt	le
 8000d90:	2330      	movle	r3, #48	; 0x30
 8000d92:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d96:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d9a:	ebac 0305 	sub.w	r3, ip, r5
 8000d9e:	6123      	str	r3, [r4, #16]
 8000da0:	f8cd 8000 	str.w	r8, [sp]
 8000da4:	463b      	mov	r3, r7
 8000da6:	aa03      	add	r2, sp, #12
 8000da8:	4621      	mov	r1, r4
 8000daa:	4630      	mov	r0, r6
 8000dac:	f7ff fef6 	bl	8000b9c <_printf_common>
 8000db0:	3001      	adds	r0, #1
 8000db2:	d14d      	bne.n	8000e50 <_printf_i+0x1c8>
 8000db4:	f04f 30ff 	mov.w	r0, #4294967295
 8000db8:	b005      	add	sp, #20
 8000dba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000dbe:	4839      	ldr	r0, [pc, #228]	; (8000ea4 <_printf_i+0x21c>)
 8000dc0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000dc4:	6813      	ldr	r3, [r2, #0]
 8000dc6:	6821      	ldr	r1, [r4, #0]
 8000dc8:	1d1d      	adds	r5, r3, #4
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	6015      	str	r5, [r2, #0]
 8000dce:	060a      	lsls	r2, r1, #24
 8000dd0:	d50b      	bpl.n	8000dea <_printf_i+0x162>
 8000dd2:	07ca      	lsls	r2, r1, #31
 8000dd4:	bf44      	itt	mi
 8000dd6:	f041 0120 	orrmi.w	r1, r1, #32
 8000dda:	6021      	strmi	r1, [r4, #0]
 8000ddc:	b91b      	cbnz	r3, 8000de6 <_printf_i+0x15e>
 8000dde:	6822      	ldr	r2, [r4, #0]
 8000de0:	f022 0220 	bic.w	r2, r2, #32
 8000de4:	6022      	str	r2, [r4, #0]
 8000de6:	2210      	movs	r2, #16
 8000de8:	e7b7      	b.n	8000d5a <_printf_i+0xd2>
 8000dea:	064d      	lsls	r5, r1, #25
 8000dec:	bf48      	it	mi
 8000dee:	b29b      	uxthmi	r3, r3
 8000df0:	e7ef      	b.n	8000dd2 <_printf_i+0x14a>
 8000df2:	4665      	mov	r5, ip
 8000df4:	fbb3 f1f2 	udiv	r1, r3, r2
 8000df8:	fb02 3311 	mls	r3, r2, r1, r3
 8000dfc:	5cc3      	ldrb	r3, [r0, r3]
 8000dfe:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000e02:	460b      	mov	r3, r1
 8000e04:	2900      	cmp	r1, #0
 8000e06:	d1f5      	bne.n	8000df4 <_printf_i+0x16c>
 8000e08:	e7b9      	b.n	8000d7e <_printf_i+0xf6>
 8000e0a:	6813      	ldr	r3, [r2, #0]
 8000e0c:	6825      	ldr	r5, [r4, #0]
 8000e0e:	6961      	ldr	r1, [r4, #20]
 8000e10:	1d18      	adds	r0, r3, #4
 8000e12:	6010      	str	r0, [r2, #0]
 8000e14:	0628      	lsls	r0, r5, #24
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	d501      	bpl.n	8000e1e <_printf_i+0x196>
 8000e1a:	6019      	str	r1, [r3, #0]
 8000e1c:	e002      	b.n	8000e24 <_printf_i+0x19c>
 8000e1e:	066a      	lsls	r2, r5, #25
 8000e20:	d5fb      	bpl.n	8000e1a <_printf_i+0x192>
 8000e22:	8019      	strh	r1, [r3, #0]
 8000e24:	2300      	movs	r3, #0
 8000e26:	6123      	str	r3, [r4, #16]
 8000e28:	4665      	mov	r5, ip
 8000e2a:	e7b9      	b.n	8000da0 <_printf_i+0x118>
 8000e2c:	6813      	ldr	r3, [r2, #0]
 8000e2e:	1d19      	adds	r1, r3, #4
 8000e30:	6011      	str	r1, [r2, #0]
 8000e32:	681d      	ldr	r5, [r3, #0]
 8000e34:	6862      	ldr	r2, [r4, #4]
 8000e36:	2100      	movs	r1, #0
 8000e38:	4628      	mov	r0, r5
 8000e3a:	f7ff f9d1 	bl	80001e0 <memchr>
 8000e3e:	b108      	cbz	r0, 8000e44 <_printf_i+0x1bc>
 8000e40:	1b40      	subs	r0, r0, r5
 8000e42:	6060      	str	r0, [r4, #4]
 8000e44:	6863      	ldr	r3, [r4, #4]
 8000e46:	6123      	str	r3, [r4, #16]
 8000e48:	2300      	movs	r3, #0
 8000e4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e4e:	e7a7      	b.n	8000da0 <_printf_i+0x118>
 8000e50:	6923      	ldr	r3, [r4, #16]
 8000e52:	462a      	mov	r2, r5
 8000e54:	4639      	mov	r1, r7
 8000e56:	4630      	mov	r0, r6
 8000e58:	47c0      	blx	r8
 8000e5a:	3001      	adds	r0, #1
 8000e5c:	d0aa      	beq.n	8000db4 <_printf_i+0x12c>
 8000e5e:	6823      	ldr	r3, [r4, #0]
 8000e60:	079b      	lsls	r3, r3, #30
 8000e62:	d413      	bmi.n	8000e8c <_printf_i+0x204>
 8000e64:	68e0      	ldr	r0, [r4, #12]
 8000e66:	9b03      	ldr	r3, [sp, #12]
 8000e68:	4298      	cmp	r0, r3
 8000e6a:	bfb8      	it	lt
 8000e6c:	4618      	movlt	r0, r3
 8000e6e:	e7a3      	b.n	8000db8 <_printf_i+0x130>
 8000e70:	2301      	movs	r3, #1
 8000e72:	464a      	mov	r2, r9
 8000e74:	4639      	mov	r1, r7
 8000e76:	4630      	mov	r0, r6
 8000e78:	47c0      	blx	r8
 8000e7a:	3001      	adds	r0, #1
 8000e7c:	d09a      	beq.n	8000db4 <_printf_i+0x12c>
 8000e7e:	3501      	adds	r5, #1
 8000e80:	68e3      	ldr	r3, [r4, #12]
 8000e82:	9a03      	ldr	r2, [sp, #12]
 8000e84:	1a9b      	subs	r3, r3, r2
 8000e86:	42ab      	cmp	r3, r5
 8000e88:	dcf2      	bgt.n	8000e70 <_printf_i+0x1e8>
 8000e8a:	e7eb      	b.n	8000e64 <_printf_i+0x1dc>
 8000e8c:	2500      	movs	r5, #0
 8000e8e:	f104 0919 	add.w	r9, r4, #25
 8000e92:	e7f5      	b.n	8000e80 <_printf_i+0x1f8>
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	d1ac      	bne.n	8000df2 <_printf_i+0x16a>
 8000e98:	7803      	ldrb	r3, [r0, #0]
 8000e9a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e9e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ea2:	e76c      	b.n	8000d7e <_printf_i+0xf6>
 8000ea4:	08001515 	.word	0x08001515
 8000ea8:	08001526 	.word	0x08001526

08000eac <_sbrk_r>:
 8000eac:	b538      	push	{r3, r4, r5, lr}
 8000eae:	4c06      	ldr	r4, [pc, #24]	; (8000ec8 <_sbrk_r+0x1c>)
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	4605      	mov	r5, r0
 8000eb4:	4608      	mov	r0, r1
 8000eb6:	6023      	str	r3, [r4, #0]
 8000eb8:	f7ff fa8e 	bl	80003d8 <_sbrk>
 8000ebc:	1c43      	adds	r3, r0, #1
 8000ebe:	d102      	bne.n	8000ec6 <_sbrk_r+0x1a>
 8000ec0:	6823      	ldr	r3, [r4, #0]
 8000ec2:	b103      	cbz	r3, 8000ec6 <_sbrk_r+0x1a>
 8000ec4:	602b      	str	r3, [r5, #0]
 8000ec6:	bd38      	pop	{r3, r4, r5, pc}
 8000ec8:	2000008c 	.word	0x2000008c

08000ecc <__sread>:
 8000ecc:	b510      	push	{r4, lr}
 8000ece:	460c      	mov	r4, r1
 8000ed0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ed4:	f000 fa96 	bl	8001404 <_read_r>
 8000ed8:	2800      	cmp	r0, #0
 8000eda:	bfab      	itete	ge
 8000edc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000ede:	89a3      	ldrhlt	r3, [r4, #12]
 8000ee0:	181b      	addge	r3, r3, r0
 8000ee2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ee6:	bfac      	ite	ge
 8000ee8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000eea:	81a3      	strhlt	r3, [r4, #12]
 8000eec:	bd10      	pop	{r4, pc}

08000eee <__swrite>:
 8000eee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ef2:	461f      	mov	r7, r3
 8000ef4:	898b      	ldrh	r3, [r1, #12]
 8000ef6:	05db      	lsls	r3, r3, #23
 8000ef8:	4605      	mov	r5, r0
 8000efa:	460c      	mov	r4, r1
 8000efc:	4616      	mov	r6, r2
 8000efe:	d505      	bpl.n	8000f0c <__swrite+0x1e>
 8000f00:	2302      	movs	r3, #2
 8000f02:	2200      	movs	r2, #0
 8000f04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f08:	f000 f9b6 	bl	8001278 <_lseek_r>
 8000f0c:	89a3      	ldrh	r3, [r4, #12]
 8000f0e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f16:	81a3      	strh	r3, [r4, #12]
 8000f18:	4632      	mov	r2, r6
 8000f1a:	463b      	mov	r3, r7
 8000f1c:	4628      	mov	r0, r5
 8000f1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f22:	f000 b869 	b.w	8000ff8 <_write_r>

08000f26 <__sseek>:
 8000f26:	b510      	push	{r4, lr}
 8000f28:	460c      	mov	r4, r1
 8000f2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f2e:	f000 f9a3 	bl	8001278 <_lseek_r>
 8000f32:	1c43      	adds	r3, r0, #1
 8000f34:	89a3      	ldrh	r3, [r4, #12]
 8000f36:	bf15      	itete	ne
 8000f38:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f3a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f3e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f42:	81a3      	strheq	r3, [r4, #12]
 8000f44:	bf18      	it	ne
 8000f46:	81a3      	strhne	r3, [r4, #12]
 8000f48:	bd10      	pop	{r4, pc}

08000f4a <__sclose>:
 8000f4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f4e:	f000 b8d3 	b.w	80010f8 <_close_r>
	...

08000f54 <__swbuf_r>:
 8000f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f56:	460e      	mov	r6, r1
 8000f58:	4614      	mov	r4, r2
 8000f5a:	4605      	mov	r5, r0
 8000f5c:	b118      	cbz	r0, 8000f66 <__swbuf_r+0x12>
 8000f5e:	6983      	ldr	r3, [r0, #24]
 8000f60:	b90b      	cbnz	r3, 8000f66 <__swbuf_r+0x12>
 8000f62:	f7ff fbf7 	bl	8000754 <__sinit>
 8000f66:	4b21      	ldr	r3, [pc, #132]	; (8000fec <__swbuf_r+0x98>)
 8000f68:	429c      	cmp	r4, r3
 8000f6a:	d12a      	bne.n	8000fc2 <__swbuf_r+0x6e>
 8000f6c:	686c      	ldr	r4, [r5, #4]
 8000f6e:	69a3      	ldr	r3, [r4, #24]
 8000f70:	60a3      	str	r3, [r4, #8]
 8000f72:	89a3      	ldrh	r3, [r4, #12]
 8000f74:	071a      	lsls	r2, r3, #28
 8000f76:	d52e      	bpl.n	8000fd6 <__swbuf_r+0x82>
 8000f78:	6923      	ldr	r3, [r4, #16]
 8000f7a:	b363      	cbz	r3, 8000fd6 <__swbuf_r+0x82>
 8000f7c:	6923      	ldr	r3, [r4, #16]
 8000f7e:	6820      	ldr	r0, [r4, #0]
 8000f80:	1ac0      	subs	r0, r0, r3
 8000f82:	6963      	ldr	r3, [r4, #20]
 8000f84:	b2f6      	uxtb	r6, r6
 8000f86:	4283      	cmp	r3, r0
 8000f88:	4637      	mov	r7, r6
 8000f8a:	dc04      	bgt.n	8000f96 <__swbuf_r+0x42>
 8000f8c:	4621      	mov	r1, r4
 8000f8e:	4628      	mov	r0, r5
 8000f90:	f000 f948 	bl	8001224 <_fflush_r>
 8000f94:	bb28      	cbnz	r0, 8000fe2 <__swbuf_r+0x8e>
 8000f96:	68a3      	ldr	r3, [r4, #8]
 8000f98:	3b01      	subs	r3, #1
 8000f9a:	60a3      	str	r3, [r4, #8]
 8000f9c:	6823      	ldr	r3, [r4, #0]
 8000f9e:	1c5a      	adds	r2, r3, #1
 8000fa0:	6022      	str	r2, [r4, #0]
 8000fa2:	701e      	strb	r6, [r3, #0]
 8000fa4:	6963      	ldr	r3, [r4, #20]
 8000fa6:	3001      	adds	r0, #1
 8000fa8:	4283      	cmp	r3, r0
 8000faa:	d004      	beq.n	8000fb6 <__swbuf_r+0x62>
 8000fac:	89a3      	ldrh	r3, [r4, #12]
 8000fae:	07db      	lsls	r3, r3, #31
 8000fb0:	d519      	bpl.n	8000fe6 <__swbuf_r+0x92>
 8000fb2:	2e0a      	cmp	r6, #10
 8000fb4:	d117      	bne.n	8000fe6 <__swbuf_r+0x92>
 8000fb6:	4621      	mov	r1, r4
 8000fb8:	4628      	mov	r0, r5
 8000fba:	f000 f933 	bl	8001224 <_fflush_r>
 8000fbe:	b190      	cbz	r0, 8000fe6 <__swbuf_r+0x92>
 8000fc0:	e00f      	b.n	8000fe2 <__swbuf_r+0x8e>
 8000fc2:	4b0b      	ldr	r3, [pc, #44]	; (8000ff0 <__swbuf_r+0x9c>)
 8000fc4:	429c      	cmp	r4, r3
 8000fc6:	d101      	bne.n	8000fcc <__swbuf_r+0x78>
 8000fc8:	68ac      	ldr	r4, [r5, #8]
 8000fca:	e7d0      	b.n	8000f6e <__swbuf_r+0x1a>
 8000fcc:	4b09      	ldr	r3, [pc, #36]	; (8000ff4 <__swbuf_r+0xa0>)
 8000fce:	429c      	cmp	r4, r3
 8000fd0:	bf08      	it	eq
 8000fd2:	68ec      	ldreq	r4, [r5, #12]
 8000fd4:	e7cb      	b.n	8000f6e <__swbuf_r+0x1a>
 8000fd6:	4621      	mov	r1, r4
 8000fd8:	4628      	mov	r0, r5
 8000fda:	f000 f81f 	bl	800101c <__swsetup_r>
 8000fde:	2800      	cmp	r0, #0
 8000fe0:	d0cc      	beq.n	8000f7c <__swbuf_r+0x28>
 8000fe2:	f04f 37ff 	mov.w	r7, #4294967295
 8000fe6:	4638      	mov	r0, r7
 8000fe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fea:	bf00      	nop
 8000fec:	080014c4 	.word	0x080014c4
 8000ff0:	080014e4 	.word	0x080014e4
 8000ff4:	080014a4 	.word	0x080014a4

08000ff8 <_write_r>:
 8000ff8:	b538      	push	{r3, r4, r5, lr}
 8000ffa:	4c07      	ldr	r4, [pc, #28]	; (8001018 <_write_r+0x20>)
 8000ffc:	4605      	mov	r5, r0
 8000ffe:	4608      	mov	r0, r1
 8001000:	4611      	mov	r1, r2
 8001002:	2200      	movs	r2, #0
 8001004:	6022      	str	r2, [r4, #0]
 8001006:	461a      	mov	r2, r3
 8001008:	f7ff f995 	bl	8000336 <_write>
 800100c:	1c43      	adds	r3, r0, #1
 800100e:	d102      	bne.n	8001016 <_write_r+0x1e>
 8001010:	6823      	ldr	r3, [r4, #0]
 8001012:	b103      	cbz	r3, 8001016 <_write_r+0x1e>
 8001014:	602b      	str	r3, [r5, #0]
 8001016:	bd38      	pop	{r3, r4, r5, pc}
 8001018:	2000008c 	.word	0x2000008c

0800101c <__swsetup_r>:
 800101c:	4b32      	ldr	r3, [pc, #200]	; (80010e8 <__swsetup_r+0xcc>)
 800101e:	b570      	push	{r4, r5, r6, lr}
 8001020:	681d      	ldr	r5, [r3, #0]
 8001022:	4606      	mov	r6, r0
 8001024:	460c      	mov	r4, r1
 8001026:	b125      	cbz	r5, 8001032 <__swsetup_r+0x16>
 8001028:	69ab      	ldr	r3, [r5, #24]
 800102a:	b913      	cbnz	r3, 8001032 <__swsetup_r+0x16>
 800102c:	4628      	mov	r0, r5
 800102e:	f7ff fb91 	bl	8000754 <__sinit>
 8001032:	4b2e      	ldr	r3, [pc, #184]	; (80010ec <__swsetup_r+0xd0>)
 8001034:	429c      	cmp	r4, r3
 8001036:	d10f      	bne.n	8001058 <__swsetup_r+0x3c>
 8001038:	686c      	ldr	r4, [r5, #4]
 800103a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800103e:	b29a      	uxth	r2, r3
 8001040:	0715      	lsls	r5, r2, #28
 8001042:	d42c      	bmi.n	800109e <__swsetup_r+0x82>
 8001044:	06d0      	lsls	r0, r2, #27
 8001046:	d411      	bmi.n	800106c <__swsetup_r+0x50>
 8001048:	2209      	movs	r2, #9
 800104a:	6032      	str	r2, [r6, #0]
 800104c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001050:	81a3      	strh	r3, [r4, #12]
 8001052:	f04f 30ff 	mov.w	r0, #4294967295
 8001056:	e03e      	b.n	80010d6 <__swsetup_r+0xba>
 8001058:	4b25      	ldr	r3, [pc, #148]	; (80010f0 <__swsetup_r+0xd4>)
 800105a:	429c      	cmp	r4, r3
 800105c:	d101      	bne.n	8001062 <__swsetup_r+0x46>
 800105e:	68ac      	ldr	r4, [r5, #8]
 8001060:	e7eb      	b.n	800103a <__swsetup_r+0x1e>
 8001062:	4b24      	ldr	r3, [pc, #144]	; (80010f4 <__swsetup_r+0xd8>)
 8001064:	429c      	cmp	r4, r3
 8001066:	bf08      	it	eq
 8001068:	68ec      	ldreq	r4, [r5, #12]
 800106a:	e7e6      	b.n	800103a <__swsetup_r+0x1e>
 800106c:	0751      	lsls	r1, r2, #29
 800106e:	d512      	bpl.n	8001096 <__swsetup_r+0x7a>
 8001070:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001072:	b141      	cbz	r1, 8001086 <__swsetup_r+0x6a>
 8001074:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001078:	4299      	cmp	r1, r3
 800107a:	d002      	beq.n	8001082 <__swsetup_r+0x66>
 800107c:	4630      	mov	r0, r6
 800107e:	f000 f973 	bl	8001368 <_free_r>
 8001082:	2300      	movs	r3, #0
 8001084:	6363      	str	r3, [r4, #52]	; 0x34
 8001086:	89a3      	ldrh	r3, [r4, #12]
 8001088:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800108c:	81a3      	strh	r3, [r4, #12]
 800108e:	2300      	movs	r3, #0
 8001090:	6063      	str	r3, [r4, #4]
 8001092:	6923      	ldr	r3, [r4, #16]
 8001094:	6023      	str	r3, [r4, #0]
 8001096:	89a3      	ldrh	r3, [r4, #12]
 8001098:	f043 0308 	orr.w	r3, r3, #8
 800109c:	81a3      	strh	r3, [r4, #12]
 800109e:	6923      	ldr	r3, [r4, #16]
 80010a0:	b94b      	cbnz	r3, 80010b6 <__swsetup_r+0x9a>
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80010a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010ac:	d003      	beq.n	80010b6 <__swsetup_r+0x9a>
 80010ae:	4621      	mov	r1, r4
 80010b0:	4630      	mov	r0, r6
 80010b2:	f000 f917 	bl	80012e4 <__smakebuf_r>
 80010b6:	89a2      	ldrh	r2, [r4, #12]
 80010b8:	f012 0301 	ands.w	r3, r2, #1
 80010bc:	d00c      	beq.n	80010d8 <__swsetup_r+0xbc>
 80010be:	2300      	movs	r3, #0
 80010c0:	60a3      	str	r3, [r4, #8]
 80010c2:	6963      	ldr	r3, [r4, #20]
 80010c4:	425b      	negs	r3, r3
 80010c6:	61a3      	str	r3, [r4, #24]
 80010c8:	6923      	ldr	r3, [r4, #16]
 80010ca:	b953      	cbnz	r3, 80010e2 <__swsetup_r+0xc6>
 80010cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010d0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80010d4:	d1ba      	bne.n	800104c <__swsetup_r+0x30>
 80010d6:	bd70      	pop	{r4, r5, r6, pc}
 80010d8:	0792      	lsls	r2, r2, #30
 80010da:	bf58      	it	pl
 80010dc:	6963      	ldrpl	r3, [r4, #20]
 80010de:	60a3      	str	r3, [r4, #8]
 80010e0:	e7f2      	b.n	80010c8 <__swsetup_r+0xac>
 80010e2:	2000      	movs	r0, #0
 80010e4:	e7f7      	b.n	80010d6 <__swsetup_r+0xba>
 80010e6:	bf00      	nop
 80010e8:	20000000 	.word	0x20000000
 80010ec:	080014c4 	.word	0x080014c4
 80010f0:	080014e4 	.word	0x080014e4
 80010f4:	080014a4 	.word	0x080014a4

080010f8 <_close_r>:
 80010f8:	b538      	push	{r3, r4, r5, lr}
 80010fa:	4c06      	ldr	r4, [pc, #24]	; (8001114 <_close_r+0x1c>)
 80010fc:	2300      	movs	r3, #0
 80010fe:	4605      	mov	r5, r0
 8001100:	4608      	mov	r0, r1
 8001102:	6023      	str	r3, [r4, #0]
 8001104:	f7ff f933 	bl	800036e <_close>
 8001108:	1c43      	adds	r3, r0, #1
 800110a:	d102      	bne.n	8001112 <_close_r+0x1a>
 800110c:	6823      	ldr	r3, [r4, #0]
 800110e:	b103      	cbz	r3, 8001112 <_close_r+0x1a>
 8001110:	602b      	str	r3, [r5, #0]
 8001112:	bd38      	pop	{r3, r4, r5, pc}
 8001114:	2000008c 	.word	0x2000008c

08001118 <__sflush_r>:
 8001118:	898a      	ldrh	r2, [r1, #12]
 800111a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800111e:	4605      	mov	r5, r0
 8001120:	0710      	lsls	r0, r2, #28
 8001122:	460c      	mov	r4, r1
 8001124:	d458      	bmi.n	80011d8 <__sflush_r+0xc0>
 8001126:	684b      	ldr	r3, [r1, #4]
 8001128:	2b00      	cmp	r3, #0
 800112a:	dc05      	bgt.n	8001138 <__sflush_r+0x20>
 800112c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800112e:	2b00      	cmp	r3, #0
 8001130:	dc02      	bgt.n	8001138 <__sflush_r+0x20>
 8001132:	2000      	movs	r0, #0
 8001134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001138:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800113a:	2e00      	cmp	r6, #0
 800113c:	d0f9      	beq.n	8001132 <__sflush_r+0x1a>
 800113e:	2300      	movs	r3, #0
 8001140:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001144:	682f      	ldr	r7, [r5, #0]
 8001146:	6a21      	ldr	r1, [r4, #32]
 8001148:	602b      	str	r3, [r5, #0]
 800114a:	d032      	beq.n	80011b2 <__sflush_r+0x9a>
 800114c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800114e:	89a3      	ldrh	r3, [r4, #12]
 8001150:	075a      	lsls	r2, r3, #29
 8001152:	d505      	bpl.n	8001160 <__sflush_r+0x48>
 8001154:	6863      	ldr	r3, [r4, #4]
 8001156:	1ac0      	subs	r0, r0, r3
 8001158:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800115a:	b10b      	cbz	r3, 8001160 <__sflush_r+0x48>
 800115c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800115e:	1ac0      	subs	r0, r0, r3
 8001160:	2300      	movs	r3, #0
 8001162:	4602      	mov	r2, r0
 8001164:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001166:	6a21      	ldr	r1, [r4, #32]
 8001168:	4628      	mov	r0, r5
 800116a:	47b0      	blx	r6
 800116c:	1c43      	adds	r3, r0, #1
 800116e:	89a3      	ldrh	r3, [r4, #12]
 8001170:	d106      	bne.n	8001180 <__sflush_r+0x68>
 8001172:	6829      	ldr	r1, [r5, #0]
 8001174:	291d      	cmp	r1, #29
 8001176:	d848      	bhi.n	800120a <__sflush_r+0xf2>
 8001178:	4a29      	ldr	r2, [pc, #164]	; (8001220 <__sflush_r+0x108>)
 800117a:	40ca      	lsrs	r2, r1
 800117c:	07d6      	lsls	r6, r2, #31
 800117e:	d544      	bpl.n	800120a <__sflush_r+0xf2>
 8001180:	2200      	movs	r2, #0
 8001182:	6062      	str	r2, [r4, #4]
 8001184:	04d9      	lsls	r1, r3, #19
 8001186:	6922      	ldr	r2, [r4, #16]
 8001188:	6022      	str	r2, [r4, #0]
 800118a:	d504      	bpl.n	8001196 <__sflush_r+0x7e>
 800118c:	1c42      	adds	r2, r0, #1
 800118e:	d101      	bne.n	8001194 <__sflush_r+0x7c>
 8001190:	682b      	ldr	r3, [r5, #0]
 8001192:	b903      	cbnz	r3, 8001196 <__sflush_r+0x7e>
 8001194:	6560      	str	r0, [r4, #84]	; 0x54
 8001196:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001198:	602f      	str	r7, [r5, #0]
 800119a:	2900      	cmp	r1, #0
 800119c:	d0c9      	beq.n	8001132 <__sflush_r+0x1a>
 800119e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011a2:	4299      	cmp	r1, r3
 80011a4:	d002      	beq.n	80011ac <__sflush_r+0x94>
 80011a6:	4628      	mov	r0, r5
 80011a8:	f000 f8de 	bl	8001368 <_free_r>
 80011ac:	2000      	movs	r0, #0
 80011ae:	6360      	str	r0, [r4, #52]	; 0x34
 80011b0:	e7c0      	b.n	8001134 <__sflush_r+0x1c>
 80011b2:	2301      	movs	r3, #1
 80011b4:	4628      	mov	r0, r5
 80011b6:	47b0      	blx	r6
 80011b8:	1c41      	adds	r1, r0, #1
 80011ba:	d1c8      	bne.n	800114e <__sflush_r+0x36>
 80011bc:	682b      	ldr	r3, [r5, #0]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d0c5      	beq.n	800114e <__sflush_r+0x36>
 80011c2:	2b1d      	cmp	r3, #29
 80011c4:	d001      	beq.n	80011ca <__sflush_r+0xb2>
 80011c6:	2b16      	cmp	r3, #22
 80011c8:	d101      	bne.n	80011ce <__sflush_r+0xb6>
 80011ca:	602f      	str	r7, [r5, #0]
 80011cc:	e7b1      	b.n	8001132 <__sflush_r+0x1a>
 80011ce:	89a3      	ldrh	r3, [r4, #12]
 80011d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011d4:	81a3      	strh	r3, [r4, #12]
 80011d6:	e7ad      	b.n	8001134 <__sflush_r+0x1c>
 80011d8:	690f      	ldr	r7, [r1, #16]
 80011da:	2f00      	cmp	r7, #0
 80011dc:	d0a9      	beq.n	8001132 <__sflush_r+0x1a>
 80011de:	0793      	lsls	r3, r2, #30
 80011e0:	680e      	ldr	r6, [r1, #0]
 80011e2:	bf08      	it	eq
 80011e4:	694b      	ldreq	r3, [r1, #20]
 80011e6:	600f      	str	r7, [r1, #0]
 80011e8:	bf18      	it	ne
 80011ea:	2300      	movne	r3, #0
 80011ec:	eba6 0807 	sub.w	r8, r6, r7
 80011f0:	608b      	str	r3, [r1, #8]
 80011f2:	f1b8 0f00 	cmp.w	r8, #0
 80011f6:	dd9c      	ble.n	8001132 <__sflush_r+0x1a>
 80011f8:	4643      	mov	r3, r8
 80011fa:	463a      	mov	r2, r7
 80011fc:	6a21      	ldr	r1, [r4, #32]
 80011fe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001200:	4628      	mov	r0, r5
 8001202:	47b0      	blx	r6
 8001204:	2800      	cmp	r0, #0
 8001206:	dc06      	bgt.n	8001216 <__sflush_r+0xfe>
 8001208:	89a3      	ldrh	r3, [r4, #12]
 800120a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800120e:	81a3      	strh	r3, [r4, #12]
 8001210:	f04f 30ff 	mov.w	r0, #4294967295
 8001214:	e78e      	b.n	8001134 <__sflush_r+0x1c>
 8001216:	4407      	add	r7, r0
 8001218:	eba8 0800 	sub.w	r8, r8, r0
 800121c:	e7e9      	b.n	80011f2 <__sflush_r+0xda>
 800121e:	bf00      	nop
 8001220:	20400001 	.word	0x20400001

08001224 <_fflush_r>:
 8001224:	b538      	push	{r3, r4, r5, lr}
 8001226:	690b      	ldr	r3, [r1, #16]
 8001228:	4605      	mov	r5, r0
 800122a:	460c      	mov	r4, r1
 800122c:	b1db      	cbz	r3, 8001266 <_fflush_r+0x42>
 800122e:	b118      	cbz	r0, 8001238 <_fflush_r+0x14>
 8001230:	6983      	ldr	r3, [r0, #24]
 8001232:	b90b      	cbnz	r3, 8001238 <_fflush_r+0x14>
 8001234:	f7ff fa8e 	bl	8000754 <__sinit>
 8001238:	4b0c      	ldr	r3, [pc, #48]	; (800126c <_fflush_r+0x48>)
 800123a:	429c      	cmp	r4, r3
 800123c:	d109      	bne.n	8001252 <_fflush_r+0x2e>
 800123e:	686c      	ldr	r4, [r5, #4]
 8001240:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001244:	b17b      	cbz	r3, 8001266 <_fflush_r+0x42>
 8001246:	4621      	mov	r1, r4
 8001248:	4628      	mov	r0, r5
 800124a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800124e:	f7ff bf63 	b.w	8001118 <__sflush_r>
 8001252:	4b07      	ldr	r3, [pc, #28]	; (8001270 <_fflush_r+0x4c>)
 8001254:	429c      	cmp	r4, r3
 8001256:	d101      	bne.n	800125c <_fflush_r+0x38>
 8001258:	68ac      	ldr	r4, [r5, #8]
 800125a:	e7f1      	b.n	8001240 <_fflush_r+0x1c>
 800125c:	4b05      	ldr	r3, [pc, #20]	; (8001274 <_fflush_r+0x50>)
 800125e:	429c      	cmp	r4, r3
 8001260:	bf08      	it	eq
 8001262:	68ec      	ldreq	r4, [r5, #12]
 8001264:	e7ec      	b.n	8001240 <_fflush_r+0x1c>
 8001266:	2000      	movs	r0, #0
 8001268:	bd38      	pop	{r3, r4, r5, pc}
 800126a:	bf00      	nop
 800126c:	080014c4 	.word	0x080014c4
 8001270:	080014e4 	.word	0x080014e4
 8001274:	080014a4 	.word	0x080014a4

08001278 <_lseek_r>:
 8001278:	b538      	push	{r3, r4, r5, lr}
 800127a:	4c07      	ldr	r4, [pc, #28]	; (8001298 <_lseek_r+0x20>)
 800127c:	4605      	mov	r5, r0
 800127e:	4608      	mov	r0, r1
 8001280:	4611      	mov	r1, r2
 8001282:	2200      	movs	r2, #0
 8001284:	6022      	str	r2, [r4, #0]
 8001286:	461a      	mov	r2, r3
 8001288:	f7ff f898 	bl	80003bc <_lseek>
 800128c:	1c43      	adds	r3, r0, #1
 800128e:	d102      	bne.n	8001296 <_lseek_r+0x1e>
 8001290:	6823      	ldr	r3, [r4, #0]
 8001292:	b103      	cbz	r3, 8001296 <_lseek_r+0x1e>
 8001294:	602b      	str	r3, [r5, #0]
 8001296:	bd38      	pop	{r3, r4, r5, pc}
 8001298:	2000008c 	.word	0x2000008c

0800129c <__swhatbuf_r>:
 800129c:	b570      	push	{r4, r5, r6, lr}
 800129e:	460e      	mov	r6, r1
 80012a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012a4:	2900      	cmp	r1, #0
 80012a6:	b096      	sub	sp, #88	; 0x58
 80012a8:	4614      	mov	r4, r2
 80012aa:	461d      	mov	r5, r3
 80012ac:	da07      	bge.n	80012be <__swhatbuf_r+0x22>
 80012ae:	2300      	movs	r3, #0
 80012b0:	602b      	str	r3, [r5, #0]
 80012b2:	89b3      	ldrh	r3, [r6, #12]
 80012b4:	061a      	lsls	r2, r3, #24
 80012b6:	d410      	bmi.n	80012da <__swhatbuf_r+0x3e>
 80012b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012bc:	e00e      	b.n	80012dc <__swhatbuf_r+0x40>
 80012be:	466a      	mov	r2, sp
 80012c0:	f000 f8b2 	bl	8001428 <_fstat_r>
 80012c4:	2800      	cmp	r0, #0
 80012c6:	dbf2      	blt.n	80012ae <__swhatbuf_r+0x12>
 80012c8:	9a01      	ldr	r2, [sp, #4]
 80012ca:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012ce:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012d2:	425a      	negs	r2, r3
 80012d4:	415a      	adcs	r2, r3
 80012d6:	602a      	str	r2, [r5, #0]
 80012d8:	e7ee      	b.n	80012b8 <__swhatbuf_r+0x1c>
 80012da:	2340      	movs	r3, #64	; 0x40
 80012dc:	2000      	movs	r0, #0
 80012de:	6023      	str	r3, [r4, #0]
 80012e0:	b016      	add	sp, #88	; 0x58
 80012e2:	bd70      	pop	{r4, r5, r6, pc}

080012e4 <__smakebuf_r>:
 80012e4:	898b      	ldrh	r3, [r1, #12]
 80012e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012e8:	079d      	lsls	r5, r3, #30
 80012ea:	4606      	mov	r6, r0
 80012ec:	460c      	mov	r4, r1
 80012ee:	d507      	bpl.n	8001300 <__smakebuf_r+0x1c>
 80012f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	6123      	str	r3, [r4, #16]
 80012f8:	2301      	movs	r3, #1
 80012fa:	6163      	str	r3, [r4, #20]
 80012fc:	b002      	add	sp, #8
 80012fe:	bd70      	pop	{r4, r5, r6, pc}
 8001300:	ab01      	add	r3, sp, #4
 8001302:	466a      	mov	r2, sp
 8001304:	f7ff ffca 	bl	800129c <__swhatbuf_r>
 8001308:	9900      	ldr	r1, [sp, #0]
 800130a:	4605      	mov	r5, r0
 800130c:	4630      	mov	r0, r6
 800130e:	f7ff faab 	bl	8000868 <_malloc_r>
 8001312:	b948      	cbnz	r0, 8001328 <__smakebuf_r+0x44>
 8001314:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001318:	059a      	lsls	r2, r3, #22
 800131a:	d4ef      	bmi.n	80012fc <__smakebuf_r+0x18>
 800131c:	f023 0303 	bic.w	r3, r3, #3
 8001320:	f043 0302 	orr.w	r3, r3, #2
 8001324:	81a3      	strh	r3, [r4, #12]
 8001326:	e7e3      	b.n	80012f0 <__smakebuf_r+0xc>
 8001328:	4b0d      	ldr	r3, [pc, #52]	; (8001360 <__smakebuf_r+0x7c>)
 800132a:	62b3      	str	r3, [r6, #40]	; 0x28
 800132c:	89a3      	ldrh	r3, [r4, #12]
 800132e:	6020      	str	r0, [r4, #0]
 8001330:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001334:	81a3      	strh	r3, [r4, #12]
 8001336:	9b00      	ldr	r3, [sp, #0]
 8001338:	6163      	str	r3, [r4, #20]
 800133a:	9b01      	ldr	r3, [sp, #4]
 800133c:	6120      	str	r0, [r4, #16]
 800133e:	b15b      	cbz	r3, 8001358 <__smakebuf_r+0x74>
 8001340:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001344:	4630      	mov	r0, r6
 8001346:	f000 f881 	bl	800144c <_isatty_r>
 800134a:	b128      	cbz	r0, 8001358 <__smakebuf_r+0x74>
 800134c:	89a3      	ldrh	r3, [r4, #12]
 800134e:	f023 0303 	bic.w	r3, r3, #3
 8001352:	f043 0301 	orr.w	r3, r3, #1
 8001356:	81a3      	strh	r3, [r4, #12]
 8001358:	89a3      	ldrh	r3, [r4, #12]
 800135a:	431d      	orrs	r5, r3
 800135c:	81a5      	strh	r5, [r4, #12]
 800135e:	e7cd      	b.n	80012fc <__smakebuf_r+0x18>
 8001360:	0800071d 	.word	0x0800071d

08001364 <__malloc_lock>:
 8001364:	4770      	bx	lr

08001366 <__malloc_unlock>:
 8001366:	4770      	bx	lr

08001368 <_free_r>:
 8001368:	b538      	push	{r3, r4, r5, lr}
 800136a:	4605      	mov	r5, r0
 800136c:	2900      	cmp	r1, #0
 800136e:	d045      	beq.n	80013fc <_free_r+0x94>
 8001370:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001374:	1f0c      	subs	r4, r1, #4
 8001376:	2b00      	cmp	r3, #0
 8001378:	bfb8      	it	lt
 800137a:	18e4      	addlt	r4, r4, r3
 800137c:	f7ff fff2 	bl	8001364 <__malloc_lock>
 8001380:	4a1f      	ldr	r2, [pc, #124]	; (8001400 <_free_r+0x98>)
 8001382:	6813      	ldr	r3, [r2, #0]
 8001384:	4610      	mov	r0, r2
 8001386:	b933      	cbnz	r3, 8001396 <_free_r+0x2e>
 8001388:	6063      	str	r3, [r4, #4]
 800138a:	6014      	str	r4, [r2, #0]
 800138c:	4628      	mov	r0, r5
 800138e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001392:	f7ff bfe8 	b.w	8001366 <__malloc_unlock>
 8001396:	42a3      	cmp	r3, r4
 8001398:	d90c      	bls.n	80013b4 <_free_r+0x4c>
 800139a:	6821      	ldr	r1, [r4, #0]
 800139c:	1862      	adds	r2, r4, r1
 800139e:	4293      	cmp	r3, r2
 80013a0:	bf04      	itt	eq
 80013a2:	681a      	ldreq	r2, [r3, #0]
 80013a4:	685b      	ldreq	r3, [r3, #4]
 80013a6:	6063      	str	r3, [r4, #4]
 80013a8:	bf04      	itt	eq
 80013aa:	1852      	addeq	r2, r2, r1
 80013ac:	6022      	streq	r2, [r4, #0]
 80013ae:	6004      	str	r4, [r0, #0]
 80013b0:	e7ec      	b.n	800138c <_free_r+0x24>
 80013b2:	4613      	mov	r3, r2
 80013b4:	685a      	ldr	r2, [r3, #4]
 80013b6:	b10a      	cbz	r2, 80013bc <_free_r+0x54>
 80013b8:	42a2      	cmp	r2, r4
 80013ba:	d9fa      	bls.n	80013b2 <_free_r+0x4a>
 80013bc:	6819      	ldr	r1, [r3, #0]
 80013be:	1858      	adds	r0, r3, r1
 80013c0:	42a0      	cmp	r0, r4
 80013c2:	d10b      	bne.n	80013dc <_free_r+0x74>
 80013c4:	6820      	ldr	r0, [r4, #0]
 80013c6:	4401      	add	r1, r0
 80013c8:	1858      	adds	r0, r3, r1
 80013ca:	4282      	cmp	r2, r0
 80013cc:	6019      	str	r1, [r3, #0]
 80013ce:	d1dd      	bne.n	800138c <_free_r+0x24>
 80013d0:	6810      	ldr	r0, [r2, #0]
 80013d2:	6852      	ldr	r2, [r2, #4]
 80013d4:	605a      	str	r2, [r3, #4]
 80013d6:	4401      	add	r1, r0
 80013d8:	6019      	str	r1, [r3, #0]
 80013da:	e7d7      	b.n	800138c <_free_r+0x24>
 80013dc:	d902      	bls.n	80013e4 <_free_r+0x7c>
 80013de:	230c      	movs	r3, #12
 80013e0:	602b      	str	r3, [r5, #0]
 80013e2:	e7d3      	b.n	800138c <_free_r+0x24>
 80013e4:	6820      	ldr	r0, [r4, #0]
 80013e6:	1821      	adds	r1, r4, r0
 80013e8:	428a      	cmp	r2, r1
 80013ea:	bf04      	itt	eq
 80013ec:	6811      	ldreq	r1, [r2, #0]
 80013ee:	6852      	ldreq	r2, [r2, #4]
 80013f0:	6062      	str	r2, [r4, #4]
 80013f2:	bf04      	itt	eq
 80013f4:	1809      	addeq	r1, r1, r0
 80013f6:	6021      	streq	r1, [r4, #0]
 80013f8:	605c      	str	r4, [r3, #4]
 80013fa:	e7c7      	b.n	800138c <_free_r+0x24>
 80013fc:	bd38      	pop	{r3, r4, r5, pc}
 80013fe:	bf00      	nop
 8001400:	20000084 	.word	0x20000084

08001404 <_read_r>:
 8001404:	b538      	push	{r3, r4, r5, lr}
 8001406:	4c07      	ldr	r4, [pc, #28]	; (8001424 <_read_r+0x20>)
 8001408:	4605      	mov	r5, r0
 800140a:	4608      	mov	r0, r1
 800140c:	4611      	mov	r1, r2
 800140e:	2200      	movs	r2, #0
 8001410:	6022      	str	r2, [r4, #0]
 8001412:	461a      	mov	r2, r3
 8001414:	f7fe ff72 	bl	80002fc <_read>
 8001418:	1c43      	adds	r3, r0, #1
 800141a:	d102      	bne.n	8001422 <_read_r+0x1e>
 800141c:	6823      	ldr	r3, [r4, #0]
 800141e:	b103      	cbz	r3, 8001422 <_read_r+0x1e>
 8001420:	602b      	str	r3, [r5, #0]
 8001422:	bd38      	pop	{r3, r4, r5, pc}
 8001424:	2000008c 	.word	0x2000008c

08001428 <_fstat_r>:
 8001428:	b538      	push	{r3, r4, r5, lr}
 800142a:	4c07      	ldr	r4, [pc, #28]	; (8001448 <_fstat_r+0x20>)
 800142c:	2300      	movs	r3, #0
 800142e:	4605      	mov	r5, r0
 8001430:	4608      	mov	r0, r1
 8001432:	4611      	mov	r1, r2
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	f7fe ffa6 	bl	8000386 <_fstat>
 800143a:	1c43      	adds	r3, r0, #1
 800143c:	d102      	bne.n	8001444 <_fstat_r+0x1c>
 800143e:	6823      	ldr	r3, [r4, #0]
 8001440:	b103      	cbz	r3, 8001444 <_fstat_r+0x1c>
 8001442:	602b      	str	r3, [r5, #0]
 8001444:	bd38      	pop	{r3, r4, r5, pc}
 8001446:	bf00      	nop
 8001448:	2000008c 	.word	0x2000008c

0800144c <_isatty_r>:
 800144c:	b538      	push	{r3, r4, r5, lr}
 800144e:	4c06      	ldr	r4, [pc, #24]	; (8001468 <_isatty_r+0x1c>)
 8001450:	2300      	movs	r3, #0
 8001452:	4605      	mov	r5, r0
 8001454:	4608      	mov	r0, r1
 8001456:	6023      	str	r3, [r4, #0]
 8001458:	f7fe ffa5 	bl	80003a6 <_isatty>
 800145c:	1c43      	adds	r3, r0, #1
 800145e:	d102      	bne.n	8001466 <_isatty_r+0x1a>
 8001460:	6823      	ldr	r3, [r4, #0]
 8001462:	b103      	cbz	r3, 8001466 <_isatty_r+0x1a>
 8001464:	602b      	str	r3, [r5, #0]
 8001466:	bd38      	pop	{r3, r4, r5, pc}
 8001468:	2000008c 	.word	0x2000008c

0800146c <_init>:
 800146c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800146e:	bf00      	nop
 8001470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001472:	bc08      	pop	{r3}
 8001474:	469e      	mov	lr, r3
 8001476:	4770      	bx	lr

08001478 <_fini>:
 8001478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800147a:	bf00      	nop
 800147c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800147e:	bc08      	pop	{r3}
 8001480:	469e      	mov	lr, r3
 8001482:	4770      	bx	lr
