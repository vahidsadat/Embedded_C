
12_Timers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000128c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  0800142c  0800142c  0001142c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014e0  080014e0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014e0  080014e0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014e0  080014e0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014e0  080014e0  000114e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014e4  080014e4  000114e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014e8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  0800154c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  0800154c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002e10  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000007f7  00000000  00000000  00022ea4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000180  00000000  00000000  000236a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000128  00000000  00000000  00023820  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002035  00000000  00000000  00023948  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001d97  00000000  00000000  0002597d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000546da  00000000  00000000  00027714  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0007bdee  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b70  00000000  00000000  0007be6c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001414 	.word	0x08001414

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001414 	.word	0x08001414

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#define GPIOAEN		(1U<<0)
#define PIN5		(1U<<5)
#define LED_PIN		(PIN5)

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	tim2_1hz_init();
 8000284:	f000 f8ce 	bl	8000424 <tim2_1hz_init>
	uart2_tx_init();
 8000288:	f000 f8fa 	bl	8000480 <uart2_tx_init>
	RCC->AHB1ENR	|=GPIOAEN;
 800028c:	4b15      	ldr	r3, [pc, #84]	; (80002e4 <main+0x64>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a14      	ldr	r2, [pc, #80]	; (80002e4 <main+0x64>)
 8000292:	f043 0301 	orr.w	r3, r3, #1
 8000296:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOA->MODER |=(1U<<10);
 8000298:	4b13      	ldr	r3, [pc, #76]	; (80002e8 <main+0x68>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4a12      	ldr	r2, [pc, #72]	; (80002e8 <main+0x68>)
 800029e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002a2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 80002a4:	4b10      	ldr	r3, [pc, #64]	; (80002e8 <main+0x68>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	4a0f      	ldr	r2, [pc, #60]	; (80002e8 <main+0x68>)
 80002aa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80002ae:	6013      	str	r3, [r2, #0]


	while(1)
	{
		/*whait for uif*/
		while(!(TIM2->SR & SR_UIF)){}
 80002b0:	bf00      	nop
 80002b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002b6:	691b      	ldr	r3, [r3, #16]
 80002b8:	f003 0301 	and.w	r3, r3, #1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d0f8      	beq.n	80002b2 <main+0x32>

		/*clear UIF*/
		TIM2->SR &=~SR_UIF;
 80002c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002c4:	691b      	ldr	r3, [r3, #16]
 80002c6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80002ca:	f023 0301 	bic.w	r3, r3, #1
 80002ce:	6113      	str	r3, [r2, #16]
		printf("A second just passed !! \n\r");
 80002d0:	4806      	ldr	r0, [pc, #24]	; (80002ec <main+0x6c>)
 80002d2:	f000 f9bb 	bl	800064c <iprintf>
		GPIOA->ODR ^=LED_PIN;
 80002d6:	4b04      	ldr	r3, [pc, #16]	; (80002e8 <main+0x68>)
 80002d8:	695b      	ldr	r3, [r3, #20]
 80002da:	4a03      	ldr	r2, [pc, #12]	; (80002e8 <main+0x68>)
 80002dc:	f083 0320 	eor.w	r3, r3, #32
 80002e0:	6153      	str	r3, [r2, #20]
		while(!(TIM2->SR & SR_UIF)){}
 80002e2:	e7e5      	b.n	80002b0 <main+0x30>
 80002e4:	40023800 	.word	0x40023800
 80002e8:	40020000 	.word	0x40020000
 80002ec:	0800142c 	.word	0x0800142c

080002f0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	60f8      	str	r0, [r7, #12]
 80002f8:	60b9      	str	r1, [r7, #8]
 80002fa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fc:	2300      	movs	r3, #0
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	e00a      	b.n	8000318 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000302:	f3af 8000 	nop.w
 8000306:	4601      	mov	r1, r0
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	60ba      	str	r2, [r7, #8]
 800030e:	b2ca      	uxtb	r2, r1
 8000310:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000312:	697b      	ldr	r3, [r7, #20]
 8000314:	3301      	adds	r3, #1
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	697a      	ldr	r2, [r7, #20]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	429a      	cmp	r2, r3
 800031e:	dbf0      	blt.n	8000302 <_read+0x12>
	}

return len;
 8000320:	687b      	ldr	r3, [r7, #4]
}
 8000322:	4618      	mov	r0, r3
 8000324:	3718      	adds	r7, #24
 8000326:	46bd      	mov	sp, r7
 8000328:	bd80      	pop	{r7, pc}

0800032a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800032a:	b580      	push	{r7, lr}
 800032c:	b086      	sub	sp, #24
 800032e:	af00      	add	r7, sp, #0
 8000330:	60f8      	str	r0, [r7, #12]
 8000332:	60b9      	str	r1, [r7, #8]
 8000334:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	2300      	movs	r3, #0
 8000338:	617b      	str	r3, [r7, #20]
 800033a:	e009      	b.n	8000350 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	781b      	ldrb	r3, [r3, #0]
 8000344:	4618      	mov	r0, r3
 8000346:	f000 f88f 	bl	8000468 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf1      	blt.n	800033c <_write+0x12>
	}
	return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_close>:

int _close(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
	return -1;
 800036a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800036e:	4618      	mov	r0, r3
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr

0800037a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800037a:	b480      	push	{r7}
 800037c:	b083      	sub	sp, #12
 800037e:	af00      	add	r7, sp, #0
 8000380:	6078      	str	r0, [r7, #4]
 8000382:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000384:	683b      	ldr	r3, [r7, #0]
 8000386:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800038a:	605a      	str	r2, [r3, #4]
	return 0;
 800038c:	2300      	movs	r3, #0
}
 800038e:	4618      	mov	r0, r3
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr

0800039a <_isatty>:

int _isatty(int file)
{
 800039a:	b480      	push	{r7}
 800039c:	b083      	sub	sp, #12
 800039e:	af00      	add	r7, sp, #0
 80003a0:	6078      	str	r0, [r7, #4]
	return 1;
 80003a2:	2301      	movs	r3, #1
}
 80003a4:	4618      	mov	r0, r3
 80003a6:	370c      	adds	r7, #12
 80003a8:	46bd      	mov	sp, r7
 80003aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ae:	4770      	bx	lr

080003b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b085      	sub	sp, #20
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	60f8      	str	r0, [r7, #12]
 80003b8:	60b9      	str	r1, [r7, #8]
 80003ba:	607a      	str	r2, [r7, #4]
	return 0;
 80003bc:	2300      	movs	r3, #0
}
 80003be:	4618      	mov	r0, r3
 80003c0:	3714      	adds	r7, #20
 80003c2:	46bd      	mov	sp, r7
 80003c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c8:	4770      	bx	lr
	...

080003cc <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b084      	sub	sp, #16
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003d4:	4b11      	ldr	r3, [pc, #68]	; (800041c <_sbrk+0x50>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	2b00      	cmp	r3, #0
 80003da:	d102      	bne.n	80003e2 <_sbrk+0x16>
		heap_end = &end;
 80003dc:	4b0f      	ldr	r3, [pc, #60]	; (800041c <_sbrk+0x50>)
 80003de:	4a10      	ldr	r2, [pc, #64]	; (8000420 <_sbrk+0x54>)
 80003e0:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003e2:	4b0e      	ldr	r3, [pc, #56]	; (800041c <_sbrk+0x50>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003e8:	4b0c      	ldr	r3, [pc, #48]	; (800041c <_sbrk+0x50>)
 80003ea:	681a      	ldr	r2, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4413      	add	r3, r2
 80003f0:	466a      	mov	r2, sp
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d907      	bls.n	8000406 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003f6:	f000 f8f7 	bl	80005e8 <__errno>
 80003fa:	4602      	mov	r2, r0
 80003fc:	230c      	movs	r3, #12
 80003fe:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000400:	f04f 33ff 	mov.w	r3, #4294967295
 8000404:	e006      	b.n	8000414 <_sbrk+0x48>
	}

	heap_end += incr;
 8000406:	4b05      	ldr	r3, [pc, #20]	; (800041c <_sbrk+0x50>)
 8000408:	681a      	ldr	r2, [r3, #0]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4413      	add	r3, r2
 800040e:	4a03      	ldr	r2, [pc, #12]	; (800041c <_sbrk+0x50>)
 8000410:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000412:	68fb      	ldr	r3, [r7, #12]
}
 8000414:	4618      	mov	r0, r3
 8000416:	3710      	adds	r7, #16
 8000418:	46bd      	mov	sp, r7
 800041a:	bd80      	pop	{r7, pc}
 800041c:	20000080 	.word	0x20000080
 8000420:	20000090 	.word	0x20000090

08000424 <tim2_1hz_init>:
#define TIM2EN			(1U<<0)
#define CR1_CEN			(1U<<0)


void tim2_1hz_init(void)
{
 8000424:	b480      	push	{r7}
 8000426:	af00      	add	r7, sp, #0
	/*Enable clock access to Timer 2*/
	RCC->APB1ENR |= TIM2EN;
 8000428:	4b0e      	ldr	r3, [pc, #56]	; (8000464 <tim2_1hz_init+0x40>)
 800042a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800042c:	4a0d      	ldr	r2, [pc, #52]	; (8000464 <tim2_1hz_init+0x40>)
 800042e:	f043 0301 	orr.w	r3, r3, #1
 8000432:	6413      	str	r3, [r2, #64]	; 0x40
	/*Set prescaler value*/
	TIM2->PSC = 1600 - 1; // 16 000 000 / 1 600 = 10 000
 8000434:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000438:	f240 623f 	movw	r2, #1599	; 0x63f
 800043c:	629a      	str	r2, [r3, #40]	; 0x28
	/*Set auto-reload register*/
	TIM2->ARR = 10000-1; // 10 000 / 10 000 = 1
 800043e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000442:	f242 720f 	movw	r2, #9999	; 0x270f
 8000446:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Clear counter*/
	TIM2->CNT = 0;
 8000448:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800044c:	2200      	movs	r2, #0
 800044e:	625a      	str	r2, [r3, #36]	; 0x24
	/*Enable Timer*/
	TIM2->CR1 =  CR1_CEN;
 8000450:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000454:	2201      	movs	r2, #1
 8000456:	601a      	str	r2, [r3, #0]

}
 8000458:	bf00      	nop
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
 8000462:	bf00      	nop
 8000464:	40023800 	.word	0x40023800

08000468 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);
void uart2_write(int ch);


int __io_putchar(int ch)
{
 8000468:	b580      	push	{r7, lr}
 800046a:	b082      	sub	sp, #8
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000470:	6878      	ldr	r0, [r7, #4]
 8000472:	f000 f851 	bl	8000518 <uart2_write>
	return ch;
 8000476:	687b      	ldr	r3, [r7, #4]
}
 8000478:	4618      	mov	r0, r3
 800047a:	3708      	adds	r7, #8
 800047c:	46bd      	mov	sp, r7
 800047e:	bd80      	pop	{r7, pc}

08000480 <uart2_tx_init>:




void uart2_tx_init(void)
{
 8000480:	b580      	push	{r7, lr}
 8000482:	af00      	add	r7, sp, #0
	/*******************Configure UART GPIO pin*************************/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |=GPIOAEN;
 8000484:	4b20      	ldr	r3, [pc, #128]	; (8000508 <uart2_tx_init+0x88>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a1f      	ldr	r2, [pc, #124]	; (8000508 <uart2_tx_init+0x88>)
 800048a:	f043 0301 	orr.w	r3, r3, #1
 800048e:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);
 8000490:	4b1e      	ldr	r3, [pc, #120]	; (800050c <uart2_tx_init+0x8c>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	4a1d      	ldr	r2, [pc, #116]	; (800050c <uart2_tx_init+0x8c>)
 8000496:	f023 0310 	bic.w	r3, r3, #16
 800049a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<5);
 800049c:	4b1b      	ldr	r3, [pc, #108]	; (800050c <uart2_tx_init+0x8c>)
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	4a1a      	ldr	r2, [pc, #104]	; (800050c <uart2_tx_init+0x8c>)
 80004a2:	f043 0320 	orr.w	r3, r3, #32
 80004a6:	6013      	str	r3, [r2, #0]
	/*Set PA2 alternate function type to UART_TX (AF07) */
	GPIOA->AFR[0] |= (1U<<8);
 80004a8:	4b18      	ldr	r3, [pc, #96]	; (800050c <uart2_tx_init+0x8c>)
 80004aa:	6a1b      	ldr	r3, [r3, #32]
 80004ac:	4a17      	ldr	r2, [pc, #92]	; (800050c <uart2_tx_init+0x8c>)
 80004ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80004b2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 80004b4:	4b15      	ldr	r3, [pc, #84]	; (800050c <uart2_tx_init+0x8c>)
 80004b6:	6a1b      	ldr	r3, [r3, #32]
 80004b8:	4a14      	ldr	r2, [pc, #80]	; (800050c <uart2_tx_init+0x8c>)
 80004ba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80004be:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 80004c0:	4b12      	ldr	r3, [pc, #72]	; (800050c <uart2_tx_init+0x8c>)
 80004c2:	6a1b      	ldr	r3, [r3, #32]
 80004c4:	4a11      	ldr	r2, [pc, #68]	; (800050c <uart2_tx_init+0x8c>)
 80004c6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80004ca:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<11);
 80004cc:	4b0f      	ldr	r3, [pc, #60]	; (800050c <uart2_tx_init+0x8c>)
 80004ce:	6a1b      	ldr	r3, [r3, #32]
 80004d0:	4a0e      	ldr	r2, [pc, #56]	; (800050c <uart2_tx_init+0x8c>)
 80004d2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80004d6:	6213      	str	r3, [r2, #32]
	/*Set PA3 mode to alternate function mode*/
	/*Set PA3 alternate function type to UART_TX (AF07) */

	/****************************Configure UART module***********************************/
	/*Enable clock access to UART2*/
	RCC->APB1ENR |= UART2EN;
 80004d8:	4b0b      	ldr	r3, [pc, #44]	; (8000508 <uart2_tx_init+0x88>)
 80004da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80004dc:	4a0a      	ldr	r2, [pc, #40]	; (8000508 <uart2_tx_init+0x88>)
 80004de:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004e2:	6413      	str	r3, [r2, #64]	; 0x40
	/*Configure Baudrate*/
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 80004e4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80004e8:	4909      	ldr	r1, [pc, #36]	; (8000510 <uart2_tx_init+0x90>)
 80004ea:	480a      	ldr	r0, [pc, #40]	; (8000514 <uart2_tx_init+0x94>)
 80004ec:	f000 f82c 	bl	8000548 <uart_set_baudrate>
	/*Configure the transfer direction*/
	USART2->CR1 = CR1_TE;
 80004f0:	4b08      	ldr	r3, [pc, #32]	; (8000514 <uart2_tx_init+0x94>)
 80004f2:	2208      	movs	r2, #8
 80004f4:	60da      	str	r2, [r3, #12]

	/*Enable UART module*/
	USART2->CR1 |= CR1_UE;
 80004f6:	4b07      	ldr	r3, [pc, #28]	; (8000514 <uart2_tx_init+0x94>)
 80004f8:	68db      	ldr	r3, [r3, #12]
 80004fa:	4a06      	ldr	r2, [pc, #24]	; (8000514 <uart2_tx_init+0x94>)
 80004fc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000500:	60d3      	str	r3, [r2, #12]
}
 8000502:	bf00      	nop
 8000504:	bd80      	pop	{r7, pc}
 8000506:	bf00      	nop
 8000508:	40023800 	.word	0x40023800
 800050c:	40020000 	.word	0x40020000
 8000510:	00f42400 	.word	0x00f42400
 8000514:	40004400 	.word	0x40004400

08000518 <uart2_write>:

}


void uart2_write(int ch)
{
 8000518:	b480      	push	{r7}
 800051a:	b083      	sub	sp, #12
 800051c:	af00      	add	r7, sp, #0
 800051e:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 8000520:	bf00      	nop
 8000522:	4b08      	ldr	r3, [pc, #32]	; (8000544 <uart2_write+0x2c>)
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800052a:	2b00      	cmp	r3, #0
 800052c:	d0f9      	beq.n	8000522 <uart2_write+0xa>
	/*Write to transmit data register*/

	USART2->DR= (ch & 0xFF);
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	4a04      	ldr	r2, [pc, #16]	; (8000544 <uart2_write+0x2c>)
 8000532:	b2db      	uxtb	r3, r3
 8000534:	6053      	str	r3, [r2, #4]
}
 8000536:	bf00      	nop
 8000538:	370c      	adds	r7, #12
 800053a:	46bd      	mov	sp, r7
 800053c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000540:	4770      	bx	lr
 8000542:	bf00      	nop
 8000544:	40004400 	.word	0x40004400

08000548 <uart_set_baudrate>:
static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk,uint32_t BaudRate)
{
 8000548:	b580      	push	{r7, lr}
 800054a:	b084      	sub	sp, #16
 800054c:	af00      	add	r7, sp, #0
 800054e:	60f8      	str	r0, [r7, #12]
 8000550:	60b9      	str	r1, [r7, #8]
 8000552:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 8000554:	6879      	ldr	r1, [r7, #4]
 8000556:	68b8      	ldr	r0, [r7, #8]
 8000558:	f000 f808 	bl	800056c <compute_uart_bd>
 800055c:	4603      	mov	r3, r0
 800055e:	461a      	mov	r2, r3
 8000560:	68fb      	ldr	r3, [r7, #12]
 8000562:	609a      	str	r2, [r3, #8]
}
 8000564:	bf00      	nop
 8000566:	3710      	adds	r7, #16
 8000568:	46bd      	mov	sp, r7
 800056a:	bd80      	pop	{r7, pc}

0800056c <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 800056c:	b480      	push	{r7}
 800056e:	b083      	sub	sp, #12
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
 8000574:	6039      	str	r1, [r7, #0]
	return((PeriphClk + (BaudRate/2U))/BaudRate);
 8000576:	683b      	ldr	r3, [r7, #0]
 8000578:	085a      	lsrs	r2, r3, #1
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	441a      	add	r2, r3
 800057e:	683b      	ldr	r3, [r7, #0]
 8000580:	fbb2 f3f3 	udiv	r3, r2, r3
 8000584:	b29b      	uxth	r3, r3
}
 8000586:	4618      	mov	r0, r3
 8000588:	370c      	adds	r7, #12
 800058a:	46bd      	mov	sp, r7
 800058c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000590:	4770      	bx	lr
	...

08000594 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000594:	480d      	ldr	r0, [pc, #52]	; (80005cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000596:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000598:	480d      	ldr	r0, [pc, #52]	; (80005d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800059a:	490e      	ldr	r1, [pc, #56]	; (80005d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800059c:	4a0e      	ldr	r2, [pc, #56]	; (80005d8 <LoopForever+0xe>)
  movs r3, #0
 800059e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005a0:	e002      	b.n	80005a8 <LoopCopyDataInit>

080005a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005a6:	3304      	adds	r3, #4

080005a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005ac:	d3f9      	bcc.n	80005a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80005b0:	4c0b      	ldr	r4, [pc, #44]	; (80005e0 <LoopForever+0x16>)
  movs r3, #0
 80005b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005b4:	e001      	b.n	80005ba <LoopFillZerobss>

080005b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005b8:	3204      	adds	r2, #4

080005ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005bc:	d3fb      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005be:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80005c2:	f000 f817 	bl	80005f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005c6:	f7ff fe5b 	bl	8000280 <main>

080005ca <LoopForever>:

LoopForever:
    b LoopForever
 80005ca:	e7fe      	b.n	80005ca <LoopForever>
  ldr   r0, =_estack
 80005cc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005d4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005d8:	080014e8 	.word	0x080014e8
  ldr r2, =_sbss
 80005dc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005e0:	20000090 	.word	0x20000090

080005e4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>
	...

080005e8 <__errno>:
 80005e8:	4b01      	ldr	r3, [pc, #4]	; (80005f0 <__errno+0x8>)
 80005ea:	6818      	ldr	r0, [r3, #0]
 80005ec:	4770      	bx	lr
 80005ee:	bf00      	nop
 80005f0:	20000000 	.word	0x20000000

080005f4 <__libc_init_array>:
 80005f4:	b570      	push	{r4, r5, r6, lr}
 80005f6:	4e0d      	ldr	r6, [pc, #52]	; (800062c <__libc_init_array+0x38>)
 80005f8:	4c0d      	ldr	r4, [pc, #52]	; (8000630 <__libc_init_array+0x3c>)
 80005fa:	1ba4      	subs	r4, r4, r6
 80005fc:	10a4      	asrs	r4, r4, #2
 80005fe:	2500      	movs	r5, #0
 8000600:	42a5      	cmp	r5, r4
 8000602:	d109      	bne.n	8000618 <__libc_init_array+0x24>
 8000604:	4e0b      	ldr	r6, [pc, #44]	; (8000634 <__libc_init_array+0x40>)
 8000606:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <__libc_init_array+0x44>)
 8000608:	f000 ff04 	bl	8001414 <_init>
 800060c:	1ba4      	subs	r4, r4, r6
 800060e:	10a4      	asrs	r4, r4, #2
 8000610:	2500      	movs	r5, #0
 8000612:	42a5      	cmp	r5, r4
 8000614:	d105      	bne.n	8000622 <__libc_init_array+0x2e>
 8000616:	bd70      	pop	{r4, r5, r6, pc}
 8000618:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800061c:	4798      	blx	r3
 800061e:	3501      	adds	r5, #1
 8000620:	e7ee      	b.n	8000600 <__libc_init_array+0xc>
 8000622:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000626:	4798      	blx	r3
 8000628:	3501      	adds	r5, #1
 800062a:	e7f2      	b.n	8000612 <__libc_init_array+0x1e>
 800062c:	080014e0 	.word	0x080014e0
 8000630:	080014e0 	.word	0x080014e0
 8000634:	080014e0 	.word	0x080014e0
 8000638:	080014e4 	.word	0x080014e4

0800063c <memset>:
 800063c:	4402      	add	r2, r0
 800063e:	4603      	mov	r3, r0
 8000640:	4293      	cmp	r3, r2
 8000642:	d100      	bne.n	8000646 <memset+0xa>
 8000644:	4770      	bx	lr
 8000646:	f803 1b01 	strb.w	r1, [r3], #1
 800064a:	e7f9      	b.n	8000640 <memset+0x4>

0800064c <iprintf>:
 800064c:	b40f      	push	{r0, r1, r2, r3}
 800064e:	4b0a      	ldr	r3, [pc, #40]	; (8000678 <iprintf+0x2c>)
 8000650:	b513      	push	{r0, r1, r4, lr}
 8000652:	681c      	ldr	r4, [r3, #0]
 8000654:	b124      	cbz	r4, 8000660 <iprintf+0x14>
 8000656:	69a3      	ldr	r3, [r4, #24]
 8000658:	b913      	cbnz	r3, 8000660 <iprintf+0x14>
 800065a:	4620      	mov	r0, r4
 800065c:	f000 f84e 	bl	80006fc <__sinit>
 8000660:	ab05      	add	r3, sp, #20
 8000662:	9a04      	ldr	r2, [sp, #16]
 8000664:	68a1      	ldr	r1, [r4, #8]
 8000666:	9301      	str	r3, [sp, #4]
 8000668:	4620      	mov	r0, r4
 800066a:	f000 f955 	bl	8000918 <_vfiprintf_r>
 800066e:	b002      	add	sp, #8
 8000670:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000674:	b004      	add	sp, #16
 8000676:	4770      	bx	lr
 8000678:	20000000 	.word	0x20000000

0800067c <std>:
 800067c:	2300      	movs	r3, #0
 800067e:	b510      	push	{r4, lr}
 8000680:	4604      	mov	r4, r0
 8000682:	e9c0 3300 	strd	r3, r3, [r0]
 8000686:	6083      	str	r3, [r0, #8]
 8000688:	8181      	strh	r1, [r0, #12]
 800068a:	6643      	str	r3, [r0, #100]	; 0x64
 800068c:	81c2      	strh	r2, [r0, #14]
 800068e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000692:	6183      	str	r3, [r0, #24]
 8000694:	4619      	mov	r1, r3
 8000696:	2208      	movs	r2, #8
 8000698:	305c      	adds	r0, #92	; 0x5c
 800069a:	f7ff ffcf 	bl	800063c <memset>
 800069e:	4b05      	ldr	r3, [pc, #20]	; (80006b4 <std+0x38>)
 80006a0:	6263      	str	r3, [r4, #36]	; 0x24
 80006a2:	4b05      	ldr	r3, [pc, #20]	; (80006b8 <std+0x3c>)
 80006a4:	62a3      	str	r3, [r4, #40]	; 0x28
 80006a6:	4b05      	ldr	r3, [pc, #20]	; (80006bc <std+0x40>)
 80006a8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006aa:	4b05      	ldr	r3, [pc, #20]	; (80006c0 <std+0x44>)
 80006ac:	6224      	str	r4, [r4, #32]
 80006ae:	6323      	str	r3, [r4, #48]	; 0x30
 80006b0:	bd10      	pop	{r4, pc}
 80006b2:	bf00      	nop
 80006b4:	08000e75 	.word	0x08000e75
 80006b8:	08000e97 	.word	0x08000e97
 80006bc:	08000ecf 	.word	0x08000ecf
 80006c0:	08000ef3 	.word	0x08000ef3

080006c4 <_cleanup_r>:
 80006c4:	4901      	ldr	r1, [pc, #4]	; (80006cc <_cleanup_r+0x8>)
 80006c6:	f000 b885 	b.w	80007d4 <_fwalk_reent>
 80006ca:	bf00      	nop
 80006cc:	080011cd 	.word	0x080011cd

080006d0 <__sfmoreglue>:
 80006d0:	b570      	push	{r4, r5, r6, lr}
 80006d2:	1e4a      	subs	r2, r1, #1
 80006d4:	2568      	movs	r5, #104	; 0x68
 80006d6:	4355      	muls	r5, r2
 80006d8:	460e      	mov	r6, r1
 80006da:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006de:	f000 f897 	bl	8000810 <_malloc_r>
 80006e2:	4604      	mov	r4, r0
 80006e4:	b140      	cbz	r0, 80006f8 <__sfmoreglue+0x28>
 80006e6:	2100      	movs	r1, #0
 80006e8:	e9c0 1600 	strd	r1, r6, [r0]
 80006ec:	300c      	adds	r0, #12
 80006ee:	60a0      	str	r0, [r4, #8]
 80006f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006f4:	f7ff ffa2 	bl	800063c <memset>
 80006f8:	4620      	mov	r0, r4
 80006fa:	bd70      	pop	{r4, r5, r6, pc}

080006fc <__sinit>:
 80006fc:	6983      	ldr	r3, [r0, #24]
 80006fe:	b510      	push	{r4, lr}
 8000700:	4604      	mov	r4, r0
 8000702:	bb33      	cbnz	r3, 8000752 <__sinit+0x56>
 8000704:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000708:	6503      	str	r3, [r0, #80]	; 0x50
 800070a:	4b12      	ldr	r3, [pc, #72]	; (8000754 <__sinit+0x58>)
 800070c:	4a12      	ldr	r2, [pc, #72]	; (8000758 <__sinit+0x5c>)
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	6282      	str	r2, [r0, #40]	; 0x28
 8000712:	4298      	cmp	r0, r3
 8000714:	bf04      	itt	eq
 8000716:	2301      	moveq	r3, #1
 8000718:	6183      	streq	r3, [r0, #24]
 800071a:	f000 f81f 	bl	800075c <__sfp>
 800071e:	6060      	str	r0, [r4, #4]
 8000720:	4620      	mov	r0, r4
 8000722:	f000 f81b 	bl	800075c <__sfp>
 8000726:	60a0      	str	r0, [r4, #8]
 8000728:	4620      	mov	r0, r4
 800072a:	f000 f817 	bl	800075c <__sfp>
 800072e:	2200      	movs	r2, #0
 8000730:	60e0      	str	r0, [r4, #12]
 8000732:	2104      	movs	r1, #4
 8000734:	6860      	ldr	r0, [r4, #4]
 8000736:	f7ff ffa1 	bl	800067c <std>
 800073a:	2201      	movs	r2, #1
 800073c:	2109      	movs	r1, #9
 800073e:	68a0      	ldr	r0, [r4, #8]
 8000740:	f7ff ff9c 	bl	800067c <std>
 8000744:	2202      	movs	r2, #2
 8000746:	2112      	movs	r1, #18
 8000748:	68e0      	ldr	r0, [r4, #12]
 800074a:	f7ff ff97 	bl	800067c <std>
 800074e:	2301      	movs	r3, #1
 8000750:	61a3      	str	r3, [r4, #24]
 8000752:	bd10      	pop	{r4, pc}
 8000754:	08001448 	.word	0x08001448
 8000758:	080006c5 	.word	0x080006c5

0800075c <__sfp>:
 800075c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800075e:	4b1b      	ldr	r3, [pc, #108]	; (80007cc <__sfp+0x70>)
 8000760:	681e      	ldr	r6, [r3, #0]
 8000762:	69b3      	ldr	r3, [r6, #24]
 8000764:	4607      	mov	r7, r0
 8000766:	b913      	cbnz	r3, 800076e <__sfp+0x12>
 8000768:	4630      	mov	r0, r6
 800076a:	f7ff ffc7 	bl	80006fc <__sinit>
 800076e:	3648      	adds	r6, #72	; 0x48
 8000770:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000774:	3b01      	subs	r3, #1
 8000776:	d503      	bpl.n	8000780 <__sfp+0x24>
 8000778:	6833      	ldr	r3, [r6, #0]
 800077a:	b133      	cbz	r3, 800078a <__sfp+0x2e>
 800077c:	6836      	ldr	r6, [r6, #0]
 800077e:	e7f7      	b.n	8000770 <__sfp+0x14>
 8000780:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000784:	b16d      	cbz	r5, 80007a2 <__sfp+0x46>
 8000786:	3468      	adds	r4, #104	; 0x68
 8000788:	e7f4      	b.n	8000774 <__sfp+0x18>
 800078a:	2104      	movs	r1, #4
 800078c:	4638      	mov	r0, r7
 800078e:	f7ff ff9f 	bl	80006d0 <__sfmoreglue>
 8000792:	6030      	str	r0, [r6, #0]
 8000794:	2800      	cmp	r0, #0
 8000796:	d1f1      	bne.n	800077c <__sfp+0x20>
 8000798:	230c      	movs	r3, #12
 800079a:	603b      	str	r3, [r7, #0]
 800079c:	4604      	mov	r4, r0
 800079e:	4620      	mov	r0, r4
 80007a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007a2:	4b0b      	ldr	r3, [pc, #44]	; (80007d0 <__sfp+0x74>)
 80007a4:	6665      	str	r5, [r4, #100]	; 0x64
 80007a6:	e9c4 5500 	strd	r5, r5, [r4]
 80007aa:	60a5      	str	r5, [r4, #8]
 80007ac:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80007b0:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80007b4:	2208      	movs	r2, #8
 80007b6:	4629      	mov	r1, r5
 80007b8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007bc:	f7ff ff3e 	bl	800063c <memset>
 80007c0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007c4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007c8:	e7e9      	b.n	800079e <__sfp+0x42>
 80007ca:	bf00      	nop
 80007cc:	08001448 	.word	0x08001448
 80007d0:	ffff0001 	.word	0xffff0001

080007d4 <_fwalk_reent>:
 80007d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007d8:	4680      	mov	r8, r0
 80007da:	4689      	mov	r9, r1
 80007dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007e0:	2600      	movs	r6, #0
 80007e2:	b914      	cbnz	r4, 80007ea <_fwalk_reent+0x16>
 80007e4:	4630      	mov	r0, r6
 80007e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007ea:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80007ee:	3f01      	subs	r7, #1
 80007f0:	d501      	bpl.n	80007f6 <_fwalk_reent+0x22>
 80007f2:	6824      	ldr	r4, [r4, #0]
 80007f4:	e7f5      	b.n	80007e2 <_fwalk_reent+0xe>
 80007f6:	89ab      	ldrh	r3, [r5, #12]
 80007f8:	2b01      	cmp	r3, #1
 80007fa:	d907      	bls.n	800080c <_fwalk_reent+0x38>
 80007fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000800:	3301      	adds	r3, #1
 8000802:	d003      	beq.n	800080c <_fwalk_reent+0x38>
 8000804:	4629      	mov	r1, r5
 8000806:	4640      	mov	r0, r8
 8000808:	47c8      	blx	r9
 800080a:	4306      	orrs	r6, r0
 800080c:	3568      	adds	r5, #104	; 0x68
 800080e:	e7ee      	b.n	80007ee <_fwalk_reent+0x1a>

08000810 <_malloc_r>:
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	1ccd      	adds	r5, r1, #3
 8000814:	f025 0503 	bic.w	r5, r5, #3
 8000818:	3508      	adds	r5, #8
 800081a:	2d0c      	cmp	r5, #12
 800081c:	bf38      	it	cc
 800081e:	250c      	movcc	r5, #12
 8000820:	2d00      	cmp	r5, #0
 8000822:	4606      	mov	r6, r0
 8000824:	db01      	blt.n	800082a <_malloc_r+0x1a>
 8000826:	42a9      	cmp	r1, r5
 8000828:	d903      	bls.n	8000832 <_malloc_r+0x22>
 800082a:	230c      	movs	r3, #12
 800082c:	6033      	str	r3, [r6, #0]
 800082e:	2000      	movs	r0, #0
 8000830:	bd70      	pop	{r4, r5, r6, pc}
 8000832:	f000 fd6b 	bl	800130c <__malloc_lock>
 8000836:	4a21      	ldr	r2, [pc, #132]	; (80008bc <_malloc_r+0xac>)
 8000838:	6814      	ldr	r4, [r2, #0]
 800083a:	4621      	mov	r1, r4
 800083c:	b991      	cbnz	r1, 8000864 <_malloc_r+0x54>
 800083e:	4c20      	ldr	r4, [pc, #128]	; (80008c0 <_malloc_r+0xb0>)
 8000840:	6823      	ldr	r3, [r4, #0]
 8000842:	b91b      	cbnz	r3, 800084c <_malloc_r+0x3c>
 8000844:	4630      	mov	r0, r6
 8000846:	f000 fb05 	bl	8000e54 <_sbrk_r>
 800084a:	6020      	str	r0, [r4, #0]
 800084c:	4629      	mov	r1, r5
 800084e:	4630      	mov	r0, r6
 8000850:	f000 fb00 	bl	8000e54 <_sbrk_r>
 8000854:	1c43      	adds	r3, r0, #1
 8000856:	d124      	bne.n	80008a2 <_malloc_r+0x92>
 8000858:	230c      	movs	r3, #12
 800085a:	6033      	str	r3, [r6, #0]
 800085c:	4630      	mov	r0, r6
 800085e:	f000 fd56 	bl	800130e <__malloc_unlock>
 8000862:	e7e4      	b.n	800082e <_malloc_r+0x1e>
 8000864:	680b      	ldr	r3, [r1, #0]
 8000866:	1b5b      	subs	r3, r3, r5
 8000868:	d418      	bmi.n	800089c <_malloc_r+0x8c>
 800086a:	2b0b      	cmp	r3, #11
 800086c:	d90f      	bls.n	800088e <_malloc_r+0x7e>
 800086e:	600b      	str	r3, [r1, #0]
 8000870:	50cd      	str	r5, [r1, r3]
 8000872:	18cc      	adds	r4, r1, r3
 8000874:	4630      	mov	r0, r6
 8000876:	f000 fd4a 	bl	800130e <__malloc_unlock>
 800087a:	f104 000b 	add.w	r0, r4, #11
 800087e:	1d23      	adds	r3, r4, #4
 8000880:	f020 0007 	bic.w	r0, r0, #7
 8000884:	1ac3      	subs	r3, r0, r3
 8000886:	d0d3      	beq.n	8000830 <_malloc_r+0x20>
 8000888:	425a      	negs	r2, r3
 800088a:	50e2      	str	r2, [r4, r3]
 800088c:	e7d0      	b.n	8000830 <_malloc_r+0x20>
 800088e:	428c      	cmp	r4, r1
 8000890:	684b      	ldr	r3, [r1, #4]
 8000892:	bf16      	itet	ne
 8000894:	6063      	strne	r3, [r4, #4]
 8000896:	6013      	streq	r3, [r2, #0]
 8000898:	460c      	movne	r4, r1
 800089a:	e7eb      	b.n	8000874 <_malloc_r+0x64>
 800089c:	460c      	mov	r4, r1
 800089e:	6849      	ldr	r1, [r1, #4]
 80008a0:	e7cc      	b.n	800083c <_malloc_r+0x2c>
 80008a2:	1cc4      	adds	r4, r0, #3
 80008a4:	f024 0403 	bic.w	r4, r4, #3
 80008a8:	42a0      	cmp	r0, r4
 80008aa:	d005      	beq.n	80008b8 <_malloc_r+0xa8>
 80008ac:	1a21      	subs	r1, r4, r0
 80008ae:	4630      	mov	r0, r6
 80008b0:	f000 fad0 	bl	8000e54 <_sbrk_r>
 80008b4:	3001      	adds	r0, #1
 80008b6:	d0cf      	beq.n	8000858 <_malloc_r+0x48>
 80008b8:	6025      	str	r5, [r4, #0]
 80008ba:	e7db      	b.n	8000874 <_malloc_r+0x64>
 80008bc:	20000084 	.word	0x20000084
 80008c0:	20000088 	.word	0x20000088

080008c4 <__sfputc_r>:
 80008c4:	6893      	ldr	r3, [r2, #8]
 80008c6:	3b01      	subs	r3, #1
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	b410      	push	{r4}
 80008cc:	6093      	str	r3, [r2, #8]
 80008ce:	da08      	bge.n	80008e2 <__sfputc_r+0x1e>
 80008d0:	6994      	ldr	r4, [r2, #24]
 80008d2:	42a3      	cmp	r3, r4
 80008d4:	db01      	blt.n	80008da <__sfputc_r+0x16>
 80008d6:	290a      	cmp	r1, #10
 80008d8:	d103      	bne.n	80008e2 <__sfputc_r+0x1e>
 80008da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008de:	f000 bb0d 	b.w	8000efc <__swbuf_r>
 80008e2:	6813      	ldr	r3, [r2, #0]
 80008e4:	1c58      	adds	r0, r3, #1
 80008e6:	6010      	str	r0, [r2, #0]
 80008e8:	7019      	strb	r1, [r3, #0]
 80008ea:	4608      	mov	r0, r1
 80008ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008f0:	4770      	bx	lr

080008f2 <__sfputs_r>:
 80008f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f4:	4606      	mov	r6, r0
 80008f6:	460f      	mov	r7, r1
 80008f8:	4614      	mov	r4, r2
 80008fa:	18d5      	adds	r5, r2, r3
 80008fc:	42ac      	cmp	r4, r5
 80008fe:	d101      	bne.n	8000904 <__sfputs_r+0x12>
 8000900:	2000      	movs	r0, #0
 8000902:	e007      	b.n	8000914 <__sfputs_r+0x22>
 8000904:	463a      	mov	r2, r7
 8000906:	f814 1b01 	ldrb.w	r1, [r4], #1
 800090a:	4630      	mov	r0, r6
 800090c:	f7ff ffda 	bl	80008c4 <__sfputc_r>
 8000910:	1c43      	adds	r3, r0, #1
 8000912:	d1f3      	bne.n	80008fc <__sfputs_r+0xa>
 8000914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000918 <_vfiprintf_r>:
 8000918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800091c:	460c      	mov	r4, r1
 800091e:	b09d      	sub	sp, #116	; 0x74
 8000920:	4617      	mov	r7, r2
 8000922:	461d      	mov	r5, r3
 8000924:	4606      	mov	r6, r0
 8000926:	b118      	cbz	r0, 8000930 <_vfiprintf_r+0x18>
 8000928:	6983      	ldr	r3, [r0, #24]
 800092a:	b90b      	cbnz	r3, 8000930 <_vfiprintf_r+0x18>
 800092c:	f7ff fee6 	bl	80006fc <__sinit>
 8000930:	4b7c      	ldr	r3, [pc, #496]	; (8000b24 <_vfiprintf_r+0x20c>)
 8000932:	429c      	cmp	r4, r3
 8000934:	d158      	bne.n	80009e8 <_vfiprintf_r+0xd0>
 8000936:	6874      	ldr	r4, [r6, #4]
 8000938:	89a3      	ldrh	r3, [r4, #12]
 800093a:	0718      	lsls	r0, r3, #28
 800093c:	d55e      	bpl.n	80009fc <_vfiprintf_r+0xe4>
 800093e:	6923      	ldr	r3, [r4, #16]
 8000940:	2b00      	cmp	r3, #0
 8000942:	d05b      	beq.n	80009fc <_vfiprintf_r+0xe4>
 8000944:	2300      	movs	r3, #0
 8000946:	9309      	str	r3, [sp, #36]	; 0x24
 8000948:	2320      	movs	r3, #32
 800094a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800094e:	2330      	movs	r3, #48	; 0x30
 8000950:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000954:	9503      	str	r5, [sp, #12]
 8000956:	f04f 0b01 	mov.w	fp, #1
 800095a:	46b8      	mov	r8, r7
 800095c:	4645      	mov	r5, r8
 800095e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000962:	b10b      	cbz	r3, 8000968 <_vfiprintf_r+0x50>
 8000964:	2b25      	cmp	r3, #37	; 0x25
 8000966:	d154      	bne.n	8000a12 <_vfiprintf_r+0xfa>
 8000968:	ebb8 0a07 	subs.w	sl, r8, r7
 800096c:	d00b      	beq.n	8000986 <_vfiprintf_r+0x6e>
 800096e:	4653      	mov	r3, sl
 8000970:	463a      	mov	r2, r7
 8000972:	4621      	mov	r1, r4
 8000974:	4630      	mov	r0, r6
 8000976:	f7ff ffbc 	bl	80008f2 <__sfputs_r>
 800097a:	3001      	adds	r0, #1
 800097c:	f000 80c2 	beq.w	8000b04 <_vfiprintf_r+0x1ec>
 8000980:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000982:	4453      	add	r3, sl
 8000984:	9309      	str	r3, [sp, #36]	; 0x24
 8000986:	f898 3000 	ldrb.w	r3, [r8]
 800098a:	2b00      	cmp	r3, #0
 800098c:	f000 80ba 	beq.w	8000b04 <_vfiprintf_r+0x1ec>
 8000990:	2300      	movs	r3, #0
 8000992:	f04f 32ff 	mov.w	r2, #4294967295
 8000996:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800099a:	9304      	str	r3, [sp, #16]
 800099c:	9307      	str	r3, [sp, #28]
 800099e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80009a2:	931a      	str	r3, [sp, #104]	; 0x68
 80009a4:	46a8      	mov	r8, r5
 80009a6:	2205      	movs	r2, #5
 80009a8:	f818 1b01 	ldrb.w	r1, [r8], #1
 80009ac:	485e      	ldr	r0, [pc, #376]	; (8000b28 <_vfiprintf_r+0x210>)
 80009ae:	f7ff fc17 	bl	80001e0 <memchr>
 80009b2:	9b04      	ldr	r3, [sp, #16]
 80009b4:	bb78      	cbnz	r0, 8000a16 <_vfiprintf_r+0xfe>
 80009b6:	06d9      	lsls	r1, r3, #27
 80009b8:	bf44      	itt	mi
 80009ba:	2220      	movmi	r2, #32
 80009bc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80009c0:	071a      	lsls	r2, r3, #28
 80009c2:	bf44      	itt	mi
 80009c4:	222b      	movmi	r2, #43	; 0x2b
 80009c6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80009ca:	782a      	ldrb	r2, [r5, #0]
 80009cc:	2a2a      	cmp	r2, #42	; 0x2a
 80009ce:	d02a      	beq.n	8000a26 <_vfiprintf_r+0x10e>
 80009d0:	9a07      	ldr	r2, [sp, #28]
 80009d2:	46a8      	mov	r8, r5
 80009d4:	2000      	movs	r0, #0
 80009d6:	250a      	movs	r5, #10
 80009d8:	4641      	mov	r1, r8
 80009da:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009de:	3b30      	subs	r3, #48	; 0x30
 80009e0:	2b09      	cmp	r3, #9
 80009e2:	d969      	bls.n	8000ab8 <_vfiprintf_r+0x1a0>
 80009e4:	b360      	cbz	r0, 8000a40 <_vfiprintf_r+0x128>
 80009e6:	e024      	b.n	8000a32 <_vfiprintf_r+0x11a>
 80009e8:	4b50      	ldr	r3, [pc, #320]	; (8000b2c <_vfiprintf_r+0x214>)
 80009ea:	429c      	cmp	r4, r3
 80009ec:	d101      	bne.n	80009f2 <_vfiprintf_r+0xda>
 80009ee:	68b4      	ldr	r4, [r6, #8]
 80009f0:	e7a2      	b.n	8000938 <_vfiprintf_r+0x20>
 80009f2:	4b4f      	ldr	r3, [pc, #316]	; (8000b30 <_vfiprintf_r+0x218>)
 80009f4:	429c      	cmp	r4, r3
 80009f6:	bf08      	it	eq
 80009f8:	68f4      	ldreq	r4, [r6, #12]
 80009fa:	e79d      	b.n	8000938 <_vfiprintf_r+0x20>
 80009fc:	4621      	mov	r1, r4
 80009fe:	4630      	mov	r0, r6
 8000a00:	f000 fae0 	bl	8000fc4 <__swsetup_r>
 8000a04:	2800      	cmp	r0, #0
 8000a06:	d09d      	beq.n	8000944 <_vfiprintf_r+0x2c>
 8000a08:	f04f 30ff 	mov.w	r0, #4294967295
 8000a0c:	b01d      	add	sp, #116	; 0x74
 8000a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a12:	46a8      	mov	r8, r5
 8000a14:	e7a2      	b.n	800095c <_vfiprintf_r+0x44>
 8000a16:	4a44      	ldr	r2, [pc, #272]	; (8000b28 <_vfiprintf_r+0x210>)
 8000a18:	1a80      	subs	r0, r0, r2
 8000a1a:	fa0b f000 	lsl.w	r0, fp, r0
 8000a1e:	4318      	orrs	r0, r3
 8000a20:	9004      	str	r0, [sp, #16]
 8000a22:	4645      	mov	r5, r8
 8000a24:	e7be      	b.n	80009a4 <_vfiprintf_r+0x8c>
 8000a26:	9a03      	ldr	r2, [sp, #12]
 8000a28:	1d11      	adds	r1, r2, #4
 8000a2a:	6812      	ldr	r2, [r2, #0]
 8000a2c:	9103      	str	r1, [sp, #12]
 8000a2e:	2a00      	cmp	r2, #0
 8000a30:	db01      	blt.n	8000a36 <_vfiprintf_r+0x11e>
 8000a32:	9207      	str	r2, [sp, #28]
 8000a34:	e004      	b.n	8000a40 <_vfiprintf_r+0x128>
 8000a36:	4252      	negs	r2, r2
 8000a38:	f043 0302 	orr.w	r3, r3, #2
 8000a3c:	9207      	str	r2, [sp, #28]
 8000a3e:	9304      	str	r3, [sp, #16]
 8000a40:	f898 3000 	ldrb.w	r3, [r8]
 8000a44:	2b2e      	cmp	r3, #46	; 0x2e
 8000a46:	d10e      	bne.n	8000a66 <_vfiprintf_r+0x14e>
 8000a48:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000a4c:	2b2a      	cmp	r3, #42	; 0x2a
 8000a4e:	d138      	bne.n	8000ac2 <_vfiprintf_r+0x1aa>
 8000a50:	9b03      	ldr	r3, [sp, #12]
 8000a52:	1d1a      	adds	r2, r3, #4
 8000a54:	681b      	ldr	r3, [r3, #0]
 8000a56:	9203      	str	r2, [sp, #12]
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	bfb8      	it	lt
 8000a5c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a60:	f108 0802 	add.w	r8, r8, #2
 8000a64:	9305      	str	r3, [sp, #20]
 8000a66:	4d33      	ldr	r5, [pc, #204]	; (8000b34 <_vfiprintf_r+0x21c>)
 8000a68:	f898 1000 	ldrb.w	r1, [r8]
 8000a6c:	2203      	movs	r2, #3
 8000a6e:	4628      	mov	r0, r5
 8000a70:	f7ff fbb6 	bl	80001e0 <memchr>
 8000a74:	b140      	cbz	r0, 8000a88 <_vfiprintf_r+0x170>
 8000a76:	2340      	movs	r3, #64	; 0x40
 8000a78:	1b40      	subs	r0, r0, r5
 8000a7a:	fa03 f000 	lsl.w	r0, r3, r0
 8000a7e:	9b04      	ldr	r3, [sp, #16]
 8000a80:	4303      	orrs	r3, r0
 8000a82:	f108 0801 	add.w	r8, r8, #1
 8000a86:	9304      	str	r3, [sp, #16]
 8000a88:	f898 1000 	ldrb.w	r1, [r8]
 8000a8c:	482a      	ldr	r0, [pc, #168]	; (8000b38 <_vfiprintf_r+0x220>)
 8000a8e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a92:	2206      	movs	r2, #6
 8000a94:	f108 0701 	add.w	r7, r8, #1
 8000a98:	f7ff fba2 	bl	80001e0 <memchr>
 8000a9c:	2800      	cmp	r0, #0
 8000a9e:	d037      	beq.n	8000b10 <_vfiprintf_r+0x1f8>
 8000aa0:	4b26      	ldr	r3, [pc, #152]	; (8000b3c <_vfiprintf_r+0x224>)
 8000aa2:	bb1b      	cbnz	r3, 8000aec <_vfiprintf_r+0x1d4>
 8000aa4:	9b03      	ldr	r3, [sp, #12]
 8000aa6:	3307      	adds	r3, #7
 8000aa8:	f023 0307 	bic.w	r3, r3, #7
 8000aac:	3308      	adds	r3, #8
 8000aae:	9303      	str	r3, [sp, #12]
 8000ab0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ab2:	444b      	add	r3, r9
 8000ab4:	9309      	str	r3, [sp, #36]	; 0x24
 8000ab6:	e750      	b.n	800095a <_vfiprintf_r+0x42>
 8000ab8:	fb05 3202 	mla	r2, r5, r2, r3
 8000abc:	2001      	movs	r0, #1
 8000abe:	4688      	mov	r8, r1
 8000ac0:	e78a      	b.n	80009d8 <_vfiprintf_r+0xc0>
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	f108 0801 	add.w	r8, r8, #1
 8000ac8:	9305      	str	r3, [sp, #20]
 8000aca:	4619      	mov	r1, r3
 8000acc:	250a      	movs	r5, #10
 8000ace:	4640      	mov	r0, r8
 8000ad0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ad4:	3a30      	subs	r2, #48	; 0x30
 8000ad6:	2a09      	cmp	r2, #9
 8000ad8:	d903      	bls.n	8000ae2 <_vfiprintf_r+0x1ca>
 8000ada:	2b00      	cmp	r3, #0
 8000adc:	d0c3      	beq.n	8000a66 <_vfiprintf_r+0x14e>
 8000ade:	9105      	str	r1, [sp, #20]
 8000ae0:	e7c1      	b.n	8000a66 <_vfiprintf_r+0x14e>
 8000ae2:	fb05 2101 	mla	r1, r5, r1, r2
 8000ae6:	2301      	movs	r3, #1
 8000ae8:	4680      	mov	r8, r0
 8000aea:	e7f0      	b.n	8000ace <_vfiprintf_r+0x1b6>
 8000aec:	ab03      	add	r3, sp, #12
 8000aee:	9300      	str	r3, [sp, #0]
 8000af0:	4622      	mov	r2, r4
 8000af2:	4b13      	ldr	r3, [pc, #76]	; (8000b40 <_vfiprintf_r+0x228>)
 8000af4:	a904      	add	r1, sp, #16
 8000af6:	4630      	mov	r0, r6
 8000af8:	f3af 8000 	nop.w
 8000afc:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000b00:	4681      	mov	r9, r0
 8000b02:	d1d5      	bne.n	8000ab0 <_vfiprintf_r+0x198>
 8000b04:	89a3      	ldrh	r3, [r4, #12]
 8000b06:	065b      	lsls	r3, r3, #25
 8000b08:	f53f af7e 	bmi.w	8000a08 <_vfiprintf_r+0xf0>
 8000b0c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b0e:	e77d      	b.n	8000a0c <_vfiprintf_r+0xf4>
 8000b10:	ab03      	add	r3, sp, #12
 8000b12:	9300      	str	r3, [sp, #0]
 8000b14:	4622      	mov	r2, r4
 8000b16:	4b0a      	ldr	r3, [pc, #40]	; (8000b40 <_vfiprintf_r+0x228>)
 8000b18:	a904      	add	r1, sp, #16
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f000 f888 	bl	8000c30 <_printf_i>
 8000b20:	e7ec      	b.n	8000afc <_vfiprintf_r+0x1e4>
 8000b22:	bf00      	nop
 8000b24:	0800146c 	.word	0x0800146c
 8000b28:	080014ac 	.word	0x080014ac
 8000b2c:	0800148c 	.word	0x0800148c
 8000b30:	0800144c 	.word	0x0800144c
 8000b34:	080014b2 	.word	0x080014b2
 8000b38:	080014b6 	.word	0x080014b6
 8000b3c:	00000000 	.word	0x00000000
 8000b40:	080008f3 	.word	0x080008f3

08000b44 <_printf_common>:
 8000b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b48:	4691      	mov	r9, r2
 8000b4a:	461f      	mov	r7, r3
 8000b4c:	688a      	ldr	r2, [r1, #8]
 8000b4e:	690b      	ldr	r3, [r1, #16]
 8000b50:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b54:	4293      	cmp	r3, r2
 8000b56:	bfb8      	it	lt
 8000b58:	4613      	movlt	r3, r2
 8000b5a:	f8c9 3000 	str.w	r3, [r9]
 8000b5e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b62:	4606      	mov	r6, r0
 8000b64:	460c      	mov	r4, r1
 8000b66:	b112      	cbz	r2, 8000b6e <_printf_common+0x2a>
 8000b68:	3301      	adds	r3, #1
 8000b6a:	f8c9 3000 	str.w	r3, [r9]
 8000b6e:	6823      	ldr	r3, [r4, #0]
 8000b70:	0699      	lsls	r1, r3, #26
 8000b72:	bf42      	ittt	mi
 8000b74:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000b78:	3302      	addmi	r3, #2
 8000b7a:	f8c9 3000 	strmi.w	r3, [r9]
 8000b7e:	6825      	ldr	r5, [r4, #0]
 8000b80:	f015 0506 	ands.w	r5, r5, #6
 8000b84:	d107      	bne.n	8000b96 <_printf_common+0x52>
 8000b86:	f104 0a19 	add.w	sl, r4, #25
 8000b8a:	68e3      	ldr	r3, [r4, #12]
 8000b8c:	f8d9 2000 	ldr.w	r2, [r9]
 8000b90:	1a9b      	subs	r3, r3, r2
 8000b92:	42ab      	cmp	r3, r5
 8000b94:	dc28      	bgt.n	8000be8 <_printf_common+0xa4>
 8000b96:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000b9a:	6822      	ldr	r2, [r4, #0]
 8000b9c:	3300      	adds	r3, #0
 8000b9e:	bf18      	it	ne
 8000ba0:	2301      	movne	r3, #1
 8000ba2:	0692      	lsls	r2, r2, #26
 8000ba4:	d42d      	bmi.n	8000c02 <_printf_common+0xbe>
 8000ba6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000baa:	4639      	mov	r1, r7
 8000bac:	4630      	mov	r0, r6
 8000bae:	47c0      	blx	r8
 8000bb0:	3001      	adds	r0, #1
 8000bb2:	d020      	beq.n	8000bf6 <_printf_common+0xb2>
 8000bb4:	6823      	ldr	r3, [r4, #0]
 8000bb6:	68e5      	ldr	r5, [r4, #12]
 8000bb8:	f8d9 2000 	ldr.w	r2, [r9]
 8000bbc:	f003 0306 	and.w	r3, r3, #6
 8000bc0:	2b04      	cmp	r3, #4
 8000bc2:	bf08      	it	eq
 8000bc4:	1aad      	subeq	r5, r5, r2
 8000bc6:	68a3      	ldr	r3, [r4, #8]
 8000bc8:	6922      	ldr	r2, [r4, #16]
 8000bca:	bf0c      	ite	eq
 8000bcc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bd0:	2500      	movne	r5, #0
 8000bd2:	4293      	cmp	r3, r2
 8000bd4:	bfc4      	itt	gt
 8000bd6:	1a9b      	subgt	r3, r3, r2
 8000bd8:	18ed      	addgt	r5, r5, r3
 8000bda:	f04f 0900 	mov.w	r9, #0
 8000bde:	341a      	adds	r4, #26
 8000be0:	454d      	cmp	r5, r9
 8000be2:	d11a      	bne.n	8000c1a <_printf_common+0xd6>
 8000be4:	2000      	movs	r0, #0
 8000be6:	e008      	b.n	8000bfa <_printf_common+0xb6>
 8000be8:	2301      	movs	r3, #1
 8000bea:	4652      	mov	r2, sl
 8000bec:	4639      	mov	r1, r7
 8000bee:	4630      	mov	r0, r6
 8000bf0:	47c0      	blx	r8
 8000bf2:	3001      	adds	r0, #1
 8000bf4:	d103      	bne.n	8000bfe <_printf_common+0xba>
 8000bf6:	f04f 30ff 	mov.w	r0, #4294967295
 8000bfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfe:	3501      	adds	r5, #1
 8000c00:	e7c3      	b.n	8000b8a <_printf_common+0x46>
 8000c02:	18e1      	adds	r1, r4, r3
 8000c04:	1c5a      	adds	r2, r3, #1
 8000c06:	2030      	movs	r0, #48	; 0x30
 8000c08:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c0c:	4422      	add	r2, r4
 8000c0e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c12:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c16:	3302      	adds	r3, #2
 8000c18:	e7c5      	b.n	8000ba6 <_printf_common+0x62>
 8000c1a:	2301      	movs	r3, #1
 8000c1c:	4622      	mov	r2, r4
 8000c1e:	4639      	mov	r1, r7
 8000c20:	4630      	mov	r0, r6
 8000c22:	47c0      	blx	r8
 8000c24:	3001      	adds	r0, #1
 8000c26:	d0e6      	beq.n	8000bf6 <_printf_common+0xb2>
 8000c28:	f109 0901 	add.w	r9, r9, #1
 8000c2c:	e7d8      	b.n	8000be0 <_printf_common+0x9c>
	...

08000c30 <_printf_i>:
 8000c30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c34:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000c38:	460c      	mov	r4, r1
 8000c3a:	7e09      	ldrb	r1, [r1, #24]
 8000c3c:	b085      	sub	sp, #20
 8000c3e:	296e      	cmp	r1, #110	; 0x6e
 8000c40:	4617      	mov	r7, r2
 8000c42:	4606      	mov	r6, r0
 8000c44:	4698      	mov	r8, r3
 8000c46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000c48:	f000 80b3 	beq.w	8000db2 <_printf_i+0x182>
 8000c4c:	d822      	bhi.n	8000c94 <_printf_i+0x64>
 8000c4e:	2963      	cmp	r1, #99	; 0x63
 8000c50:	d036      	beq.n	8000cc0 <_printf_i+0x90>
 8000c52:	d80a      	bhi.n	8000c6a <_printf_i+0x3a>
 8000c54:	2900      	cmp	r1, #0
 8000c56:	f000 80b9 	beq.w	8000dcc <_printf_i+0x19c>
 8000c5a:	2958      	cmp	r1, #88	; 0x58
 8000c5c:	f000 8083 	beq.w	8000d66 <_printf_i+0x136>
 8000c60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c64:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000c68:	e032      	b.n	8000cd0 <_printf_i+0xa0>
 8000c6a:	2964      	cmp	r1, #100	; 0x64
 8000c6c:	d001      	beq.n	8000c72 <_printf_i+0x42>
 8000c6e:	2969      	cmp	r1, #105	; 0x69
 8000c70:	d1f6      	bne.n	8000c60 <_printf_i+0x30>
 8000c72:	6820      	ldr	r0, [r4, #0]
 8000c74:	6813      	ldr	r3, [r2, #0]
 8000c76:	0605      	lsls	r5, r0, #24
 8000c78:	f103 0104 	add.w	r1, r3, #4
 8000c7c:	d52a      	bpl.n	8000cd4 <_printf_i+0xa4>
 8000c7e:	681b      	ldr	r3, [r3, #0]
 8000c80:	6011      	str	r1, [r2, #0]
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	da03      	bge.n	8000c8e <_printf_i+0x5e>
 8000c86:	222d      	movs	r2, #45	; 0x2d
 8000c88:	425b      	negs	r3, r3
 8000c8a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000c8e:	486f      	ldr	r0, [pc, #444]	; (8000e4c <_printf_i+0x21c>)
 8000c90:	220a      	movs	r2, #10
 8000c92:	e039      	b.n	8000d08 <_printf_i+0xd8>
 8000c94:	2973      	cmp	r1, #115	; 0x73
 8000c96:	f000 809d 	beq.w	8000dd4 <_printf_i+0x1a4>
 8000c9a:	d808      	bhi.n	8000cae <_printf_i+0x7e>
 8000c9c:	296f      	cmp	r1, #111	; 0x6f
 8000c9e:	d020      	beq.n	8000ce2 <_printf_i+0xb2>
 8000ca0:	2970      	cmp	r1, #112	; 0x70
 8000ca2:	d1dd      	bne.n	8000c60 <_printf_i+0x30>
 8000ca4:	6823      	ldr	r3, [r4, #0]
 8000ca6:	f043 0320 	orr.w	r3, r3, #32
 8000caa:	6023      	str	r3, [r4, #0]
 8000cac:	e003      	b.n	8000cb6 <_printf_i+0x86>
 8000cae:	2975      	cmp	r1, #117	; 0x75
 8000cb0:	d017      	beq.n	8000ce2 <_printf_i+0xb2>
 8000cb2:	2978      	cmp	r1, #120	; 0x78
 8000cb4:	d1d4      	bne.n	8000c60 <_printf_i+0x30>
 8000cb6:	2378      	movs	r3, #120	; 0x78
 8000cb8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000cbc:	4864      	ldr	r0, [pc, #400]	; (8000e50 <_printf_i+0x220>)
 8000cbe:	e055      	b.n	8000d6c <_printf_i+0x13c>
 8000cc0:	6813      	ldr	r3, [r2, #0]
 8000cc2:	1d19      	adds	r1, r3, #4
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	6011      	str	r1, [r2, #0]
 8000cc8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ccc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000cd0:	2301      	movs	r3, #1
 8000cd2:	e08c      	b.n	8000dee <_printf_i+0x1be>
 8000cd4:	681b      	ldr	r3, [r3, #0]
 8000cd6:	6011      	str	r1, [r2, #0]
 8000cd8:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000cdc:	bf18      	it	ne
 8000cde:	b21b      	sxthne	r3, r3
 8000ce0:	e7cf      	b.n	8000c82 <_printf_i+0x52>
 8000ce2:	6813      	ldr	r3, [r2, #0]
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	1d18      	adds	r0, r3, #4
 8000ce8:	6010      	str	r0, [r2, #0]
 8000cea:	0628      	lsls	r0, r5, #24
 8000cec:	d501      	bpl.n	8000cf2 <_printf_i+0xc2>
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	e002      	b.n	8000cf8 <_printf_i+0xc8>
 8000cf2:	0668      	lsls	r0, r5, #25
 8000cf4:	d5fb      	bpl.n	8000cee <_printf_i+0xbe>
 8000cf6:	881b      	ldrh	r3, [r3, #0]
 8000cf8:	4854      	ldr	r0, [pc, #336]	; (8000e4c <_printf_i+0x21c>)
 8000cfa:	296f      	cmp	r1, #111	; 0x6f
 8000cfc:	bf14      	ite	ne
 8000cfe:	220a      	movne	r2, #10
 8000d00:	2208      	moveq	r2, #8
 8000d02:	2100      	movs	r1, #0
 8000d04:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d08:	6865      	ldr	r5, [r4, #4]
 8000d0a:	60a5      	str	r5, [r4, #8]
 8000d0c:	2d00      	cmp	r5, #0
 8000d0e:	f2c0 8095 	blt.w	8000e3c <_printf_i+0x20c>
 8000d12:	6821      	ldr	r1, [r4, #0]
 8000d14:	f021 0104 	bic.w	r1, r1, #4
 8000d18:	6021      	str	r1, [r4, #0]
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	d13d      	bne.n	8000d9a <_printf_i+0x16a>
 8000d1e:	2d00      	cmp	r5, #0
 8000d20:	f040 808e 	bne.w	8000e40 <_printf_i+0x210>
 8000d24:	4665      	mov	r5, ip
 8000d26:	2a08      	cmp	r2, #8
 8000d28:	d10b      	bne.n	8000d42 <_printf_i+0x112>
 8000d2a:	6823      	ldr	r3, [r4, #0]
 8000d2c:	07db      	lsls	r3, r3, #31
 8000d2e:	d508      	bpl.n	8000d42 <_printf_i+0x112>
 8000d30:	6923      	ldr	r3, [r4, #16]
 8000d32:	6862      	ldr	r2, [r4, #4]
 8000d34:	429a      	cmp	r2, r3
 8000d36:	bfde      	ittt	le
 8000d38:	2330      	movle	r3, #48	; 0x30
 8000d3a:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d3e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d42:	ebac 0305 	sub.w	r3, ip, r5
 8000d46:	6123      	str	r3, [r4, #16]
 8000d48:	f8cd 8000 	str.w	r8, [sp]
 8000d4c:	463b      	mov	r3, r7
 8000d4e:	aa03      	add	r2, sp, #12
 8000d50:	4621      	mov	r1, r4
 8000d52:	4630      	mov	r0, r6
 8000d54:	f7ff fef6 	bl	8000b44 <_printf_common>
 8000d58:	3001      	adds	r0, #1
 8000d5a:	d14d      	bne.n	8000df8 <_printf_i+0x1c8>
 8000d5c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d60:	b005      	add	sp, #20
 8000d62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d66:	4839      	ldr	r0, [pc, #228]	; (8000e4c <_printf_i+0x21c>)
 8000d68:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000d6c:	6813      	ldr	r3, [r2, #0]
 8000d6e:	6821      	ldr	r1, [r4, #0]
 8000d70:	1d1d      	adds	r5, r3, #4
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	6015      	str	r5, [r2, #0]
 8000d76:	060a      	lsls	r2, r1, #24
 8000d78:	d50b      	bpl.n	8000d92 <_printf_i+0x162>
 8000d7a:	07ca      	lsls	r2, r1, #31
 8000d7c:	bf44      	itt	mi
 8000d7e:	f041 0120 	orrmi.w	r1, r1, #32
 8000d82:	6021      	strmi	r1, [r4, #0]
 8000d84:	b91b      	cbnz	r3, 8000d8e <_printf_i+0x15e>
 8000d86:	6822      	ldr	r2, [r4, #0]
 8000d88:	f022 0220 	bic.w	r2, r2, #32
 8000d8c:	6022      	str	r2, [r4, #0]
 8000d8e:	2210      	movs	r2, #16
 8000d90:	e7b7      	b.n	8000d02 <_printf_i+0xd2>
 8000d92:	064d      	lsls	r5, r1, #25
 8000d94:	bf48      	it	mi
 8000d96:	b29b      	uxthmi	r3, r3
 8000d98:	e7ef      	b.n	8000d7a <_printf_i+0x14a>
 8000d9a:	4665      	mov	r5, ip
 8000d9c:	fbb3 f1f2 	udiv	r1, r3, r2
 8000da0:	fb02 3311 	mls	r3, r2, r1, r3
 8000da4:	5cc3      	ldrb	r3, [r0, r3]
 8000da6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000daa:	460b      	mov	r3, r1
 8000dac:	2900      	cmp	r1, #0
 8000dae:	d1f5      	bne.n	8000d9c <_printf_i+0x16c>
 8000db0:	e7b9      	b.n	8000d26 <_printf_i+0xf6>
 8000db2:	6813      	ldr	r3, [r2, #0]
 8000db4:	6825      	ldr	r5, [r4, #0]
 8000db6:	6961      	ldr	r1, [r4, #20]
 8000db8:	1d18      	adds	r0, r3, #4
 8000dba:	6010      	str	r0, [r2, #0]
 8000dbc:	0628      	lsls	r0, r5, #24
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	d501      	bpl.n	8000dc6 <_printf_i+0x196>
 8000dc2:	6019      	str	r1, [r3, #0]
 8000dc4:	e002      	b.n	8000dcc <_printf_i+0x19c>
 8000dc6:	066a      	lsls	r2, r5, #25
 8000dc8:	d5fb      	bpl.n	8000dc2 <_printf_i+0x192>
 8000dca:	8019      	strh	r1, [r3, #0]
 8000dcc:	2300      	movs	r3, #0
 8000dce:	6123      	str	r3, [r4, #16]
 8000dd0:	4665      	mov	r5, ip
 8000dd2:	e7b9      	b.n	8000d48 <_printf_i+0x118>
 8000dd4:	6813      	ldr	r3, [r2, #0]
 8000dd6:	1d19      	adds	r1, r3, #4
 8000dd8:	6011      	str	r1, [r2, #0]
 8000dda:	681d      	ldr	r5, [r3, #0]
 8000ddc:	6862      	ldr	r2, [r4, #4]
 8000dde:	2100      	movs	r1, #0
 8000de0:	4628      	mov	r0, r5
 8000de2:	f7ff f9fd 	bl	80001e0 <memchr>
 8000de6:	b108      	cbz	r0, 8000dec <_printf_i+0x1bc>
 8000de8:	1b40      	subs	r0, r0, r5
 8000dea:	6060      	str	r0, [r4, #4]
 8000dec:	6863      	ldr	r3, [r4, #4]
 8000dee:	6123      	str	r3, [r4, #16]
 8000df0:	2300      	movs	r3, #0
 8000df2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000df6:	e7a7      	b.n	8000d48 <_printf_i+0x118>
 8000df8:	6923      	ldr	r3, [r4, #16]
 8000dfa:	462a      	mov	r2, r5
 8000dfc:	4639      	mov	r1, r7
 8000dfe:	4630      	mov	r0, r6
 8000e00:	47c0      	blx	r8
 8000e02:	3001      	adds	r0, #1
 8000e04:	d0aa      	beq.n	8000d5c <_printf_i+0x12c>
 8000e06:	6823      	ldr	r3, [r4, #0]
 8000e08:	079b      	lsls	r3, r3, #30
 8000e0a:	d413      	bmi.n	8000e34 <_printf_i+0x204>
 8000e0c:	68e0      	ldr	r0, [r4, #12]
 8000e0e:	9b03      	ldr	r3, [sp, #12]
 8000e10:	4298      	cmp	r0, r3
 8000e12:	bfb8      	it	lt
 8000e14:	4618      	movlt	r0, r3
 8000e16:	e7a3      	b.n	8000d60 <_printf_i+0x130>
 8000e18:	2301      	movs	r3, #1
 8000e1a:	464a      	mov	r2, r9
 8000e1c:	4639      	mov	r1, r7
 8000e1e:	4630      	mov	r0, r6
 8000e20:	47c0      	blx	r8
 8000e22:	3001      	adds	r0, #1
 8000e24:	d09a      	beq.n	8000d5c <_printf_i+0x12c>
 8000e26:	3501      	adds	r5, #1
 8000e28:	68e3      	ldr	r3, [r4, #12]
 8000e2a:	9a03      	ldr	r2, [sp, #12]
 8000e2c:	1a9b      	subs	r3, r3, r2
 8000e2e:	42ab      	cmp	r3, r5
 8000e30:	dcf2      	bgt.n	8000e18 <_printf_i+0x1e8>
 8000e32:	e7eb      	b.n	8000e0c <_printf_i+0x1dc>
 8000e34:	2500      	movs	r5, #0
 8000e36:	f104 0919 	add.w	r9, r4, #25
 8000e3a:	e7f5      	b.n	8000e28 <_printf_i+0x1f8>
 8000e3c:	2b00      	cmp	r3, #0
 8000e3e:	d1ac      	bne.n	8000d9a <_printf_i+0x16a>
 8000e40:	7803      	ldrb	r3, [r0, #0]
 8000e42:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e46:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e4a:	e76c      	b.n	8000d26 <_printf_i+0xf6>
 8000e4c:	080014bd 	.word	0x080014bd
 8000e50:	080014ce 	.word	0x080014ce

08000e54 <_sbrk_r>:
 8000e54:	b538      	push	{r3, r4, r5, lr}
 8000e56:	4c06      	ldr	r4, [pc, #24]	; (8000e70 <_sbrk_r+0x1c>)
 8000e58:	2300      	movs	r3, #0
 8000e5a:	4605      	mov	r5, r0
 8000e5c:	4608      	mov	r0, r1
 8000e5e:	6023      	str	r3, [r4, #0]
 8000e60:	f7ff fab4 	bl	80003cc <_sbrk>
 8000e64:	1c43      	adds	r3, r0, #1
 8000e66:	d102      	bne.n	8000e6e <_sbrk_r+0x1a>
 8000e68:	6823      	ldr	r3, [r4, #0]
 8000e6a:	b103      	cbz	r3, 8000e6e <_sbrk_r+0x1a>
 8000e6c:	602b      	str	r3, [r5, #0]
 8000e6e:	bd38      	pop	{r3, r4, r5, pc}
 8000e70:	2000008c 	.word	0x2000008c

08000e74 <__sread>:
 8000e74:	b510      	push	{r4, lr}
 8000e76:	460c      	mov	r4, r1
 8000e78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e7c:	f000 fa96 	bl	80013ac <_read_r>
 8000e80:	2800      	cmp	r0, #0
 8000e82:	bfab      	itete	ge
 8000e84:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e86:	89a3      	ldrhlt	r3, [r4, #12]
 8000e88:	181b      	addge	r3, r3, r0
 8000e8a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e8e:	bfac      	ite	ge
 8000e90:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e92:	81a3      	strhlt	r3, [r4, #12]
 8000e94:	bd10      	pop	{r4, pc}

08000e96 <__swrite>:
 8000e96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e9a:	461f      	mov	r7, r3
 8000e9c:	898b      	ldrh	r3, [r1, #12]
 8000e9e:	05db      	lsls	r3, r3, #23
 8000ea0:	4605      	mov	r5, r0
 8000ea2:	460c      	mov	r4, r1
 8000ea4:	4616      	mov	r6, r2
 8000ea6:	d505      	bpl.n	8000eb4 <__swrite+0x1e>
 8000ea8:	2302      	movs	r3, #2
 8000eaa:	2200      	movs	r2, #0
 8000eac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eb0:	f000 f9b6 	bl	8001220 <_lseek_r>
 8000eb4:	89a3      	ldrh	r3, [r4, #12]
 8000eb6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000eba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ebe:	81a3      	strh	r3, [r4, #12]
 8000ec0:	4632      	mov	r2, r6
 8000ec2:	463b      	mov	r3, r7
 8000ec4:	4628      	mov	r0, r5
 8000ec6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000eca:	f000 b869 	b.w	8000fa0 <_write_r>

08000ece <__sseek>:
 8000ece:	b510      	push	{r4, lr}
 8000ed0:	460c      	mov	r4, r1
 8000ed2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ed6:	f000 f9a3 	bl	8001220 <_lseek_r>
 8000eda:	1c43      	adds	r3, r0, #1
 8000edc:	89a3      	ldrh	r3, [r4, #12]
 8000ede:	bf15      	itete	ne
 8000ee0:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ee2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000ee6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000eea:	81a3      	strheq	r3, [r4, #12]
 8000eec:	bf18      	it	ne
 8000eee:	81a3      	strhne	r3, [r4, #12]
 8000ef0:	bd10      	pop	{r4, pc}

08000ef2 <__sclose>:
 8000ef2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ef6:	f000 b8d3 	b.w	80010a0 <_close_r>
	...

08000efc <__swbuf_r>:
 8000efc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000efe:	460e      	mov	r6, r1
 8000f00:	4614      	mov	r4, r2
 8000f02:	4605      	mov	r5, r0
 8000f04:	b118      	cbz	r0, 8000f0e <__swbuf_r+0x12>
 8000f06:	6983      	ldr	r3, [r0, #24]
 8000f08:	b90b      	cbnz	r3, 8000f0e <__swbuf_r+0x12>
 8000f0a:	f7ff fbf7 	bl	80006fc <__sinit>
 8000f0e:	4b21      	ldr	r3, [pc, #132]	; (8000f94 <__swbuf_r+0x98>)
 8000f10:	429c      	cmp	r4, r3
 8000f12:	d12a      	bne.n	8000f6a <__swbuf_r+0x6e>
 8000f14:	686c      	ldr	r4, [r5, #4]
 8000f16:	69a3      	ldr	r3, [r4, #24]
 8000f18:	60a3      	str	r3, [r4, #8]
 8000f1a:	89a3      	ldrh	r3, [r4, #12]
 8000f1c:	071a      	lsls	r2, r3, #28
 8000f1e:	d52e      	bpl.n	8000f7e <__swbuf_r+0x82>
 8000f20:	6923      	ldr	r3, [r4, #16]
 8000f22:	b363      	cbz	r3, 8000f7e <__swbuf_r+0x82>
 8000f24:	6923      	ldr	r3, [r4, #16]
 8000f26:	6820      	ldr	r0, [r4, #0]
 8000f28:	1ac0      	subs	r0, r0, r3
 8000f2a:	6963      	ldr	r3, [r4, #20]
 8000f2c:	b2f6      	uxtb	r6, r6
 8000f2e:	4283      	cmp	r3, r0
 8000f30:	4637      	mov	r7, r6
 8000f32:	dc04      	bgt.n	8000f3e <__swbuf_r+0x42>
 8000f34:	4621      	mov	r1, r4
 8000f36:	4628      	mov	r0, r5
 8000f38:	f000 f948 	bl	80011cc <_fflush_r>
 8000f3c:	bb28      	cbnz	r0, 8000f8a <__swbuf_r+0x8e>
 8000f3e:	68a3      	ldr	r3, [r4, #8]
 8000f40:	3b01      	subs	r3, #1
 8000f42:	60a3      	str	r3, [r4, #8]
 8000f44:	6823      	ldr	r3, [r4, #0]
 8000f46:	1c5a      	adds	r2, r3, #1
 8000f48:	6022      	str	r2, [r4, #0]
 8000f4a:	701e      	strb	r6, [r3, #0]
 8000f4c:	6963      	ldr	r3, [r4, #20]
 8000f4e:	3001      	adds	r0, #1
 8000f50:	4283      	cmp	r3, r0
 8000f52:	d004      	beq.n	8000f5e <__swbuf_r+0x62>
 8000f54:	89a3      	ldrh	r3, [r4, #12]
 8000f56:	07db      	lsls	r3, r3, #31
 8000f58:	d519      	bpl.n	8000f8e <__swbuf_r+0x92>
 8000f5a:	2e0a      	cmp	r6, #10
 8000f5c:	d117      	bne.n	8000f8e <__swbuf_r+0x92>
 8000f5e:	4621      	mov	r1, r4
 8000f60:	4628      	mov	r0, r5
 8000f62:	f000 f933 	bl	80011cc <_fflush_r>
 8000f66:	b190      	cbz	r0, 8000f8e <__swbuf_r+0x92>
 8000f68:	e00f      	b.n	8000f8a <__swbuf_r+0x8e>
 8000f6a:	4b0b      	ldr	r3, [pc, #44]	; (8000f98 <__swbuf_r+0x9c>)
 8000f6c:	429c      	cmp	r4, r3
 8000f6e:	d101      	bne.n	8000f74 <__swbuf_r+0x78>
 8000f70:	68ac      	ldr	r4, [r5, #8]
 8000f72:	e7d0      	b.n	8000f16 <__swbuf_r+0x1a>
 8000f74:	4b09      	ldr	r3, [pc, #36]	; (8000f9c <__swbuf_r+0xa0>)
 8000f76:	429c      	cmp	r4, r3
 8000f78:	bf08      	it	eq
 8000f7a:	68ec      	ldreq	r4, [r5, #12]
 8000f7c:	e7cb      	b.n	8000f16 <__swbuf_r+0x1a>
 8000f7e:	4621      	mov	r1, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	f000 f81f 	bl	8000fc4 <__swsetup_r>
 8000f86:	2800      	cmp	r0, #0
 8000f88:	d0cc      	beq.n	8000f24 <__swbuf_r+0x28>
 8000f8a:	f04f 37ff 	mov.w	r7, #4294967295
 8000f8e:	4638      	mov	r0, r7
 8000f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f92:	bf00      	nop
 8000f94:	0800146c 	.word	0x0800146c
 8000f98:	0800148c 	.word	0x0800148c
 8000f9c:	0800144c 	.word	0x0800144c

08000fa0 <_write_r>:
 8000fa0:	b538      	push	{r3, r4, r5, lr}
 8000fa2:	4c07      	ldr	r4, [pc, #28]	; (8000fc0 <_write_r+0x20>)
 8000fa4:	4605      	mov	r5, r0
 8000fa6:	4608      	mov	r0, r1
 8000fa8:	4611      	mov	r1, r2
 8000faa:	2200      	movs	r2, #0
 8000fac:	6022      	str	r2, [r4, #0]
 8000fae:	461a      	mov	r2, r3
 8000fb0:	f7ff f9bb 	bl	800032a <_write>
 8000fb4:	1c43      	adds	r3, r0, #1
 8000fb6:	d102      	bne.n	8000fbe <_write_r+0x1e>
 8000fb8:	6823      	ldr	r3, [r4, #0]
 8000fba:	b103      	cbz	r3, 8000fbe <_write_r+0x1e>
 8000fbc:	602b      	str	r3, [r5, #0]
 8000fbe:	bd38      	pop	{r3, r4, r5, pc}
 8000fc0:	2000008c 	.word	0x2000008c

08000fc4 <__swsetup_r>:
 8000fc4:	4b32      	ldr	r3, [pc, #200]	; (8001090 <__swsetup_r+0xcc>)
 8000fc6:	b570      	push	{r4, r5, r6, lr}
 8000fc8:	681d      	ldr	r5, [r3, #0]
 8000fca:	4606      	mov	r6, r0
 8000fcc:	460c      	mov	r4, r1
 8000fce:	b125      	cbz	r5, 8000fda <__swsetup_r+0x16>
 8000fd0:	69ab      	ldr	r3, [r5, #24]
 8000fd2:	b913      	cbnz	r3, 8000fda <__swsetup_r+0x16>
 8000fd4:	4628      	mov	r0, r5
 8000fd6:	f7ff fb91 	bl	80006fc <__sinit>
 8000fda:	4b2e      	ldr	r3, [pc, #184]	; (8001094 <__swsetup_r+0xd0>)
 8000fdc:	429c      	cmp	r4, r3
 8000fde:	d10f      	bne.n	8001000 <__swsetup_r+0x3c>
 8000fe0:	686c      	ldr	r4, [r5, #4]
 8000fe2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fe6:	b29a      	uxth	r2, r3
 8000fe8:	0715      	lsls	r5, r2, #28
 8000fea:	d42c      	bmi.n	8001046 <__swsetup_r+0x82>
 8000fec:	06d0      	lsls	r0, r2, #27
 8000fee:	d411      	bmi.n	8001014 <__swsetup_r+0x50>
 8000ff0:	2209      	movs	r2, #9
 8000ff2:	6032      	str	r2, [r6, #0]
 8000ff4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ff8:	81a3      	strh	r3, [r4, #12]
 8000ffa:	f04f 30ff 	mov.w	r0, #4294967295
 8000ffe:	e03e      	b.n	800107e <__swsetup_r+0xba>
 8001000:	4b25      	ldr	r3, [pc, #148]	; (8001098 <__swsetup_r+0xd4>)
 8001002:	429c      	cmp	r4, r3
 8001004:	d101      	bne.n	800100a <__swsetup_r+0x46>
 8001006:	68ac      	ldr	r4, [r5, #8]
 8001008:	e7eb      	b.n	8000fe2 <__swsetup_r+0x1e>
 800100a:	4b24      	ldr	r3, [pc, #144]	; (800109c <__swsetup_r+0xd8>)
 800100c:	429c      	cmp	r4, r3
 800100e:	bf08      	it	eq
 8001010:	68ec      	ldreq	r4, [r5, #12]
 8001012:	e7e6      	b.n	8000fe2 <__swsetup_r+0x1e>
 8001014:	0751      	lsls	r1, r2, #29
 8001016:	d512      	bpl.n	800103e <__swsetup_r+0x7a>
 8001018:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800101a:	b141      	cbz	r1, 800102e <__swsetup_r+0x6a>
 800101c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001020:	4299      	cmp	r1, r3
 8001022:	d002      	beq.n	800102a <__swsetup_r+0x66>
 8001024:	4630      	mov	r0, r6
 8001026:	f000 f973 	bl	8001310 <_free_r>
 800102a:	2300      	movs	r3, #0
 800102c:	6363      	str	r3, [r4, #52]	; 0x34
 800102e:	89a3      	ldrh	r3, [r4, #12]
 8001030:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001034:	81a3      	strh	r3, [r4, #12]
 8001036:	2300      	movs	r3, #0
 8001038:	6063      	str	r3, [r4, #4]
 800103a:	6923      	ldr	r3, [r4, #16]
 800103c:	6023      	str	r3, [r4, #0]
 800103e:	89a3      	ldrh	r3, [r4, #12]
 8001040:	f043 0308 	orr.w	r3, r3, #8
 8001044:	81a3      	strh	r3, [r4, #12]
 8001046:	6923      	ldr	r3, [r4, #16]
 8001048:	b94b      	cbnz	r3, 800105e <__swsetup_r+0x9a>
 800104a:	89a3      	ldrh	r3, [r4, #12]
 800104c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001050:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001054:	d003      	beq.n	800105e <__swsetup_r+0x9a>
 8001056:	4621      	mov	r1, r4
 8001058:	4630      	mov	r0, r6
 800105a:	f000 f917 	bl	800128c <__smakebuf_r>
 800105e:	89a2      	ldrh	r2, [r4, #12]
 8001060:	f012 0301 	ands.w	r3, r2, #1
 8001064:	d00c      	beq.n	8001080 <__swsetup_r+0xbc>
 8001066:	2300      	movs	r3, #0
 8001068:	60a3      	str	r3, [r4, #8]
 800106a:	6963      	ldr	r3, [r4, #20]
 800106c:	425b      	negs	r3, r3
 800106e:	61a3      	str	r3, [r4, #24]
 8001070:	6923      	ldr	r3, [r4, #16]
 8001072:	b953      	cbnz	r3, 800108a <__swsetup_r+0xc6>
 8001074:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001078:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800107c:	d1ba      	bne.n	8000ff4 <__swsetup_r+0x30>
 800107e:	bd70      	pop	{r4, r5, r6, pc}
 8001080:	0792      	lsls	r2, r2, #30
 8001082:	bf58      	it	pl
 8001084:	6963      	ldrpl	r3, [r4, #20]
 8001086:	60a3      	str	r3, [r4, #8]
 8001088:	e7f2      	b.n	8001070 <__swsetup_r+0xac>
 800108a:	2000      	movs	r0, #0
 800108c:	e7f7      	b.n	800107e <__swsetup_r+0xba>
 800108e:	bf00      	nop
 8001090:	20000000 	.word	0x20000000
 8001094:	0800146c 	.word	0x0800146c
 8001098:	0800148c 	.word	0x0800148c
 800109c:	0800144c 	.word	0x0800144c

080010a0 <_close_r>:
 80010a0:	b538      	push	{r3, r4, r5, lr}
 80010a2:	4c06      	ldr	r4, [pc, #24]	; (80010bc <_close_r+0x1c>)
 80010a4:	2300      	movs	r3, #0
 80010a6:	4605      	mov	r5, r0
 80010a8:	4608      	mov	r0, r1
 80010aa:	6023      	str	r3, [r4, #0]
 80010ac:	f7ff f959 	bl	8000362 <_close>
 80010b0:	1c43      	adds	r3, r0, #1
 80010b2:	d102      	bne.n	80010ba <_close_r+0x1a>
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	b103      	cbz	r3, 80010ba <_close_r+0x1a>
 80010b8:	602b      	str	r3, [r5, #0]
 80010ba:	bd38      	pop	{r3, r4, r5, pc}
 80010bc:	2000008c 	.word	0x2000008c

080010c0 <__sflush_r>:
 80010c0:	898a      	ldrh	r2, [r1, #12]
 80010c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010c6:	4605      	mov	r5, r0
 80010c8:	0710      	lsls	r0, r2, #28
 80010ca:	460c      	mov	r4, r1
 80010cc:	d458      	bmi.n	8001180 <__sflush_r+0xc0>
 80010ce:	684b      	ldr	r3, [r1, #4]
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	dc05      	bgt.n	80010e0 <__sflush_r+0x20>
 80010d4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	dc02      	bgt.n	80010e0 <__sflush_r+0x20>
 80010da:	2000      	movs	r0, #0
 80010dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010e2:	2e00      	cmp	r6, #0
 80010e4:	d0f9      	beq.n	80010da <__sflush_r+0x1a>
 80010e6:	2300      	movs	r3, #0
 80010e8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010ec:	682f      	ldr	r7, [r5, #0]
 80010ee:	6a21      	ldr	r1, [r4, #32]
 80010f0:	602b      	str	r3, [r5, #0]
 80010f2:	d032      	beq.n	800115a <__sflush_r+0x9a>
 80010f4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010f6:	89a3      	ldrh	r3, [r4, #12]
 80010f8:	075a      	lsls	r2, r3, #29
 80010fa:	d505      	bpl.n	8001108 <__sflush_r+0x48>
 80010fc:	6863      	ldr	r3, [r4, #4]
 80010fe:	1ac0      	subs	r0, r0, r3
 8001100:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001102:	b10b      	cbz	r3, 8001108 <__sflush_r+0x48>
 8001104:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001106:	1ac0      	subs	r0, r0, r3
 8001108:	2300      	movs	r3, #0
 800110a:	4602      	mov	r2, r0
 800110c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800110e:	6a21      	ldr	r1, [r4, #32]
 8001110:	4628      	mov	r0, r5
 8001112:	47b0      	blx	r6
 8001114:	1c43      	adds	r3, r0, #1
 8001116:	89a3      	ldrh	r3, [r4, #12]
 8001118:	d106      	bne.n	8001128 <__sflush_r+0x68>
 800111a:	6829      	ldr	r1, [r5, #0]
 800111c:	291d      	cmp	r1, #29
 800111e:	d848      	bhi.n	80011b2 <__sflush_r+0xf2>
 8001120:	4a29      	ldr	r2, [pc, #164]	; (80011c8 <__sflush_r+0x108>)
 8001122:	40ca      	lsrs	r2, r1
 8001124:	07d6      	lsls	r6, r2, #31
 8001126:	d544      	bpl.n	80011b2 <__sflush_r+0xf2>
 8001128:	2200      	movs	r2, #0
 800112a:	6062      	str	r2, [r4, #4]
 800112c:	04d9      	lsls	r1, r3, #19
 800112e:	6922      	ldr	r2, [r4, #16]
 8001130:	6022      	str	r2, [r4, #0]
 8001132:	d504      	bpl.n	800113e <__sflush_r+0x7e>
 8001134:	1c42      	adds	r2, r0, #1
 8001136:	d101      	bne.n	800113c <__sflush_r+0x7c>
 8001138:	682b      	ldr	r3, [r5, #0]
 800113a:	b903      	cbnz	r3, 800113e <__sflush_r+0x7e>
 800113c:	6560      	str	r0, [r4, #84]	; 0x54
 800113e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001140:	602f      	str	r7, [r5, #0]
 8001142:	2900      	cmp	r1, #0
 8001144:	d0c9      	beq.n	80010da <__sflush_r+0x1a>
 8001146:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800114a:	4299      	cmp	r1, r3
 800114c:	d002      	beq.n	8001154 <__sflush_r+0x94>
 800114e:	4628      	mov	r0, r5
 8001150:	f000 f8de 	bl	8001310 <_free_r>
 8001154:	2000      	movs	r0, #0
 8001156:	6360      	str	r0, [r4, #52]	; 0x34
 8001158:	e7c0      	b.n	80010dc <__sflush_r+0x1c>
 800115a:	2301      	movs	r3, #1
 800115c:	4628      	mov	r0, r5
 800115e:	47b0      	blx	r6
 8001160:	1c41      	adds	r1, r0, #1
 8001162:	d1c8      	bne.n	80010f6 <__sflush_r+0x36>
 8001164:	682b      	ldr	r3, [r5, #0]
 8001166:	2b00      	cmp	r3, #0
 8001168:	d0c5      	beq.n	80010f6 <__sflush_r+0x36>
 800116a:	2b1d      	cmp	r3, #29
 800116c:	d001      	beq.n	8001172 <__sflush_r+0xb2>
 800116e:	2b16      	cmp	r3, #22
 8001170:	d101      	bne.n	8001176 <__sflush_r+0xb6>
 8001172:	602f      	str	r7, [r5, #0]
 8001174:	e7b1      	b.n	80010da <__sflush_r+0x1a>
 8001176:	89a3      	ldrh	r3, [r4, #12]
 8001178:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800117c:	81a3      	strh	r3, [r4, #12]
 800117e:	e7ad      	b.n	80010dc <__sflush_r+0x1c>
 8001180:	690f      	ldr	r7, [r1, #16]
 8001182:	2f00      	cmp	r7, #0
 8001184:	d0a9      	beq.n	80010da <__sflush_r+0x1a>
 8001186:	0793      	lsls	r3, r2, #30
 8001188:	680e      	ldr	r6, [r1, #0]
 800118a:	bf08      	it	eq
 800118c:	694b      	ldreq	r3, [r1, #20]
 800118e:	600f      	str	r7, [r1, #0]
 8001190:	bf18      	it	ne
 8001192:	2300      	movne	r3, #0
 8001194:	eba6 0807 	sub.w	r8, r6, r7
 8001198:	608b      	str	r3, [r1, #8]
 800119a:	f1b8 0f00 	cmp.w	r8, #0
 800119e:	dd9c      	ble.n	80010da <__sflush_r+0x1a>
 80011a0:	4643      	mov	r3, r8
 80011a2:	463a      	mov	r2, r7
 80011a4:	6a21      	ldr	r1, [r4, #32]
 80011a6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011a8:	4628      	mov	r0, r5
 80011aa:	47b0      	blx	r6
 80011ac:	2800      	cmp	r0, #0
 80011ae:	dc06      	bgt.n	80011be <__sflush_r+0xfe>
 80011b0:	89a3      	ldrh	r3, [r4, #12]
 80011b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011b6:	81a3      	strh	r3, [r4, #12]
 80011b8:	f04f 30ff 	mov.w	r0, #4294967295
 80011bc:	e78e      	b.n	80010dc <__sflush_r+0x1c>
 80011be:	4407      	add	r7, r0
 80011c0:	eba8 0800 	sub.w	r8, r8, r0
 80011c4:	e7e9      	b.n	800119a <__sflush_r+0xda>
 80011c6:	bf00      	nop
 80011c8:	20400001 	.word	0x20400001

080011cc <_fflush_r>:
 80011cc:	b538      	push	{r3, r4, r5, lr}
 80011ce:	690b      	ldr	r3, [r1, #16]
 80011d0:	4605      	mov	r5, r0
 80011d2:	460c      	mov	r4, r1
 80011d4:	b1db      	cbz	r3, 800120e <_fflush_r+0x42>
 80011d6:	b118      	cbz	r0, 80011e0 <_fflush_r+0x14>
 80011d8:	6983      	ldr	r3, [r0, #24]
 80011da:	b90b      	cbnz	r3, 80011e0 <_fflush_r+0x14>
 80011dc:	f7ff fa8e 	bl	80006fc <__sinit>
 80011e0:	4b0c      	ldr	r3, [pc, #48]	; (8001214 <_fflush_r+0x48>)
 80011e2:	429c      	cmp	r4, r3
 80011e4:	d109      	bne.n	80011fa <_fflush_r+0x2e>
 80011e6:	686c      	ldr	r4, [r5, #4]
 80011e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011ec:	b17b      	cbz	r3, 800120e <_fflush_r+0x42>
 80011ee:	4621      	mov	r1, r4
 80011f0:	4628      	mov	r0, r5
 80011f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011f6:	f7ff bf63 	b.w	80010c0 <__sflush_r>
 80011fa:	4b07      	ldr	r3, [pc, #28]	; (8001218 <_fflush_r+0x4c>)
 80011fc:	429c      	cmp	r4, r3
 80011fe:	d101      	bne.n	8001204 <_fflush_r+0x38>
 8001200:	68ac      	ldr	r4, [r5, #8]
 8001202:	e7f1      	b.n	80011e8 <_fflush_r+0x1c>
 8001204:	4b05      	ldr	r3, [pc, #20]	; (800121c <_fflush_r+0x50>)
 8001206:	429c      	cmp	r4, r3
 8001208:	bf08      	it	eq
 800120a:	68ec      	ldreq	r4, [r5, #12]
 800120c:	e7ec      	b.n	80011e8 <_fflush_r+0x1c>
 800120e:	2000      	movs	r0, #0
 8001210:	bd38      	pop	{r3, r4, r5, pc}
 8001212:	bf00      	nop
 8001214:	0800146c 	.word	0x0800146c
 8001218:	0800148c 	.word	0x0800148c
 800121c:	0800144c 	.word	0x0800144c

08001220 <_lseek_r>:
 8001220:	b538      	push	{r3, r4, r5, lr}
 8001222:	4c07      	ldr	r4, [pc, #28]	; (8001240 <_lseek_r+0x20>)
 8001224:	4605      	mov	r5, r0
 8001226:	4608      	mov	r0, r1
 8001228:	4611      	mov	r1, r2
 800122a:	2200      	movs	r2, #0
 800122c:	6022      	str	r2, [r4, #0]
 800122e:	461a      	mov	r2, r3
 8001230:	f7ff f8be 	bl	80003b0 <_lseek>
 8001234:	1c43      	adds	r3, r0, #1
 8001236:	d102      	bne.n	800123e <_lseek_r+0x1e>
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	b103      	cbz	r3, 800123e <_lseek_r+0x1e>
 800123c:	602b      	str	r3, [r5, #0]
 800123e:	bd38      	pop	{r3, r4, r5, pc}
 8001240:	2000008c 	.word	0x2000008c

08001244 <__swhatbuf_r>:
 8001244:	b570      	push	{r4, r5, r6, lr}
 8001246:	460e      	mov	r6, r1
 8001248:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800124c:	2900      	cmp	r1, #0
 800124e:	b096      	sub	sp, #88	; 0x58
 8001250:	4614      	mov	r4, r2
 8001252:	461d      	mov	r5, r3
 8001254:	da07      	bge.n	8001266 <__swhatbuf_r+0x22>
 8001256:	2300      	movs	r3, #0
 8001258:	602b      	str	r3, [r5, #0]
 800125a:	89b3      	ldrh	r3, [r6, #12]
 800125c:	061a      	lsls	r2, r3, #24
 800125e:	d410      	bmi.n	8001282 <__swhatbuf_r+0x3e>
 8001260:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001264:	e00e      	b.n	8001284 <__swhatbuf_r+0x40>
 8001266:	466a      	mov	r2, sp
 8001268:	f000 f8b2 	bl	80013d0 <_fstat_r>
 800126c:	2800      	cmp	r0, #0
 800126e:	dbf2      	blt.n	8001256 <__swhatbuf_r+0x12>
 8001270:	9a01      	ldr	r2, [sp, #4]
 8001272:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001276:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800127a:	425a      	negs	r2, r3
 800127c:	415a      	adcs	r2, r3
 800127e:	602a      	str	r2, [r5, #0]
 8001280:	e7ee      	b.n	8001260 <__swhatbuf_r+0x1c>
 8001282:	2340      	movs	r3, #64	; 0x40
 8001284:	2000      	movs	r0, #0
 8001286:	6023      	str	r3, [r4, #0]
 8001288:	b016      	add	sp, #88	; 0x58
 800128a:	bd70      	pop	{r4, r5, r6, pc}

0800128c <__smakebuf_r>:
 800128c:	898b      	ldrh	r3, [r1, #12]
 800128e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001290:	079d      	lsls	r5, r3, #30
 8001292:	4606      	mov	r6, r0
 8001294:	460c      	mov	r4, r1
 8001296:	d507      	bpl.n	80012a8 <__smakebuf_r+0x1c>
 8001298:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800129c:	6023      	str	r3, [r4, #0]
 800129e:	6123      	str	r3, [r4, #16]
 80012a0:	2301      	movs	r3, #1
 80012a2:	6163      	str	r3, [r4, #20]
 80012a4:	b002      	add	sp, #8
 80012a6:	bd70      	pop	{r4, r5, r6, pc}
 80012a8:	ab01      	add	r3, sp, #4
 80012aa:	466a      	mov	r2, sp
 80012ac:	f7ff ffca 	bl	8001244 <__swhatbuf_r>
 80012b0:	9900      	ldr	r1, [sp, #0]
 80012b2:	4605      	mov	r5, r0
 80012b4:	4630      	mov	r0, r6
 80012b6:	f7ff faab 	bl	8000810 <_malloc_r>
 80012ba:	b948      	cbnz	r0, 80012d0 <__smakebuf_r+0x44>
 80012bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012c0:	059a      	lsls	r2, r3, #22
 80012c2:	d4ef      	bmi.n	80012a4 <__smakebuf_r+0x18>
 80012c4:	f023 0303 	bic.w	r3, r3, #3
 80012c8:	f043 0302 	orr.w	r3, r3, #2
 80012cc:	81a3      	strh	r3, [r4, #12]
 80012ce:	e7e3      	b.n	8001298 <__smakebuf_r+0xc>
 80012d0:	4b0d      	ldr	r3, [pc, #52]	; (8001308 <__smakebuf_r+0x7c>)
 80012d2:	62b3      	str	r3, [r6, #40]	; 0x28
 80012d4:	89a3      	ldrh	r3, [r4, #12]
 80012d6:	6020      	str	r0, [r4, #0]
 80012d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012dc:	81a3      	strh	r3, [r4, #12]
 80012de:	9b00      	ldr	r3, [sp, #0]
 80012e0:	6163      	str	r3, [r4, #20]
 80012e2:	9b01      	ldr	r3, [sp, #4]
 80012e4:	6120      	str	r0, [r4, #16]
 80012e6:	b15b      	cbz	r3, 8001300 <__smakebuf_r+0x74>
 80012e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012ec:	4630      	mov	r0, r6
 80012ee:	f000 f881 	bl	80013f4 <_isatty_r>
 80012f2:	b128      	cbz	r0, 8001300 <__smakebuf_r+0x74>
 80012f4:	89a3      	ldrh	r3, [r4, #12]
 80012f6:	f023 0303 	bic.w	r3, r3, #3
 80012fa:	f043 0301 	orr.w	r3, r3, #1
 80012fe:	81a3      	strh	r3, [r4, #12]
 8001300:	89a3      	ldrh	r3, [r4, #12]
 8001302:	431d      	orrs	r5, r3
 8001304:	81a5      	strh	r5, [r4, #12]
 8001306:	e7cd      	b.n	80012a4 <__smakebuf_r+0x18>
 8001308:	080006c5 	.word	0x080006c5

0800130c <__malloc_lock>:
 800130c:	4770      	bx	lr

0800130e <__malloc_unlock>:
 800130e:	4770      	bx	lr

08001310 <_free_r>:
 8001310:	b538      	push	{r3, r4, r5, lr}
 8001312:	4605      	mov	r5, r0
 8001314:	2900      	cmp	r1, #0
 8001316:	d045      	beq.n	80013a4 <_free_r+0x94>
 8001318:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800131c:	1f0c      	subs	r4, r1, #4
 800131e:	2b00      	cmp	r3, #0
 8001320:	bfb8      	it	lt
 8001322:	18e4      	addlt	r4, r4, r3
 8001324:	f7ff fff2 	bl	800130c <__malloc_lock>
 8001328:	4a1f      	ldr	r2, [pc, #124]	; (80013a8 <_free_r+0x98>)
 800132a:	6813      	ldr	r3, [r2, #0]
 800132c:	4610      	mov	r0, r2
 800132e:	b933      	cbnz	r3, 800133e <_free_r+0x2e>
 8001330:	6063      	str	r3, [r4, #4]
 8001332:	6014      	str	r4, [r2, #0]
 8001334:	4628      	mov	r0, r5
 8001336:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800133a:	f7ff bfe8 	b.w	800130e <__malloc_unlock>
 800133e:	42a3      	cmp	r3, r4
 8001340:	d90c      	bls.n	800135c <_free_r+0x4c>
 8001342:	6821      	ldr	r1, [r4, #0]
 8001344:	1862      	adds	r2, r4, r1
 8001346:	4293      	cmp	r3, r2
 8001348:	bf04      	itt	eq
 800134a:	681a      	ldreq	r2, [r3, #0]
 800134c:	685b      	ldreq	r3, [r3, #4]
 800134e:	6063      	str	r3, [r4, #4]
 8001350:	bf04      	itt	eq
 8001352:	1852      	addeq	r2, r2, r1
 8001354:	6022      	streq	r2, [r4, #0]
 8001356:	6004      	str	r4, [r0, #0]
 8001358:	e7ec      	b.n	8001334 <_free_r+0x24>
 800135a:	4613      	mov	r3, r2
 800135c:	685a      	ldr	r2, [r3, #4]
 800135e:	b10a      	cbz	r2, 8001364 <_free_r+0x54>
 8001360:	42a2      	cmp	r2, r4
 8001362:	d9fa      	bls.n	800135a <_free_r+0x4a>
 8001364:	6819      	ldr	r1, [r3, #0]
 8001366:	1858      	adds	r0, r3, r1
 8001368:	42a0      	cmp	r0, r4
 800136a:	d10b      	bne.n	8001384 <_free_r+0x74>
 800136c:	6820      	ldr	r0, [r4, #0]
 800136e:	4401      	add	r1, r0
 8001370:	1858      	adds	r0, r3, r1
 8001372:	4282      	cmp	r2, r0
 8001374:	6019      	str	r1, [r3, #0]
 8001376:	d1dd      	bne.n	8001334 <_free_r+0x24>
 8001378:	6810      	ldr	r0, [r2, #0]
 800137a:	6852      	ldr	r2, [r2, #4]
 800137c:	605a      	str	r2, [r3, #4]
 800137e:	4401      	add	r1, r0
 8001380:	6019      	str	r1, [r3, #0]
 8001382:	e7d7      	b.n	8001334 <_free_r+0x24>
 8001384:	d902      	bls.n	800138c <_free_r+0x7c>
 8001386:	230c      	movs	r3, #12
 8001388:	602b      	str	r3, [r5, #0]
 800138a:	e7d3      	b.n	8001334 <_free_r+0x24>
 800138c:	6820      	ldr	r0, [r4, #0]
 800138e:	1821      	adds	r1, r4, r0
 8001390:	428a      	cmp	r2, r1
 8001392:	bf04      	itt	eq
 8001394:	6811      	ldreq	r1, [r2, #0]
 8001396:	6852      	ldreq	r2, [r2, #4]
 8001398:	6062      	str	r2, [r4, #4]
 800139a:	bf04      	itt	eq
 800139c:	1809      	addeq	r1, r1, r0
 800139e:	6021      	streq	r1, [r4, #0]
 80013a0:	605c      	str	r4, [r3, #4]
 80013a2:	e7c7      	b.n	8001334 <_free_r+0x24>
 80013a4:	bd38      	pop	{r3, r4, r5, pc}
 80013a6:	bf00      	nop
 80013a8:	20000084 	.word	0x20000084

080013ac <_read_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4c07      	ldr	r4, [pc, #28]	; (80013cc <_read_r+0x20>)
 80013b0:	4605      	mov	r5, r0
 80013b2:	4608      	mov	r0, r1
 80013b4:	4611      	mov	r1, r2
 80013b6:	2200      	movs	r2, #0
 80013b8:	6022      	str	r2, [r4, #0]
 80013ba:	461a      	mov	r2, r3
 80013bc:	f7fe ff98 	bl	80002f0 <_read>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_read_r+0x1e>
 80013c4:	6823      	ldr	r3, [r4, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_read_r+0x1e>
 80013c8:	602b      	str	r3, [r5, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	2000008c 	.word	0x2000008c

080013d0 <_fstat_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4c07      	ldr	r4, [pc, #28]	; (80013f0 <_fstat_r+0x20>)
 80013d4:	2300      	movs	r3, #0
 80013d6:	4605      	mov	r5, r0
 80013d8:	4608      	mov	r0, r1
 80013da:	4611      	mov	r1, r2
 80013dc:	6023      	str	r3, [r4, #0]
 80013de:	f7fe ffcc 	bl	800037a <_fstat>
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	d102      	bne.n	80013ec <_fstat_r+0x1c>
 80013e6:	6823      	ldr	r3, [r4, #0]
 80013e8:	b103      	cbz	r3, 80013ec <_fstat_r+0x1c>
 80013ea:	602b      	str	r3, [r5, #0]
 80013ec:	bd38      	pop	{r3, r4, r5, pc}
 80013ee:	bf00      	nop
 80013f0:	2000008c 	.word	0x2000008c

080013f4 <_isatty_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4c06      	ldr	r4, [pc, #24]	; (8001410 <_isatty_r+0x1c>)
 80013f8:	2300      	movs	r3, #0
 80013fa:	4605      	mov	r5, r0
 80013fc:	4608      	mov	r0, r1
 80013fe:	6023      	str	r3, [r4, #0]
 8001400:	f7fe ffcb 	bl	800039a <_isatty>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_isatty_r+0x1a>
 8001408:	6823      	ldr	r3, [r4, #0]
 800140a:	b103      	cbz	r3, 800140e <_isatty_r+0x1a>
 800140c:	602b      	str	r3, [r5, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	2000008c 	.word	0x2000008c

08001414 <_init>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	bf00      	nop
 8001418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800141a:	bc08      	pop	{r3}
 800141c:	469e      	mov	lr, r3
 800141e:	4770      	bx	lr

08001420 <_fini>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	bf00      	nop
 8001424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001426:	bc08      	pop	{r3}
 8001428:	469e      	mov	lr, r3
 800142a:	4770      	bx	lr
